================================================================================
[01] キャパシティプランニングとは - 01
[02] キャパシティプランニングとは - 02
[03] キャパシティプランニングとは - 03
[04] 総合的なリソース使用率の測定 - 01 (top)
[05] 総合的なリソース使用率の測定 - 02 (top)
[06] 総合的なリソース使用率の測定 - 03 (vmstat)
[07] 総合的なリソース使用率の測定 - 04 (vmstat)
[08] 総合的なリソース使用率の測定 - 05 (iostat)
[09] 総合的なリソース使用率の測定 - 06 (iotop)
[10] 総合的なリソース使用率の測定 - 07 (sysstat)
[11] 総合的なリソース使用率の測定 - 08 (sar)
[12] 総合的なリソース使用率の測定 - 09 (sar)
[13] 総合的なリソース使用率の測定 - 10 (sar)
[14] 総合的なリソース使用率の測定 - 11 (sar)
[15] 総合的なリソース使用率の測定 - 12 (sar)
[16] 総合的なリソース使用率の測定 - 13 (sar)
[17] 総合的なリソース使用率の測定 - 14 (sadf)
[18] 総合的なリソース使用率の測定 - 15 (uptime)
[19] 総合的なリソース使用率の測定 - 16 (w)
[20] CPU使用率の測定 - 01 (ps)
[21] CPU使用率の測定 - 02 (ps)
[22] CPU使用率の測定 - 03 (pstree)
[23] CPU使用率の測定 - 04 (lsof)
[24] メモリおよびスワップ使用量の測定 - 01 (free)
[25] メモリおよびスワップ使用量の測定 - 02 (cat /proc/meminfo)
[26] ディスク使用量の測定 - 01 (df)
[27] ディスク使用量の測定 - 02 (df)
[28] ネットワークトラフィックの測定 - 01 (netstat)
[29] ネットワークトラフィックの測定 - 02 (netstat)
[30] ネットワークトラフィックの測定 - 03 (ss)
[31] ネットワークトラフィックの測定 - 04 (ss)
[32] ネットワークトラフィックの測定 - 05 (netperf)
[33] ネットワークトラフィックの測定 - 06 (iptraf-ng)
================================================================================
[01]
  キャパシティプランニングとは - 01
  
[内容]
  ## 作業内容
    リソース使用率の測定の準備で、負荷コマンド(stress)からCPU負荷を実行する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    stress -q     // 起動メッセージ非表示
    stress -t XX  // タイムアウト(XX秒後)
    stress -c XX  // CPU負荷の子プロセスの生成数(XX個)
    stress -m XX  // メモリ負荷の子プロセスの生成数(XX個)
    stress -d XX  // HDD負荷の子プロセスの生成数(XX個)
    stress -t XX  // タイムアウト(XX秒後)
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install epel-release (リポジトリのインストール)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> リポジトリ「EPEL」のインストール
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo yum -y install stress (コマンドのインストール)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ vi sample01.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # CPU負荷プロセス、5秒後タイムアウト、起動メッセージ非表示、バックグラウンド実行
  stress -c 1 -t 5 -q &
  
  # 更新間隔1秒、更新回数9回、メガバイト単位
  vmstat 1 9 -S m
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ bash sample01.sh
  
  コマンドの実行結果
  --------------------------------------------------
  ## PROC ##  ######## Memory #########  ## Swap ##  ### IO ###  ## System ##  ###### CPU ######
     r  b     swpd   free   buff  cache   si   so     bi    bo     in   cs      us sy id wa st
     3  0        0    399      2    489    0    0     16    27     24   25       1  0 99  0  0
     1  0        0    399      2    489    0    0      0     0   1032   62     100  0  0  0  0  // CPU負荷
     1  0        0    399      2    489    0    0      0     0   1015   55     100  0  0  0  0  // CPU負荷
     1  0        0    399      2    489    0    0      0     0   1009   52      99  0  0  0  1  // CPU負荷
     1  0        0    399      2    489    0    0      0     0   1009   51     100  0  0  0  0  // CPU負荷
     0  0        0    399      2    489    0    0      0     0    960   65      94  0  6  0  0  // CPU負荷
     0  0        0    399      2    489    0    0      0     0     31   51       0  1 99  0  0
     0  0        0    399      2    489    0    0      0     0     32   52       0  1 99  0  0
     0  0        0    399      2    489    0    0      0     0     35   55       1  0 99  0  0
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[02]
  キャパシティプランニングとは - 02
  
[内容]
  ## 作業内容
    リソース使用率の測定の準備で、負荷コマンド(stress)からメモリ負荷を実行する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    stress -q     // 起動メッセージ非表示
    stress -t XX  // タイムアウト(XX秒後)
    stress -c XX  // CPU負荷の子プロセスの生成数(XX個)
    stress -m XX  // メモリ負荷の子プロセスの生成数(XX個)
    stress -d XX  // HDD負荷の子プロセスの生成数(XX個)
    stress -t XX  // タイムアウト(XX秒後)
  
[確認]
  vm12$ cd $HOME
  vm12$ vi sample02.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # メモリ負荷プロセス、5秒後タイムアウト、起動メッセージ非表示、バックグラウンド実行
  stress -m 1 -t 5 -q &
  
  # 更新間隔1秒、更新回数9回、メガバイト単位
  vmstat 1 9 -S m
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ bash sample02.sh
  
  コマンドの実行結果
  --------------------------------------------------
  ## PROC ##  ######## Memory #########  ## Swap ##  ### IO ###  ## System ##  ###### CPU ######
     r  b     swpd   free   buff  cache   si   so     bi    bo     in   cs      us sy id wa st
     2  0        0    399      2    489    0    0     15    26     24   25       1  0 99  0  0
     1  0        0    165      2    489    0    0      0     0   1026   47       1 98  0  0  1  // メモリ負荷
     1  0        0    144      2    489    0    0      0     3   1060  120       6 94  0  0  0  // メモリ負荷
     1  0        0    137      2    489    0    0      0     0   1064  134       4 96  0  0  0  // メモリ負荷
     1  0        0    316      2    489    0    0      0     0   1081  132       4 96  0  0  0  // メモリ負荷
     0  0        0    399      2    489    0    0      0     0   1043  148       4 93  3  0  0  // メモリ負荷
     0  0        0    399      2    489    0    0      0     0     30   50       0  1 99  0  0
     0  0        0    399      2    489    0    0      0     0     36   54       0  1 99  0  0
     0  0        0    399      2    489    0    0      0     0     33   51       0  1 99  0  0
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[03]
  キャパシティプランニングとは - 03
  
[内容]
  ## 作業内容
    リソース使用率の測定の準備で、負荷コマンド(stress)からHDD負荷を実行する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    stress -q     // 起動メッセージ非表示
    stress -t XX  // タイムアウト(XX秒後)
    stress -c XX  // CPU負荷の子プロセスの生成数(XX個)
    stress -m XX  // メモリ負荷の子プロセスの生成数(XX個)
    stress -d XX  // HDD負荷の子プロセスの生成数(XX個)
    stress -t XX  // タイムアウト(XX秒後)
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install sysstat (パッケージのインストール)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ vi sample03.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # HDD負荷プロセス、5秒後タイムアウト、起動メッセージ非表示、バックグラウンド実行
  stress -d 1 -t 5 -q &
  
  # 数秒待機
  sleep 1
  
  # 起動からの統計省略、ディスクIOのみ表示、更新間隔1秒、更新回数9回
  iostat -y -d 1 9
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ bash sample03.sh
  
  コマンドの実行結果
  --------------------------------------------------
  Linux 3.10.0-1160.el7.x86_64 (vm12)  2021年12月22日  _x86_64_ (1 CPU)
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn  // HDD負荷
  vda             378.72         0.00    171617.02          0     161320  // HDD負荷
  dm-0            498.94         0.00    226587.23          0     212992  // HDD負荷
  dm-1              0.00         0.00         0.00          0          0  // HDD負荷
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn  // HDD負荷
  vda              17.89         0.00      8092.63          0       7688  // HDD負荷
  dm-0            163.16         0.00     78138.95          0      74232  // HDD負荷
  dm-1              0.00         0.00         0.00          0          0  // HDD負荷
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn  // HDD負荷
  vda              26.32         0.00     12404.21          0      11784  // HDD負荷
  dm-0             28.42         0.00     13928.42          0      13232  // HDD負荷
  dm-1              0.00         0.00         0.00          0          0  // HDD負荷
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn  // HDD負荷
  vda               9.18         0.00      4628.57          0       4536  // HDD負荷
  dm-0              8.16         0.00      3730.61          0       3656  // HDD負荷
  dm-1              0.00         0.00         0.00          0          0  // HDD負荷
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn  // HDD負荷
  vda              21.43         0.00     10032.65          0       9832  // HDD負荷
  dm-0             16.33         0.00      7330.61          0       7184  // HDD負荷
  dm-1              0.00         0.00         0.00          0          0  // HDD負荷
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
  vda              12.00         0.00      5232.00          0       5232
  dm-0              0.00         0.00         0.00          0          0
  dm-1              0.00         0.00         0.00          0          0
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
  vda              18.56         0.00      8511.34          0       8256
  dm-0              0.00         0.00         0.00          0          0
  dm-1              0.00         0.00         0.00          0          0
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
  vda              32.32         0.00     15402.02          0      15248
  dm-0              0.00         0.00         0.00          0          0
  dm-1              0.00         0.00         0.00          0          0
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
  vda              21.43         0.00     10351.02          0      10144
  dm-0              0.00         0.00         0.00          0          0
  dm-1              0.00         0.00         0.00          0          0
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[04]
  総合的なリソース使用率の測定 - 01 (top)
  
[内容]
  ## 作業内容
    CPU負荷をコマンド(top)で測定する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    top -b     // バッチモード
    top -d XX  // 更新間隔(XX 秒)
    top -n XX  // 更新回数(XX 回)を越えた後で自動的に終了
    top -u XX  // 指定ユーザーのプロセスのみ表示
    top -p XX  // 指定PIDのプロセスのみ表示
    top -w XX  // 出力幅(XX 桁数)
  
[確認]
  vm12$ cd $HOME
  vm12$ top -> 対話モード
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 対話モードは練習あるのみ！
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ vi sample04.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # CPU負荷プロセス、5秒後タイムアウト、起動メッセージ非表示、バックグラウンド実行
  stress -c 1 -t 5 -q &
  
  # バッチモード、ユーザー(makoto)、更新間隔1秒、更新回数9回、出力幅100
  top -b -u makoto -d 1 -n 9 -w 100 | grep stress
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ bash sample04.sh
  
  コマンドの実行結果
  --------------------------------------------------
    PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
   9163 makoto    20   0    7308     92      0 R  71.4  0.0   0:00.34 stress  // 1回目 -> 項目「%CPU」からCPU負荷を確認
   9160 makoto    20   0    7308    424    344 S   0.0  0.0   0:00.00 stress
   9163 makoto    20   0    7308     92      0 R  99.0  0.0   0:01.35 stress  // 2回目
   9160 makoto    20   0    7308    424    344 S   0.0  0.0   0:00.00 stress
   9163 makoto    20   0    7308     92      0 R  99.0  0.0   0:02.34 stress  // 3回目
   9160 makoto    20   0    7308    424    344 S   0.0  0.0   0:00.00 stress
   9163 makoto    20   0    7308     92      0 R  99.0  0.0   0:03.34 stress  // 4回目
   9160 makoto    20   0    7308    424    344 S   0.0  0.0   0:00.00 stress
   9163 makoto    20   0    7308     92      0 R  99.0  0.0   0:04.34 stress  // 5回目
   9160 makoto    20   0    7308    424    344 S   0.0  0.0   0:00.00 stress
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[05]
  総合的なリソース使用率の測定 - 02 (top)
  
[内容]
  ## 作業内容
    メモリ負荷をコマンド(top)で測定する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    top -b     // バッチモード
    top -d XX  // 更新間隔(XX 秒)
    top -n XX  // 更新回数(XX 回)を越えた後で自動的に終了
    top -u XX  // 指定ユーザーのプロセスのみ表示
    top -p XX  // 指定PIDのプロセスのみ表示
    top -w XX  // 出力幅(XX 桁数)
  
[確認]
  vm12$ cd $HOME
  vm12$ top -> 対話モード
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 対話モードは練習あるのみ！
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ vi sample05.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # メモリ負荷プロセス、5秒後タイムアウト、起動メッセージ非表示、バックグラウンド実行
  stress -m 1 -t 5 -q &
  
  # バッチモード、ユーザー(makoto)、更新間隔1秒、更新回数9回、出力幅100
  top -b -u makoto -d 1 -n 9 -w 100 | grep stress
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ bash sample05.sh
  
  コマンドの実行結果
  --------------------------------------------------
    PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
   9179 makoto    20   0  269456  43484    124 R  77.8  4.3   0:00.15 stress  // 1回目 -> 項目「%MEM」からメモリ負荷を確認
   9176 makoto    20   0    7308    424    344 S   0.0  0.0   0:00.00 stress
   9179 makoto    20   0  269456    216    124 R  98.0  0.0   0:01.14 stress  // 2回目
   9176 makoto    20   0    7308    424    344 S   0.0  0.0   0:00.00 stress
   9179 makoto    20   0  269456  45532    124 R  98.0  4.5   0:02.14 stress  // 3回目
   9176 makoto    20   0    7308    424    344 S   0.0  0.0   0:00.00 stress
   9179 makoto    20   0  269456    476    124 R  98.0  0.0   0:03.13 stress  // 4回目
   9176 makoto    20   0    7308    424    344 S   0.0  0.0   0:00.00 stress
   9179 makoto    20   0  269456 238060    124 R  99.0 23.5   0:04.12 stress  // 5回目
   9176 makoto    20   0    7308    424    344 S   0.0  0.0   0:00.00 stress
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[06]
  総合的なリソース使用率の測定 - 03 (vmstat)
  
[内容]
  ## 作業内容
    CPU負荷をコマンド(vmstat)で測定する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    vmstat XX YY       // 更新間隔(XX秒)、更新回数(YY回)
    vmstat XX YY -S k  // 更新間隔(XX秒)、更新回数(YY回)、キロバイト単位
    vmstat XX YY -S m  // 更新間隔(XX秒)、更新回数(YY回)、メガバイト単位
  
[確認]
  上記の「01」を参照
  
================================================================================
[07]
  総合的なリソース使用率の測定 - 04 (vmstat)
  
[内容]
  ## 作業内容
    メモリ負荷をコマンド(vmstat)で測定する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    vmstat XX YY       // 更新間隔(XX秒)、更新回数(YY回)
    vmstat XX YY -S k  // 更新間隔(XX秒)、更新回数(YY回)、キロバイト単位
    vmstat XX YY -S m  // 更新間隔(XX秒)、更新回数(YY回)、メガバイト単位
  
[確認]
  上記の「02」を参照
  
================================================================================
[08]
  総合的なリソース使用率の測定 - 05 (iostat)
  
[内容]
  ## 作業内容
    HDD負荷をコマンド(iostat)で測定する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    iostat -c     // CPU情報のみ出力
    iostat -d     // ディスクIOのみ出力
    iostat -k     // ブロック単位ではなくキロバイト単位
    iostat -m     // ブロック単位ではなくメガバイト単位
    iostat -t     // 時刻を表示
    iostat XX YY  // 更新間隔(XX秒)、更新回数(YY回)
  
[確認]
  上記の「03」を参照
  
================================================================================
[09]
  総合的なリソース使用率の測定 - 06 (iotop)
  
[内容]
  ## 作業内容
    HDD負荷をコマンド(iotop)で測定する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    iotop -b     // 対話モードでなくバッチモード
    iotop -d XX  // 更新間隔(XX 秒)
    iotop -n XX  // 更新回数(XX 回)を越えた後で自動的に終了
    iotop -u XX  // 指定ユーザーのプロセスのみ表示
    iotop -p XX  // 指定PIDのプロセスのみ表示
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install iotop (コマンドのインストール)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ iotop -> 対話モード
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 対話モードは練習あるのみ！
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ vi sample06.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # HDD負荷プロセス、5秒後タイムアウト、起動メッセージ非表示、バックグラウンド実行
  stress -d 1 -t 5 -q &
  
  # 数秒待機
  sleep 1
  
  # バッチモード、更新間隔1秒、更新回数9回
  iotop -b -d 1 -n 9 | grep stress
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo bash sample06.sh (実行にroot権限が必要)
  
  コマンドの実行結果
  --------------------------------------------------
  // 1回目
  TID   PRIO  USER  DISK READ  DISK WRITE  SWAPIN  IO>      COMMAND
  1316  be/4  root  0.00 B/s   161.10 M/s  0.00 %  93.14 %  stress -d 1 -t 5 -q
  1314  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  stress -d 1 -t 5 -q
  1318  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  grep stress
  
  // 2回目
  TID   PRIO  USER  DISK READ  DISK WRITE  SWAPIN  IO>      COMMAND
  1314  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  stress -d 1 -t 5 -q
  1316  be/4  root  0.00 B/s     0.00 B/s  0.00 %   6.91 %  [stress]
  1318  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  grep stress
  
  // 3回目
  TID   PRIO  USER  DISK READ  DISK WRITE  SWAPIN  IO>      COMMAND
  1314  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  stress -d 1 -t 5 -q
  1316  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  [stress]
  1318  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  grep stress
  
  // 4回目
  TID   PRIO  USER  DISK READ  DISK WRITE  SWAPIN  IO>      COMMAND
  1314  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  stress -d 1 -t 5 -q
  1316  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  [stress]
  1318  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  grep stress
  
  // 5回目
  TID   PRIO  USER  DISK READ  DISK WRITE  SWAPIN  IO>      COMMAND
  1314  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  stress -d 1 -t 5 -q
  1316  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  [stress]
  1318  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  grep stress
  
  // 6回目
  TID   PRIO  USER  DISK READ  DISK WRITE  SWAPIN  IO>      COMMAND
  1314  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  stress -d 1 -t 5 -q
  1316  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  [stress]
  1318  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  grep stress
  
  // 7回目
  TID   PRIO  USER  DISK READ  DISK WRITE  SWAPIN  IO>      COMMAND
  1314  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  stress -d 1 -t 5 -q
  1316  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  [stress]
  1318  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  grep stress
  
  // 8回目
  TID   PRIO  USER  DISK READ  DISK WRITE  SWAPIN  IO>      COMMAND
  1314  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  stress -d 1 -t 5 -q
  1316  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  [stress]
  1318  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  grep stress
  
  // 9回目
  TID   PRIO  USER  DISK READ  DISK WRITE  SWAPIN  IO>      COMMAND
  1314  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  stress -d 1 -t 5 -q
  1316  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  [stress]
  1318  be/4  root  0.00 B/s     0.00 B/s  0.00 %   0.00 %  grep stress
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[10]
  総合的なリソース使用率の測定 - 07 (sysstat)
  
[内容]
  ## 作業内容
    パッケージの各種調査を行う
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## 調査内容
    sysstat                 // パッケージ名
    /etc/sysconfig/sysstat  // 設定ファイル
    /etc/cron.d/sysstat     // CRON
    /var/log/sa/saXX        // 収集データの格納先
    sar                     // コマンド - 収集データのレポート作成
    sadf                    // コマンド - 収集データのレポート書式変更
  
[確認]
  vm12$ cd $HOME
  vm12$ yum list installed | grep sysstat
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> パッケージのインストール確認
  --------------------------------------------------
  
  vm12$ cd /etc/sysconfig
  vm12$ cat sysstat | grep -vE '^#|^$'
  
  コマンドの実行結果
  --------------------------------------------------
  HISTORY=28              // デフォルトで28日保存
  COMPRESSAFTER=31        // 31日経過で圧縮
  SADC_OPTIONS="-S DISK"  // データ収集コマンドのオプション設定
  ZIP="bzip2"             // 圧縮形式
  --------------------------------------------------
  
  vm12$ cd /etc/cron.d
  vm12$ sudo grep -vE '^#|^$' sysstat
  
  コマンドの実行結果
  --------------------------------------------------
  */10 *  *  *  *  root  /usr/lib64/sa/sa1 1 1  // 10分毎に「sa1 1 1」実行
  53   23 *  *  *  root  /usr/lib64/sa/sa2 -A   // 毎日23時53分に「sa2 -A」で一日分の集計処理
  --------------------------------------------------
  
  vm12$ cd /var/log/sa
  vm12$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 28K 12月 22 22:50 sa22
  -rw-r--r--. 1 root root 16K 12月 23 09:30 sa23
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ which sar
  
  コマンドの実行結果
  --------------------------------------------------
  /bin/sar
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ which sadf
  
  コマンドの実行結果
  --------------------------------------------------
  /bin/sadf
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[11]
  総合的なリソース使用率の測定 - 08 (sar)
  
[内容]
  ## 作業内容
    23日のログの時刻XX(08:40:00)から時刻YY(09:20:00)のCPU統計のレポートを確認
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    sar XX YY       // 更新間隔(XX秒)、更新回数(YY回)
    sar -o XX       // 出力ファイル(XX)を指定
    sar -u          // CPU
    sar -r          // メモリ
    sar -W          // スワップ
    sar -b          // ディスクIO
    sar -n DEV      // NIC
    sar -n EDEV     // NICエラー
    sar -f XX       // ログファイル(XX)を指定
    sar -s XX -e YY // 時刻XX(HH:MM:SS)から時刻YY(HH:MM:SS)を指定
  
[確認]
  vm12$ cd /var/log/sa
  vm12$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 28K 12月 22 22:50 sa22
  -rw-r--r--. 1 root root 16K 12月 23 09:30 sa23
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sar -u -f /var/log/sa/sa23 -s 08:40:00 -e 09:20:00
  
  コマンドの実行結果
  --------------------------------------------------
  Linux 3.10.0-1160.el7.x86_64 (vm12)  2021年12月23日  _x86_64_ (1 CPU)
  
  08時40分01秒     CPU     %user     %nice   %system   %iowait    %steal     %idle
  08時50分01秒     all      0.46      0.00      0.56      1.51      0.04     97.44
  09時00分04秒     all      0.29      0.00      1.36     15.15      0.02     83.18
  09時10分01秒     all      0.03      0.00      0.07      0.03      0.00     99.87
  平均値:          all      0.26      0.00      0.65      5.44      0.02     93.63
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[12]
  総合的なリソース使用率の測定 - 09 (sar)
  
[内容]
  ## 作業内容
    23日のログの時刻XX(08:40:00)から時刻YY(09:20:00)のメモリ統計のレポートを確認
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    sar XX YY       // 更新間隔(XX秒)、更新回数(YY回)
    sar -o XX       // 出力ファイル(XX)を指定
    sar -u          // CPU
    sar -r          // メモリ
    sar -W          // スワップ
    sar -b          // ディスクIO
    sar -n DEV      // NIC
    sar -n EDEV     // NICエラー
    sar -f XX       // ログファイル(XX)を指定
    sar -s XX -e YY // 時刻XX(HH:MM:SS)から時刻YY(HH:MM:SS)を指定
  
[確認]
  vm12$ cd /var/log/sa
  vm12$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 28K 12月 22 22:50 sa22
  -rw-r--r--. 1 root root 16K 12月 23 09:30 sa23
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sar -r -f /var/log/sa/sa23 -s 08:40:00 -e 09:20:00
  
  コマンドの実行結果
  --------------------------------------------------
  Linux 3.10.0-1160.el7.x86_64 (vm12)  2021年12月23日  _x86_64_ (1 CPU)
  
  08時40分01秒 kbmemfree kbmemused  %memused kbbuffers  kbcached  kbcommit   %commit  kbactive   kbinact   kbdirty
  08時50分01秒    281308    733476     72.28      2108    547396    279272      8.97    153020    470900     51844
  09時00分04秒    643044    371740     36.63      2108    202536    273300      8.78    148360    125584        12
  09時10分01秒    642352    372432     36.70      2108    202716    273808      8.80    148660    125656         0
  平均値:         522235    492549     48.54      2108    317549    275460      8.85    150013    240713     17285
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[13]
  総合的なリソース使用率の測定 - 10 (sar)
  
[内容]
  ## 作業内容
    23日のログの時刻XX(08:40:00)から時刻YY(09:20:00)のスワップ統計のレポートを確認
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    sar XX YY       // 更新間隔(XX秒)、更新回数(YY回)
    sar -o XX       // 出力ファイル(XX)を指定
    sar -u          // CPU
    sar -r          // メモリ
    sar -W          // スワップ
    sar -b          // ディスクIO
    sar -n DEV      // NIC
    sar -n EDEV     // NICエラー
    sar -f XX       // ログファイル(XX)を指定
    sar -s XX -e YY // 時刻XX(HH:MM:SS)から時刻YY(HH:MM:SS)を指定
  
[確認]
  vm12$ cd /var/log/sa
  vm12$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 28K 12月 22 22:50 sa22
  -rw-r--r--. 1 root root 16K 12月 23 09:30 sa23
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sar -W -f /var/log/sa/sa23 -s 08:40:00 -e 09:20:00
  
  コマンドの実行結果
  --------------------------------------------------
  Linux 3.10.0-1160.el7.x86_64 (vm12)  2021年12月23日  _x86_64_ (1 CPU)
  
  08時40分01秒  pswpin/s pswpout/s
  08時50分01秒      0.00      0.00
  09時00分04秒      0.00      0.00
  09時10分01秒      0.00      0.00
  平均値:           0.00      0.00
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[14]
  総合的なリソース使用率の測定 - 11 (sar)
  
[内容]
  ## 作業内容
    23日のログの時刻XX(08:40:00)から時刻YY(09:20:00)のディスクIO統計のレポートを確認
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    sar XX YY       // 更新間隔(XX秒)、更新回数(YY回)
    sar -o XX       // 出力ファイル(XX)を指定
    sar -u          // CPU
    sar -r          // メモリ
    sar -W          // スワップ
    sar -b          // ディスクIO
    sar -n DEV      // NIC
    sar -n EDEV     // NICエラー
    sar -f XX       // ログファイル(XX)を指定
    sar -s XX -e YY // 時刻XX(HH:MM:SS)から時刻YY(HH:MM:SS)を指定
  
[確認]
  vm12$ cd /var/log/sa
  vm12$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 28K 12月 22 22:50 sa22
  -rw-r--r--. 1 root root 16K 12月 23 09:30 sa23
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sar -b -f /var/log/sa/sa23 -s 08:40:00 -e 09:20:00
  
  コマンドの実行結果
  --------------------------------------------------
  Linux 3.10.0-1160.el7.x86_64 (vm12)  2021年12月23日  _x86_64_ (1 CPU)
  
  08時40分01秒       tps      rtps      wtps     bread/s     bwrtn/s
  08時50分01秒      4.47      2.30      2.17      399.32     1663.80
  09時00分04秒      6.62      0.02      6.61        7.98     6364.91
  09時10分01秒      0.09      0.02      0.07        0.42        0.81
  平均値:           3.68      0.78      2.90      136.85     2624.93
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[15]
  総合的なリソース使用率の測定 - 12 (sar)
  
[内容]
  ## 作業内容
    23日のログの時刻XX(08:40:00)から時刻YY(09:20:00)のNIC統計のレポートを確認
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    sar XX YY       // 更新間隔(XX秒)、更新回数(YY回)
    sar -o XX       // 出力ファイル(XX)を指定
    sar -u          // CPU
    sar -r          // メモリ
    sar -W          // スワップ
    sar -b          // ディスクIO
    sar -n DEV      // NIC
    sar -n EDEV     // NICエラー
    sar -f XX       // ログファイル(XX)を指定
    sar -s XX -e YY // 時刻XX(HH:MM:SS)から時刻YY(HH:MM:SS)を指定
  
[確認]
  vm12$ cd /var/log/sa
  vm12$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 28K 12月 22 22:50 sa22
  -rw-r--r--. 1 root root 16K 12月 23 09:30 sa23
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sar -n DEV -f /var/log/sa/sa23 -s 08:40:00 -e 09:20:00
  
  コマンドの実行結果
  --------------------------------------------------
  Linux 3.10.0-1160.el7.x86_64 (vm12)  2021年12月23日  _x86_64_ (1 CPU)
  
  08時40分01秒     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s
  08時50分01秒      eth0      0.75      0.30      0.17      0.02      0.00      0.00      0.00
  08時50分01秒        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00
  09時00分04秒      eth0      0.58      0.05      0.03      0.00      0.00      0.00      0.00
  09時00分04秒        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00
  09時10分01秒      eth0      0.52      0.02      0.03      0.00      0.00      0.00      0.00
  09時10分01秒        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00
  平均値:           eth0      0.62      0.13      0.08      0.01      0.00      0.00      0.00
  平均値:             lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[16]
  総合的なリソース使用率の測定 - 13 (sar)
  
[内容]
  ## 作業内容
    23日のログの時刻XX(08:40:00)から時刻YY(09:20:00)のNICエラー統計のレポートを確認
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    sar XX YY       // 更新間隔(XX秒)、更新回数(YY回)
    sar -o XX       // 出力ファイル(XX)を指定
    sar -u          // CPU
    sar -r          // メモリ
    sar -W          // スワップ
    sar -b          // ディスクIO
    sar -n DEV      // NIC
    sar -n EDEV     // NICエラー
    sar -f XX       // ログファイル(XX)を指定
    sar -s XX -e YY // 時刻XX(HH:MM:SS)から時刻YY(HH:MM:SS)を指定
  
[確認]
  vm12$ cd /var/log/sa
  vm12$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 28K 12月 22 22:50 sa22
  -rw-r--r--. 1 root root 16K 12月 23 09:30 sa23
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sar -n EDEV -f /var/log/sa/sa23 -s 08:40:00 -e 09:20:00
  
  コマンドの実行結果
  --------------------------------------------------
  Linux 3.10.0-1160.el7.x86_64 (vm12)  2021年12月23日  _x86_64_ (1 CPU)
  
  08時40分01秒     IFACE   rxerr/s   txerr/s    coll/s  rxdrop/s  txdrop/s  txcarr/s  rxfram/s  rxfifo/s  txfifo/s
  08時50分01秒      eth0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00
  08時50分01秒        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00
  09時00分04秒      eth0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00
  09時00分04秒        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00
  09時10分01秒      eth0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00
  09時10分01秒        lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00
  平均値:           eth0      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00
  平均値:             lo      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00      0.00
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[17]
  総合的なリソース使用率の測定 - 14 (sadf)
  
[内容]
  ## 作業内容
    23日のログの時刻XX(08:40:00)から時刻YY(09:20:00)のCPU統計のレポートをJSON形式で出力
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    sadf -j -- sarコマンド  // JSON形式 -> ログファイル指定時に「-f」を使用したらエラー
    sadf -x -- sarコマンド  // XML形式  -> ログファイル指定時に「-f」を使用したらエラー
    sadf -t                 // ローカル日時
  
[確認]
  vm12$ cd /var/log/sa
  vm12$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 28K 12月 22 22:50 sa22
  -rw-r--r--. 1 root root 16K 12月 23 09:30 sa23
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sadf -jt -- -u -s 08:40:00 -e 09:20:00 /var/log/sa/sa23
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 23日のログからCPU統計をローカル時刻、JSON形式で出力
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[18]
  総合的なリソース使用率の測定 - 15 (uptime)
  
[内容]
  ## 作業内容
    HDD負荷をかけてシステム稼働時間、ログインユーザー数、平均負荷の推移を観察する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    uptime
  
[確認]
  vm12$ cd $HOME
  vm12$ vi sample07.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # HDD負荷プロセス、5秒後タイムアウト、起動メッセージ非表示、バックグラウンド実行
  stress -d 1 -t 5 -q &
  
  # ループ処理
  for i in $(seq 1 9); do
    uptime
    sleep 1
  done
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ bash sample07.sh
  
  コマンドの実行結果
  --------------------------------------------------
  12:22:09 up  3:50,  1 user,  load average: 0.00, 0.01, 0.05  // CPU負荷よりもHDD負荷の方が効果的
  12:22:10 up  3:50,  1 user,  load average: 0.08, 0.03, 0.05
  12:22:12 up  3:50,  1 user,  load average: 0.08, 0.03, 0.05
  12:22:14 up  3:50,  1 user,  load average: 0.08, 0.03, 0.05
  12:22:15 up  3:50,  1 user,  load average: 0.16, 0.05, 0.06
  12:22:16 up  3:50,  1 user,  load average: 0.16, 0.05, 0.06
  12:22:17 up  3:50,  1 user,  load average: 0.16, 0.05, 0.06
  12:22:18 up  3:50,  1 user,  load average: 0.16, 0.05, 0.06
  12:22:19 up  3:50,  1 user,  load average: 0.16, 0.05, 0.06
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[19]
  総合的なリソース使用率の測定 - 16 (w)
  
[内容]
  ## 作業内容
    指定ユーザー(makoto)のプロセス情報を出力
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    w XX     // ユーザー(XX)のプロセス情報を出力
    w -h XX  // ヘッダを非表示
    w -s XX  // ログイン時刻、JCPU、PCPUを非表示
  
  ## 項目説明
    TTY    : 端末名
    FROM   : リモートホスト名
    LOGIN@ : ログイン時刻
    IDLE   : アイドル時間
    JCPU   : 端末から実行されている全プロセスが消費したCPU時間
    PCPU   : WHAT欄のプロセスが消費したCPU時間
    WHAT   : 実行コマンド
  
[確認]
  vm12$ cd $HOME
  vm12$ vi sample08.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # CPU負荷プロセス、5秒後タイムアウト、起動メッセージ非表示、バックグラウンド実行
  stress -c 1 -t 5 -q &
  
  # ループ処理
  for i in $(seq 1 9); do
    w -h makoto
    sleep 1
  done
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ bash sample08.sh
  
  コマンドの実行結果
  --------------------------------------------------
  USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU   WHAT
  makoto   ttyS0                     08:32    2.00s  0.99s  0.00s  stress -c 1 -t 5 -q
  makoto   ttyS0                     08:32    4.00s  2.02s  0.00s  w -h makoto
  makoto   ttyS0                     08:32    5.00s  3.04s  0.00s  w -h makoto
  makoto   ttyS0                     08:32    6.00s  4.07s  0.00s  w -h makoto
  makoto   ttyS0                     08:32    7.00s  5.09s  0.00s  w -h makoto
  makoto   ttyS0                     08:32    8.00s  0.98s  0.00s  w -h makoto
  makoto   ttyS0                     08:32    9.00s  0.99s  0.01s  w -h makoto
  makoto   ttyS0                     08:32   10.00s  0.99s  0.01s  w -h makoto
  makoto   ttyS0                     08:32   11.00s  0.98s  0.00s  w -h makoto
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[20]
  CPU使用率の測定 - 01 (ps)
  
[内容]
  ## 作業内容
    CPU負荷をコマンド(ps)で測定する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    ps a      // 端末上の全プロセス表示
    ps u      // 実行ユーザー表示
    ps x      // 制御端末を持たないプロセスも表示
    ps e      // 環境変数も表示
    ps r      // 実行中プロセスのみ表示
    ps l      // 長フォーマット
    ps -e     // 全プロセス表示
    ps -f     // 引数も含めた完全フォーマットで表示
    ps -l     // 長フォーマット
    ps -p XX  // XX(PID)を指定
    ps -u XX  // XX(UID)を指定
  
  ## 項目説明
    PID     : プロセスID
    PPID    : 親プロセスのPID
    %CPU    : CPU使用率
    %MEM    : メモリ使用率
    VSZ     : プロセスが使用するメモリ量
    RSS     : 現時点で使用中のメモリ量
    TTY     : 制御端末名
    STAT    : プロセス状態(S:スリープ、D:割込不可、R:実行状態、T:トレースまたは停止、Z:消滅状態、W:スワップアウト)
    START   : 実行開始時刻
    TIME    : 消費したCPU時間
    COMMAND : 実行コマンド
  
[確認]
  vm12$ cd $HOME
  vm12$ vi sample09.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # CPU負荷プロセス、5秒後タイムアウト、起動メッセージ非表示、バックグラウンド実行
  stress -c 1 -t 5 -q &
  
  # ループ処理
  for i in $(seq 1 9); do
    ps aux | grep stress
    sleep 1
  done
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ bash sample09.sh
  
  コマンドの実行結果
  --------------------------------------------------
  // 1回目
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  makoto    2131  0.0  0.0   7308   424 ttyS0    S+   12:56   0:00 stress -c 1 -t 5 -q
  makoto    2135  0.0  0.0   7308    92 ttyS0    R+   12:56   0:00 stress -c 1 -t 5 -q
  makoto    2134  0.0  0.0 112824   952 ttyS0    R+   12:56   0:00 grep stress

  // 2回目
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  makoto    2131  0.0  0.0   7308   424 ttyS0    S+   12:56   0:00 stress -c 1 -t 5 -q
  makoto    2135  102  0.0   7308    92 ttyS0    R+   12:56   0:01 stress -c 1 -t 5 -q
  makoto    2138  0.0  0.0 112824   948 ttyS0    R+   12:56   0:00 grep stress

  // 3回目
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  makoto    2131  0.0  0.0   7308   424 ttyS0    S+   12:56   0:00 stress -c 1 -t 5 -q
  makoto    2135  103  0.0   7308    92 ttyS0    R+   12:56   0:02 stress -c 1 -t 5 -q
  makoto    2141  0.0  0.0 112824   948 ttyS0    S+   12:56   0:00 grep stress

  // 4回目
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  makoto    2131  0.0  0.0   7308   424 ttyS0    S+   12:56   0:00 stress -c 1 -t 5 -q
  makoto    2135  102  0.0   7308    92 ttyS0    R+   12:56   0:03 stress -c 1 -t 5 -q
  makoto    2144  0.0  0.0 112824   948 ttyS0    S+   12:56   0:00 grep stress

  // 5回目
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  makoto    2131  0.0  0.0   7308   424 ttyS0    S+   12:56   0:00 stress -c 1 -t 5 -q
  makoto    2135  102  0.0   7308    92 ttyS0    R+   12:56   0:04 stress -c 1 -t 5 -q
  makoto    2147  0.0  0.0 112824   948 ttyS0    S+   12:56   0:00 grep stress

  // 6回目
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  makoto    2150  0.0  0.0 112824   948 ttyS0    S+   12:56   0:00 grep stress

  // 7回目
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  makoto    2153  0.0  0.0 112824   952 ttyS0    S+   12:56   0:00 grep stress

  // 8回目
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  makoto    2156  0.0  0.0 112824   952 ttyS0    S+   12:56   0:00 grep stress

  // 9回目
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  makoto    2159  0.0  0.0 112824   952 ttyS0    S+   12:56   0:00 grep stress
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[21]
  CPU使用率の測定 - 02 (ps)
  
[内容]
  ## 作業内容
    CPU負荷をコマンド(ps)で測定する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    ps a      // 端末上の全プロセス表示
    ps u      // 実行ユーザー表示
    ps x      // 制御端末を持たないプロセスも表示
    ps e      // 環境変数も表示
    ps r      // 実行中プロセスのみ表示
    ps l      // 長フォーマット
    ps -e     // 全プロセス表示
    ps -f     // 引数も含めた完全フォーマットで表示
    ps -l     // 長フォーマット
    ps -p XX  // XX(PID)を指定
    ps -u XX  // XX(UID)を指定
  
  ## 項目説明
    PID     : プロセスID
    PPID    : 親プロセスのPID
    %CPU    : CPU使用率
    %MEM    : メモリ使用率
    VSZ     : プロセスが使用するメモリ量
    RSS     : 現時点で使用中のメモリ量
    TTY     : 制御端末名
    STAT    : プロセス状態(S:スリープ、D:割込不可、R:実行状態、T:トレースまたは停止、Z:消滅状態、W:スワップアウト)
    START   : 実行開始時刻
    TIME    : 消費したCPU時間
    COMMAND : 実行コマンド
  
[確認]
  vm12$ cd $HOME
  vm12$ vi sample10.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # CPU負荷プロセス、5秒後タイムアウト、起動メッセージ非表示、バックグラウンド実行
  stress -c 1 -t 5 -q &
  
  # ループ処理
  for i in $(seq 1 9); do
    ps -ef | grep stress
    sleep 1
  done
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ bash sample10.sh
  
  コマンドの実行結果
  --------------------------------------------------
  // 1回目
  UID        PID  PPID  C STIME TTY          TIME CMD
  makoto    2193  2192  0 13:10 ttyS0    00:00:00 stress -c 1 -t 5 -q
  makoto    2197  2193  0 13:10 ttyS0    00:00:00 stress -c 1 -t 5 -q
  makoto    2196  2192  0 13:10 ttyS0    00:00:00 grep stress
  
  // 2回目
  UID        PID  PPID  C STIME TTY          TIME CMD
  makoto    2193  2192  0 13:10 ttyS0    00:00:00 stress -c 1 -t 5 -q
  makoto    2197  2193 99 13:10 ttyS0    00:00:01 stress -c 1 -t 5 -q
  makoto    2200  2192  0 13:10 ttyS0    00:00:00 grep stress
  
  // 3回目
  UID        PID  PPID  C STIME TTY          TIME CMD
  makoto    2193  2192  0 13:10 ttyS0    00:00:00 stress -c 1 -t 5 -q
  makoto    2197  2193 99 13:10 ttyS0    00:00:02 stress -c 1 -t 5 -q
  makoto    2203  2192  0 13:10 ttyS0    00:00:00 grep stress
  
  // 4回目
  UID        PID  PPID  C STIME TTY          TIME CMD
  makoto    2193  2192  0 13:10 ttyS0    00:00:00 stress -c 1 -t 5 -q
  makoto    2197  2193 99 13:10 ttyS0    00:00:03 stress -c 1 -t 5 -q
  makoto    2206  2192  0 13:10 ttyS0    00:00:00 grep stress
  
  // 5回目
  UID        PID  PPID  C STIME TTY          TIME CMD
  makoto    2193  2192  0 13:10 ttyS0    00:00:00 stress -c 1 -t 5 -q
  makoto    2197  2193 82 13:10 ttyS0    00:00:04 stress -c 1 -t 5 -q
  makoto    2209  2192  0 13:10 ttyS0    00:00:00 grep stress
  
  // 6回目
  UID        PID  PPID  C STIME TTY          TIME CMD
  makoto    2212  2192  0 13:10 ttyS0    00:00:00 grep stress
  
  // 7回目
  UID        PID  PPID  C STIME TTY          TIME CMD
  makoto    2215  2192  0 13:10 ttyS0    00:00:00 grep stress
  
  // 8回目
  UID        PID  PPID  C STIME TTY          TIME CMD
  makoto    2218  2192  0 13:10 ttyS0    00:00:00 grep stress
  
  // 9回目
  UID        PID  PPID  C STIME TTY          TIME CMD
  makoto    2221  2192  0 13:10 ttyS0    00:00:00 grep stress
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[22]
  CPU使用率の測定 - 03 (pstree)
  
[内容]
  ## 作業内容
    CPU負荷をコマンド(pstree)で測定する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド ##
    pstree XX  // PID(XX)の親子関係をツリー状で表示
    pstree -l  // 長フォーマット
    pstree -p  // PID表示
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install psmisc (コマンドのインストール)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ stress -c 3 -q &
  
  コマンドの実行結果
  --------------------------------------------------
  [1] 2414 -> PID出力
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ pstree -p $! (最後に実行されたバックグラウンドプロセスのPIDを指定)
  
  コマンドの実行結果
  --------------------------------------------------
  stress(2414)─┬─stress(2415)
                ├─stress(2416)
                └─stress(2417)
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ pkill -u makoto stress
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> Terminatedの出力があればOK
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[23]
  CPU使用率の測定 - 04 (lsof)
  
[内容]
  ## 作業内容
    全HTTPS通信をコマンド(lsof)で測定する
  
  ## 使用マシン
    HOST : localhost
    IPV4 : 192.168.1.3
    MEMO : ホスト
  
  ## コマンド
    lsof        // プロセス情報をリスト表示
    lsof -c XX  // コマンド(XX)に一致するプロセスのみ表示
    lsof -i:XX  // ポート番号(XX)へ通信しているプロセスのみ表示
    lsof -n     // DNS名前解決を行わない
    lsof -p XX  // PID(XX)のプロセスのみ表示
    lsof -u XX  // UID(XX)のプロセスのみ表示
  
[確認]
  $ cd $HOME
  $ sudo yum -y install lsof (コマンドのインストール)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  $ cd $HOME
  $ lsof -i:https -n
  
  コマンドの実行結果
  --------------------------------------------------
  COMMAND   PID    USER    FD  TYPE  DEVICE  SIZE/OFF  NODE   NAME
  code     3368  makoto   42u  IPV4  301529       0t0   TCP   192.168.1.3:38862 -> 40.77.226.250:https (SYN_SENT)
  firefox  3563  makoto   49u  IPV4  301406       0t0   TCP   192.168.1.3:41428 -> 133.152.62.71:https (ESTABLISHED)
  firefox  3563  makoto   53u  IPV4  263699       0t0   TCP   192.168.1.3:55368 -> 133.152.42.207:https (ESTABLISHED)
  firefox  3563  makoto  103u  IPV4   46986       0t0   TCP   192.168.1.3:51332 -> 52.35.145.245:https (ESTABLISHED)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[24]
  メモリおよびスワップ使用量の測定 - 01 (free)
  
[内容]
  ## 作業内容
    メモリ負荷をコマンド(free)で測定する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    free        // メモリとスワップの情報を表示
    free -b     // バイト単位で表示
    free -k     // キロバイト単位で表示
    free -m     // メガバイト単位で表示
    free -t     // 物理メモリとスワップの合計行も表示
    free -s XX  // 更新間隔(XX)を指定
    free -c XX  // 更新回数(XX)を指定
  
[確認]
  vm12$ cd $HOME
  vm12$ vi sample12.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # メモリ負荷プロセス、5秒後タイムアウト、起動メッセージ非表示、バックグラウンド実行
  stress -m 1 -t 5 -q &
  
  # 更新間隔1秒、更新回数9回、メガバイト単位
  free -s 1 -c 9 -m
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ bash sample12.sh
  
  コマンドの実行結果
  --------------------------------------------------
  // 1回目 -> メモリ負荷で「available」が増減していく
                total        used        free      shared  buff/cache   available
  Mem:            991         146         526           6         318         700
  Swap:          2047           0        2047
  
  // 2回目
                total        used        free      shared  buff/cache   available
  Mem:            991         237         435           6         318         609
  Swap:          2047           0        2047
  
  // 3回目
                total        used        free      shared  buff/cache   available
  Mem:            991         333         339           6         318         513
  Swap:          2047           0        2047
  
  // 4回目
                total        used        free      shared  buff/cache   available
  Mem:            991         371         301           6         318         475
  Swap:          2047           0        2047
  
  // 5回目
                total        used        free      shared  buff/cache   available
  Mem:            991         197         475           6         318         649
  Swap:          2047           0        2047
  
  // 6回目
                total        used        free      shared  buff/cache   available
  Mem:            991         146         526           6         318         700
  Swap:          2047           0        2047
  
  // 7回目
                total        used        free      shared  buff/cache   available
  Mem:            991         146         526           6         318         700
  Swap:          2047           0        2047
  
  // 8回目
                total        used        free      shared  buff/cache   available
  Mem:            991         146         526           6         318         700
  Swap:          2047           0        2047
  
  // 9回目
                total        used        free      shared  buff/cache   available
  Mem:            991         146         526           6         318         700
  Swap:          2047           0        2047
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[25]
  メモリおよびスワップ使用量の測定 - 02 (cat /proc/meminfo)
  
[内容]
  ## 作業内容
    メモリ容量をコマンド(cat /proc/meminfo)で測定する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd $HOME
  vm12$ cat /proc/meminfo
  
  コマンドの実行結果
  --------------------------------------------------
  MemTotal:        1014784 kB
  MemFree:          539392 kB
  MemAvailable:     717784 kB
  Buffers:            2108 kB
  Cached:           297992 kB
  SwapCached:            0 kB
  Active:           226876 kB
  Inactive:         142096 kB
  Active(anon):      69088 kB
  Inactive(anon):     6576 kB
  Active(file):     157788 kB
  Inactive(file):   135520 kB
  Unevictable:           0 kB
  Mlocked:               0 kB
  SwapTotal:       2097148 kB
  SwapFree:        2097148 kB
  Dirty:                 8 kB
  Writeback:             0 kB
  AnonPages:         68904 kB
  Mapped:            22384 kB
  Shmem:              6792 kB
  Slab:              50140 kB
  SReclaimable:      25720 kB
  SUnreclaim:        24420 kB
  KernelStack:        1664 kB
  PageTables:         3568 kB
  NFS_Unstable:          0 kB
  Bounce:                0 kB
  WritebackTmp:          0 kB
  CommitLimit:     2604540 kB
  Committed_AS:     271296 kB
  VmallocTotal:   34359738367 kB
  VmallocUsed:        5904 kB
  VmallocChunk:   34359729920 kB
  Percpu:              176 kB
  HardwareCorrupted:     0 kB
  AnonHugePages:     12288 kB
  CmaTotal:              0 kB
  CmaFree:               0 kB
  HugePages_Total:       0
  HugePages_Free:        0
  HugePages_Rsvd:        0
  HugePages_Surp:        0
  Hugepagesize:       2048 kB
  DirectMap4k:       45020 kB
  DirectMap2M:     1003520 kB
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[26]
  ディスク使用量の測定 - 01 (df)
  
[内容]
  ## 作業内容
    ディスク使用量をコマンド(df)で測定する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    df     // ディスク使用量の表示
    df -a  // 全ファイルシステムのディスク使用量を表示
    df -h  // 1MB=1024KB
    df -H  // 1MB=1000KB
    df -i  // iノードの使用状況
    df -m  // メガバイト単位で表示
    df -T  // ファイルシステムタイプを表示
  
[確認]
  vm12$ cd $HOME
  vm12$ df -mT (メガバイト単位、ファイルシステムタイプ表示)
  
  コマンドの実行結果
  --------------------------------------------------
  ファイルシス                 タイプ   1M-ブロック  使用 使用可 使用% マウント位置
  devtmpfs                     devtmpfs         484     0    484    0% /dev
  tmpfs                        tmpfs            496     0    496    0% /dev/shm
  tmpfs                        tmpfs            496     7    489    2% /run
  tmpfs                        tmpfs            496     0    496    0% /sys/fs/cgroup
  /dev/mapper/centos_vm11-root xfs            17394  1575  15820   10% /
  /dev/vda1                    xfs             1014   137    878   14% /boot
  tmpfs                        tmpfs            100     0    100    0% /run/user/1000
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[27]
  ディスク使用量の測定 - 02 (df)
  
[内容]
  ## 作業内容
    iノード使用状況をコマンド(df)で測定する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    df     // ディスク使用量の表示
    df -a  // 全ファイルシステムのディスク使用量を表示
    df -h  // 1MB=1024KB
    df -H  // 1MB=1000KB
    df -i  // iノードの使用状況
    df -m  // メガバイト単位で表示
    df -T  // ファイルシステムタイプを表示
  
[確認]
  vm12$ cd $HOME
  vm12$ df -iT (iノードの使用状況、ファイルシステムタイプ表示)
  
  コマンドの実行結果
  --------------------------------------------------
  ファイルシス                 タイプ   Iノード I使用   I残り I使用% マウント位置
  devtmpfs                     devtmpfs  123900   349  123551     1% /dev
  tmpfs                        tmpfs     126848     1  126847     1% /dev/shm
  tmpfs                        tmpfs     126848   427  126421     1% /run
  tmpfs                        tmpfs     126848    16  126832     1% /sys/fs/cgroup
  /dev/mapper/centos_vm11-root xfs      8910848 27645 8883203     1% /
  /dev/vda1                    xfs       524288   326  523962     1% /boot
  tmpfs                        tmpfs     126848     1  126847     1% /run/user/1000
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[28]
  ネットワークトラフィックの測定 - 01 (netstat)
  
[内容]
  ## 作業内容
    NIC情報をコマンド(netstat)で測定する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    netstat -i     // 全NIC情報を出力
    netstat -I=XX  // NIC(XX)の情報を出力
    netstat -s     // プロトコル毎の統計情報
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install net-tools (コマンドのインストール)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ netstat -i
  
  コマンドの実行結果
  --------------------------------------------------
  Kernel Interface table
  Iface      MTU    RX-OK    RX-ERR    RX-DRP    RX-OVR    TX-OK    TX-ERR    TX-DRP    TX-OVR     Flg
  eth0      1500    19378         0        13         0     1235         0         0         0    BMRU
  lo       65536       32         0         0         0       32         0         0         0     LRU
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ netstat -I=eth0
  
  コマンドの実行結果
  --------------------------------------------------
  Kernel Interface table
  Iface      MTU    RX-OK    RX-ERR    RX-DRP    RX-OVR    TX-OK    TX-ERR    TX-DRP    TX-OVR     Flg
  eth0      1500    19706         0        13         0     1239         0         0         0    BMRU
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[29]
  ネットワークトラフィックの測定 - 02 (netstat)
  
[内容]
  ## 作業内容
    プロトコル毎の統計情報をコマンド(netstat)で測定する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド
    netstat -i     // 全NIC情報を出力
    netstat -I=XX  // NIC(XX)の情報を出力
    netstat -s     // プロトコル毎の統計情報
  
[確認]
  vm12$ cd $HOME
  vm12$ netstat -s
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> IP, ICMP, TCP, UDP ... の統計情報を確認した
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[30]
  ネットワークトラフィックの測定 - 03 (ss)
  
[内容]
  ## 作業内容
    TCP接続とUDP接続を表示
  
  ## 使用マシン
    HOST : localhost
    IPV4 : 192.168.1.3
    MEMO : ホスト
  
  ## コマンド
    ss -t  // TCP接続を表示
    ss -u  // UDP接続を表示
    ss -s  // 接続状態の統計を表示
  
[確認]
  $ cd $HOME
  $ ss -t
  
  コマンドの実行結果
  --------------------------------------------------
  State    Recv-Q    Send-Q    Local Address:Port    Peer Address:Port                
  ESTAB    0         0         192.168.1.3:51332     52.35.145.245:https                
  ESTAB    0         0         192.168.1.3:57674     133.152.42.207:https                
  ESTAB    0         0         192.168.1.3:50576     133.152.40.171:https  
  --------------------------------------------------
  
  $ cd $HOME
  $ ss -u
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 列見出しのみ出力、該当データなし
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[31]
  ネットワークトラフィックの測定 - 04 (ss)
  
[内容]
  ## 作業内容
    接続状態の統計を表示
  
  ## 使用マシン
    HOST : localhost
    IPV4 : 192.168.1.3
    MEMO : ホスト
  
  ## コマンド
    ss -t  // TCP接続を表示
    ss -u  // UDP接続を表示
    ss -s  // 接続状態の統計を表示
  
[確認]
  $ cd $HOME
  $ ss -s
  
  コマンドの実行結果
  --------------------------------------------------
  Total: 1497 (kernel 0)
  TCP: 20 (estab 3, closed 8, orphaned 0, synrecv 0, timewait 7/0), ports 0
  
  Transport   Total     IP        IPv6
  *           0         -         -        
  RAW         1         0         1        
  UDP         11        8         3        
  TCP         12        8         4        
  INET        24        16        8        
  FRAG        0         0         0        
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[32]
  ネットワークトラフィックの測定 - 05 (netperf)
  
[内容]
  ## 作業内容
    ホスト間でネットワークのスループット測定
  
  ## 使用マシン1
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## 仮想マシン2
    HOST : vm13
    IPV4 : 192.168.122.13
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install wget (コマンドのインストール)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ wget http://repo.iotti.biz/CentOS/7/x86_64/netperf-2.7.0-1.el7.lux.x86_64.rpm (RPMファイル入手)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo rpm -ivh netperf-2.7.0-1.el7.lux.x86_64.rpm
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo firewall-cmd --add-port=12865/tcp --permanent
  
  コマンドの実行結果
  --------------------------------------------------
  success
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo firewall-cmd --add-port=12866/tcp --permanent
  
  コマンドの実行結果
  --------------------------------------------------
  success
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo firewall-cmd --reload
  
  コマンドの実行結果
  --------------------------------------------------
  success
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo netserver (Netperfサーバー起動)
  
  コマンドの実行結果
  --------------------------------------------------
  Starting netserver with host 'IN(6)ADDR_ANY' port '12865' and family AF_UNSPEC
  --------------------------------------------------
    
    vm13$ cd $HOME
    vm13$ sudo yum -y install wget (コマンドのインストール)
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> エラー出力が無ければOK
    --------------------------------------------------
    
    vm13$ cd $HOME
    vm13$ wget http://repo.iotti.biz/CentOS/7/x86_64/netperf-2.7.0-1.el7.lux.x86_64.rpm (RPMファイル入手)
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> エラー出力が無ければOK
    --------------------------------------------------
    
    vm13$ cd $HOME
    vm13$ sudo rpm -ivh netperf-2.7.0-1.el7.lux.x86_64.rpm
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> エラー出力が無ければOK
    --------------------------------------------------
    
    vm13$ cd $HOME
    vm13$ netperf -H 192.168.122.12 -p 12865 -- -P 12866
    
    コマンドの実行結果
    --------------------------------------------------
    MIGRATED TCP STREAM TEST from 0.0.0.0 (0.0.0.0) port 12866 AF_INET to 192.168.122.12 () port 12866 AF_INET
    
    Recv    Send    Send
    Socket  Socket  Message  Elapsed
    Size    Size    Size     Time     Throughput
    bytes   bytes   bytes    secs.    10^6bits/sec
    
    87380   16384   16384    10.01    5197.63  // およそ5200Mbps
    --------------------------------------------------
    
  vm12$ cd $HOME
  vm12$ sudo pkill netserver (Netperfサーバー停止)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[33]
  ネットワークトラフィックの測定 - 06 (iptraf-ng)
  
[内容]
  ## 作業内容
    ネットワークトラフィックのモニタリング
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install iptraf-ng (コマンドのインストール)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo iptraf-ng (ネットワークトラフィックのモニタリング)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> コンソール上にモニタリング画面が表示
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================

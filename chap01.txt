================================================================================
[01] キャパシティプランニングとは - 01
[02] キャパシティプランニングとは - 02
[03] キャパシティプランニングとは - 03
[04] 総合的なリソース使用率の測定 - 01 (top)
[05] 総合的なリソース使用率の測定 - 02 (top)
[03] Command - 03 (vmstat)
[04] Command - 04 (iostat)
[05] Command - 05 (iptop)
[06] Package - 01 (sysstat)
[07] Command - 06 (sar)
[08] Command - 07 (sadf)
[09] Command - 08 (uptime)
[10] Command - 09 (w)
[11] Command - 10 (ps)
[12] Command - 11 (pstree)
[13] Command - 12 (lsof)
[14] Command - 13 (free)
[15] Command - 14 (df)
[16] Command - 15 (netstat)
[17] Command - 16 (ss)
================================================================================
[01]
  キャパシティプランニングとは - 01
  
[内容]
  ## 作業内容
    リソース使用率の測定の準備で、負荷コマンド(stress)からCPU負荷を実行する
  
  ## 使用マシン
    HOST : vm12
    IPv4 : 192.168.122.12
  
  ## コマンド
    stress -q     // 起動メッセージ非表示
    stress -t XX  // タイムアウト(XX秒後)
    stress -c XX  // CPU負荷の子プロセスの生成数(XX個)
    stress -m XX  // メモリ負荷の子プロセスの生成数(XX個)
    stress -d XX  // HDD負荷の子プロセスの生成数(XX個)
    stress -t XX  // タイムアウト(XX秒後)
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install epel-release (リポジトリのインストール)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> リポジトリ「EPEL」のインストール
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo yum -y install stress (負荷コマンドのインストール)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ vi sample01.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # CPU負荷プロセス、5秒後タイムアウト、起動メッセージ非表示、バックグラウンド実行
  stress -c 1 -t 5 -q &
  
  # 更新間隔1秒、更新回数10回、メガバイト単位
  vmstat 1 10 -S m
  
  # ユーザー(makoto)の実行しているプロセス(vmstat)を終了
  pkill -u makoto vmstat
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ bash sample01.sh
  
  コマンドの実行結果
  --------------------------------------------------
  ## PROC ##  ######## Memory #########  ## Swap ##  ### IO ###  ## System ##  ###### CPU ######
     r  b     swpd   free   buff  cache   si   so     bi    bo     in   cs      us sy id wa st
     3  0        0    399      2    489    0    0     16    27     24   25       1  0 99  0  0
     1  0        0    399      2    489    0    0      0     0   1032   62     100  0  0  0  0  // CPU負荷
     1  0        0    399      2    489    0    0      0     0   1015   55     100  0  0  0  0  // CPU負荷
     1  0        0    399      2    489    0    0      0     0   1009   52      99  0  0  0  1  // CPU負荷
     1  0        0    399      2    489    0    0      0     0   1009   51     100  0  0  0  0  // CPU負荷
     0  0        0    399      2    489    0    0      0     0    960   65      94  0  6  0  0  // CPU負荷
     0  0        0    399      2    489    0    0      0     0     31   51       0  1 99  0  0
     0  0        0    399      2    489    0    0      0     0     32   52       0  1 99  0  0
     0  0        0    399      2    489    0    0      0     0     35   55       1  0 99  0  0
     0  0        0    399      2    489    0    0      0     0     35   60       0  1 99  0  0
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[02]
  キャパシティプランニングとは - 02
  
[内容]
  ## 作業内容
    リソース使用率の測定の準備で、負荷コマンド(stress)からメモリ負荷を実行する
  
  ## 使用マシン
    HOST : vm12
    IPv4 : 192.168.122.12
  
  ## コマンド
    stress -q     // 起動メッセージ非表示
    stress -t XX  // タイムアウト(XX秒後)
    stress -c XX  // CPU負荷の子プロセスの生成数(XX個)
    stress -m XX  // メモリ負荷の子プロセスの生成数(XX個)
    stress -d XX  // HDD負荷の子プロセスの生成数(XX個)
    stress -t XX  // タイムアウト(XX秒後)
  
[確認]
  vm12$ cd $HOME
  vm12$ vi sample02.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # メモリ負荷プロセス、5秒後タイムアウト、起動メッセージ非表示、バックグラウンド実行
  stress -m 1 -t 5 -q &
  
  # 更新間隔1秒、更新回数10回、メガバイト単位
  vmstat 1 10 -S m
  
  # ユーザー(makoto)の実行しているプロセス(vmstat)を終了
  pkill -u makoto vmstat
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ bash sample02.sh
  
  コマンドの実行結果
  --------------------------------------------------
  ## PROC ##  ######## Memory #########  ## Swap ##  ### IO ###  ## System ##  ###### CPU ######
     r  b     swpd   free   buff  cache   si   so     bi    bo     in   cs      us sy id wa st
     2  0        0    399      2    489    0    0     15    26     24   25       1  0 99  0  0
     1  0        0    165      2    489    0    0      0     0   1026   47       1 98  0  0  1  // メモリ負荷
     1  0        0    144      2    489    0    0      0     3   1060  120       6 94  0  0  0  // メモリ負荷
     1  0        0    137      2    489    0    0      0     0   1064  134       4 96  0  0  0  // メモリ負荷
     1  0        0    316      2    489    0    0      0     0   1081  132       4 96  0  0  0  // メモリ負荷
     0  0        0    399      2    489    0    0      0     0   1043  148       4 93  3  0  0  // メモリ負荷
     0  0        0    399      2    489    0    0      0     0     30   50       0  1 99  0  0
     0  0        0    399      2    489    0    0      0     0     36   54       0  1 99  0  0
     0  0        0    399      2    489    0    0      0     0     33   51       0  1 99  0  0
     0  0        0    399      2    489    0    0      0     0     33   54       0  1 99  0  0
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[03]
  キャパシティプランニングとは - 03
  
[内容]
  ## 作業内容
    リソース使用率の測定の準備で、負荷コマンド(stress)からHDD負荷を実行する
  
  ## 使用マシン
    HOST : vm12
    IPv4 : 192.168.122.12
  
  ## コマンド
    stress -q     // 起動メッセージ非表示
    stress -t XX  // タイムアウト(XX秒後)
    stress -c XX  // CPU負荷の子プロセスの生成数(XX個)
    stress -m XX  // メモリ負荷の子プロセスの生成数(XX個)
    stress -d XX  // HDD負荷の子プロセスの生成数(XX個)
    stress -t XX  // タイムアウト(XX秒後)
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install sysstat (パッケージのインストール)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ vi sample03.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # HDD負荷プロセス、5秒後タイムアウト、起動メッセージ非表示、バックグラウンド実行
  stress -d 1 -t 5 -q &
  
  # 数秒待機
  sleep 1
  
  # 起動からの統計省略、ディスクIOのみ表示、更新間隔1秒、更新回数10回
  iostat -y -d 1 10
  
  # ユーザー(makoto)の実行しているプロセス(iostat)を終了
  pkill -u makoto iostat
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ bash sample03.sh
  
  コマンドの実行結果
  --------------------------------------------------
  Linux 3.10.0-1160.el7.x86_64 (vm12) 	2021年12月22日 	_x86_64_	(1 CPU)
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn  // HDD負荷
  vda             378.72         0.00    171617.02          0     161320  // HDD負荷
  dm-0            498.94         0.00    226587.23          0     212992  // HDD負荷
  dm-1              0.00         0.00         0.00          0          0  // HDD負荷
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn  // HDD負荷
  vda              17.89         0.00      8092.63          0       7688  // HDD負荷
  dm-0            163.16         0.00     78138.95          0      74232  // HDD負荷
  dm-1              0.00         0.00         0.00          0          0  // HDD負荷
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn  // HDD負荷
  vda              26.32         0.00     12404.21          0      11784  // HDD負荷
  dm-0             28.42         0.00     13928.42          0      13232  // HDD負荷
  dm-1              0.00         0.00         0.00          0          0  // HDD負荷
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn  // HDD負荷
  vda               9.18         0.00      4628.57          0       4536  // HDD負荷
  dm-0              8.16         0.00      3730.61          0       3656  // HDD負荷
  dm-1              0.00         0.00         0.00          0          0  // HDD負荷
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn  // HDD負荷
  vda              21.43         0.00     10032.65          0       9832  // HDD負荷
  dm-0             16.33         0.00      7330.61          0       7184  // HDD負荷
  dm-1              0.00         0.00         0.00          0          0  // HDD負荷
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
  vda              12.00         0.00      5232.00          0       5232
  dm-0              0.00         0.00         0.00          0          0
  dm-1              0.00         0.00         0.00          0          0
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
  vda              18.56         0.00      8511.34          0       8256
  dm-0              0.00         0.00         0.00          0          0
  dm-1              0.00         0.00         0.00          0          0
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
  vda              32.32         0.00     15402.02          0      15248
  dm-0              0.00         0.00         0.00          0          0
  dm-1              0.00         0.00         0.00          0          0
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
  vda              21.43         0.00     10351.02          0      10144
  dm-0              0.00         0.00         0.00          0          0
  dm-1              0.00         0.00         0.00          0          0
  
  Device:            tps    kB_read/s    kB_wrtn/s    kB_read    kB_wrtn
  vda               8.08         0.00      4072.73          0       4032
  dm-0              0.00         0.00         0.00          0          0
  dm-1              0.00         0.00         0.00          0          0
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[04]
  総合的なリソース使用率の測定 - 01 (top)
  
[内容]
  ## 作業内容
    CPU負荷をコマンド(top)で測定する
  
  ## 使用マシン
    HOST : vm12
    IPv4 : 192.168.122.12
  
  ## コマンド ##
    top -b     // バッチモード
    top -d XX  // 更新間隔(XX 秒)
    top -n XX  // 更新回数(XX 回)を越えた後で自動的に終了
    top -u XX  // 指定ユーザーのプロセスのみ表示
    top -p XX  // 指定PIDのプロセスのみ表示
    top -w XX  // 出力幅(XX 桁数)
  
[確認]
  vm12$ cd $HOME
  vm12$ top -> 対話モード
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 対話モードは練習あるのみ！
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ vi sample04.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # CPU負荷プロセス、5秒後タイムアウト、起動メッセージ非表示、バックグラウンド実行
  stress -c 1 -t 5 -q &
  
  # バッチモード、ユーザー(makoto)、更新間隔1秒、更新回数9回、出力幅100
  top -b -u makoto -d 1 -n 9 -w 100 | grep stress
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ bash sample04.sh
  
  コマンドの実行結果
  --------------------------------------------------
    PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
   9163 makoto    20   0    7308     92      0 R  71.4  0.0   0:00.34 stress  // 1回目 -> 項目「%CPU」からCPU負荷を確認
   9160 makoto    20   0    7308    424    344 S   0.0  0.0   0:00.00 stress
   9163 makoto    20   0    7308     92      0 R  99.0  0.0   0:01.35 stress  // 2回目
   9160 makoto    20   0    7308    424    344 S   0.0  0.0   0:00.00 stress
   9163 makoto    20   0    7308     92      0 R  99.0  0.0   0:02.34 stress  // 3回目
   9160 makoto    20   0    7308    424    344 S   0.0  0.0   0:00.00 stress
   9163 makoto    20   0    7308     92      0 R  99.0  0.0   0:03.34 stress  // 4回目
   9160 makoto    20   0    7308    424    344 S   0.0  0.0   0:00.00 stress
   9163 makoto    20   0    7308     92      0 R  99.0  0.0   0:04.34 stress  // 5回目
   9160 makoto    20   0    7308    424    344 S   0.0  0.0   0:00.00 stress
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[05]
  総合的なリソース使用率の測定 - 02 (top)
  
[内容]
  ## 作業内容
    メモリ負荷をコマンド(top)で測定する
  
  ## 使用マシン
    HOST : vm12
    IPv4 : 192.168.122.12
  
  ## コマンド ##
    top -b     // バッチモード
    top -d XX  // 更新間隔(XX 秒)
    top -n XX  // 更新回数(XX 回)を越えた後で自動的に終了
    top -u XX  // 指定ユーザーのプロセスのみ表示
    top -p XX  // 指定PIDのプロセスのみ表示
    top -w XX  // 出力幅(XX 桁数)
  
[確認]
  vm12$ cd $HOME
  vm12$ top -> 対話モード
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 対話モードは練習あるのみ！
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ vi sample05.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # メモリ負荷プロセス、5秒後タイムアウト、起動メッセージ非表示、バックグラウンド実行
  stress -m 1 -t 5 -q &
  
  # バッチモード、ユーザー(makoto)、更新間隔1秒、更新回数9回、出力幅100
  top -b -u makoto -d 1 -n 9 -w 100 | grep stress
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ bash sample05.sh
  
  コマンドの実行結果
  --------------------------------------------------
  // 負荷開始
  stress: info: [15517] dispatching hogs: 0 cpu, 0 io, 1 vm, 0 hdd
  
  // 1回目 -> 項目「%MEM」を見る限り、あまり負荷を掛けられていない
    PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
  15520 makoto    20   0  269460 123708    128 R  80.0  3.3   0:00.19 stress
  15517 makoto    20   0    7312    432    348 S   0.0  0.0   0:00.00 stress
  
  // 2回目
    PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
  15520 makoto    20   0  269460 259996    128 R 100.0  6.9   0:01.20 stress
  15517 makoto    20   0    7312    432    348 S   0.0  0.0   0:00.00 stress
  
  // 3回目
    PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
  15520 makoto    20   0  269460  96320    128 R 100.0  2.6   0:02.21 stress
  15517 makoto    20   0    7312    432    348 S   0.0  0.0   0:00.00 stress
  
  // 4回目
    PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
  15520 makoto    20   0  269460 228056    128 R 100.0  6.1   0:03.22 stress
  15517 makoto    20   0    7312    432    348 S   0.0  0.0   0:00.00 stress
  
  // 5回目
    PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND
  15520 makoto    20   0  269460 262112    128 R 100.0  7.0   0:04.23 stress
  15517 makoto    20   0    7312    432    348 S   0.0  0.0   0:00.00 stress
  
  // 負荷終了
  stress: info: [15517] successful run completed in 5s
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[03]
  Command - 03 (vmstat)
  
[内容]
  ## コマンド
    vmstat XX YY       // 更新間隔(XX秒)、更新回数(YY回)
    vmstat XX YY -S k  // 更新間隔(XX秒)、更新回数(YY回)、キロバイト単位
    vmstat XX YY -S m  // 更新間隔(XX秒)、更新回数(YY回)、メガバイト単位
  
  ## 作業内容
    コマンドの動作確認を行う
  
[確認]
  # cd $HOME
  # vi sample.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # CPU負荷1個、メモリ負荷1個、5秒後タイムアウト、バックグラウンド
  stress -c 1 -m 1 -t 5 &
  
  # 更新間隔1秒、更新回数9回、メガバイト単位
  vmstat 1 9 -S m
  --------------------------------------------------
  
  # cd $HOME
  # bash sample.sh
  
  コマンドの実行結果
  --------------------------------------------------
  // 負荷開始
  stress: info: [21295] dispatching hogs: 1 cpu, 0 io, 1 vm, 0 hdd
  
  // vmstat
  ## PROC ##  ######## Memory #########  ## Swap ##  ### IO ###  ## System ##  ###### CPU ######
     r  b     swpd   free   buff  cache   si    so     bi   bo     in     cs    us sy id wa st
     1  0      117   1278      0    768    0     0     50  336    251    236     8  2 90  0  0
     2  0      117   1185      0    770    0     0      0    0   2307    930    31 21 48  0  0
     2  0      117   1126      0    770    0     0      0    0   2278    929    30 21 49  0  0
     2  0      117   1102      0    770    0     0      0    0   2282   1037    30 21 49  0  0
     2  0      117   1225      0    770    0     0      0    0   2272    955    30 22 49  0  0
     1  0      117   1246      0    770    0     0      0    0   2265   1035    30 22 49  0  0
 
  // 負荷終了
  stress: info: [21295] successful run completed in 5s
  
  // vmstat -> PROC, CPU に変化あり
  ## PROC ##  ######## Memory #########  ## Swap ##  ### IO ###  ## System ##  ###### CPU ######
     r  b     swpd   free   buff  cache   si    so     bi   bo     in     cs    us sy id wa st
     0  0      117   1277      0    770    0     0      0   28    311    851     1  0 98  0  0
     0  0      117   1277      0    770    0     0      0    0    338    824     3  1 97  0  0
     0  0      117   1277      0    770    0     0      0  128    277    789     2  1 98  0  0
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[04]
  Command - 04 (iostat)
  
[内容]
  ## コマンド ##
    iostat -c     // CPU情報のみ出力
    iostat -d     // ディスクIOのみ出力
    iostat -k     // ブロック単位ではなくキロバイト単位
    iostat -m     // ブロック単位ではなくメガバイト単位
    iostat -t     // 時刻を表示
    iostat XX YY  // 更新間隔(XX秒)、更新回数(YY回)
  
  ## 作業内容
    コマンドの動作確認を行う
  
[確認]
  # cd $HOME
  # vi sample.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # HDD負荷1個、5秒後タイムアウト、バックグラウンド
  stress -d 1 -t 5 &
  
  # メガバイト単位、時刻表示、ディスクIO、更新間隔1秒、更新回数9回
  iostat -m -t -d 1 9
  --------------------------------------------------
  
  # cd $HOME
  # bash sample.sh
  
  コマンドの実行結果
  --------------------------------------------------
  // 負荷開始
  stress: info: [19526] dispatching hogs: 0 cpu, 0 io, 0 vm, 1 hdd
  
  // システム情報
  Linux 3.10.0-1160.45.1.el7.x86_64 (silver) 2021年11月24日 _x86_64_ (4 CPU)
  
  // 1回目(統計)
  2021年11月24日 21時35分35秒
  Device:            tps    MB_read/s    MB_wrtn/s    MB_read    MB_wrtn
  sda              13.82         0.20         1.23       2538      15295
  dm-0              5.49         0.15         0.05       1896        676
  dm-1              2.51         0.00         0.01         13        109
  dm-2             10.68         0.05         1.17        598      14553
  
  // 2回目
  2021年11月24日 21時35分36秒
  Device:            tps    MB_read/s    MB_wrtn/s    MB_read    MB_wrtn
  sda             459.00         0.00       224.09          0        224
  dm-0             11.00         0.00         0.07          0          0
  dm-1              0.00         0.00         0.00          0          0
  dm-2            588.00         0.00       289.08          0        289
  
  // 3回目
  2021年11月24日 21時35分37秒
  Device:            tps    MB_read/s    MB_wrtn/s    MB_read    MB_wrtn
  sda             523.00         0.00       261.00          0        261
  dm-0              0.00         0.00         0.00          0          0
  dm-1              0.00         0.00         0.00          0          0
  dm-2            528.00         0.00       263.50          0        263
  
  // 4回目
  2021年11月24日 21時35分38秒
  Device:            tps    MB_read/s    MB_wrtn/s    MB_read    MB_wrtn
  sda             518.00         0.00       257.53          0        257
  dm-0              0.00         0.00         0.00          0          0
  dm-1              0.00         0.00         0.00          0          0
  dm-2            519.00         0.00       240.36          0        240
  
  // 5回目
  2021年11月24日 21時35分39秒
  Device:            tps    MB_read/s    MB_wrtn/s    MB_read    MB_wrtn
  sda             522.00         0.05       237.87          0        237
  dm-0              2.00         0.05         0.00          0          0
  dm-1              0.00         0.00         0.00          0          0
  dm-2            529.00         0.00       263.51          0        263
  
  // 6回目
  2021年11月24日 21時35分40秒
  Device:            tps    MB_read/s    MB_wrtn/s    MB_read    MB_wrtn
  sda             520.00         0.00       259.50          0        259
  dm-0              0.00         0.00         0.00          0          0
  dm-1              0.00         0.00         0.00          0          0
  dm-2            499.00         0.00       249.00          0        249
  
  // 負荷終了
  stress: info: [19526] successful run completed in 5s
  
  // 7回目 -> 書込負荷が激減
  2021年11月24日 21時35分41秒
  Device:            tps    MB_read/s    MB_wrtn/s    MB_read    MB_wrtn
  sda             146.00         0.00        73.00          0         73
  dm-0              0.00         0.00         0.00          0          0
  dm-1              0.00         0.00         0.00          0          0
  dm-2             15.00         0.00         7.50          0          7
  
  // 8回目 -> 書込負荷が無くなる
  2021年11月24日 21時35分42秒
  Device:            tps    MB_read/s    MB_wrtn/s    MB_read    MB_wrtn
  sda               0.00         0.00         0.00          0          0
  dm-0              0.00         0.00         0.00          0          0
  dm-1              0.00         0.00         0.00          0          0
  dm-2              0.00         0.00         0.00          0          0
  
  // 9回目
  2021年11月24日 21時35分43秒
  Device:            tps    MB_read/s    MB_wrtn/s    MB_read    MB_wrtn
  sda               0.00         0.00         0.00          0          0
  dm-0              0.00         0.00         0.00          0          0
  dm-1              0.00         0.00         0.00          0          0
  dm-2              0.00         0.00         0.00          0          0
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[05]
  Command - 05 (iptop)
  
[内容]
  ## コマンド ##
    iotop -b     // 対話モードでなくバッチモード
    iotop -d XX  // 更新間隔(XX 秒)
    iotop -n XX  // 更新回数(XX 回)を越えた後で自動的に終了
    iotop -u XX  // 指定ユーザーのプロセスのみ表示
    iotop -p XX  // 指定PIDのプロセスのみ表示
  
  ## 作業内容
    コマンドの動作確認を行う
  
[確認]
  # cd $HOME
  # iotop -> 対話モード
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 対話モードは各自で練習あるのみ！
  --------------------------------------------------
  
  # cd $HOME
  # vi sample.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # HDD負荷1個、5秒後タイムアウト、バックグラウンド
  stress -d 1 -t 5 &
  
  # バッチモード、更新間隔1秒、更新回数9回
  iotop -b -d 1 -n 9 | grep stress
  --------------------------------------------------
  
  # cd $HOME
  # bash sample.sh
  
  コマンドの実行結果
  --------------------------------------------------
  // 負荷開始
  stress: info: [23159] dispatching hogs: 0 cpu, 0 io, 0 vm, 1 hdd
  
  // 1回目
    TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO>    COMMAND
  23162  be/4  root     0.00 B/s   71.92 M/s   0.00 % 34.69 %    stress -d 1 -t 5
  23159  be/4  root     0.00 B/s    0.00 B/s   0.00 %  0.00 %    stress -d 1 -t 5
  23161  be/4  root     0.00 B/s    0.00 B/s   0.00 %  0.00 %    grep stress
  
  // 2回目
    TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO>    COMMAND
  23162  be/4  root     0.00 B/s  271.63 M/s   0.00 % 82.34 %    stress -d 1 -t 5
  23159  be/4  root     0.00 B/s    0.00 B/s   0.00 %  0.00 %    stress -d 1 -t 5
  23161  be/4  root     0.00 B/s    0.00 B/s   0.00 %  0.00 %    grep stress
  
  // 3回目
    TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO>    COMMAND
  23162  be/4  root     0.00 B/s  259.59 M/s   0.00 % 82.93 %    stress -d 1 -t 5
  23159  be/4  root     0.00 B/s    0.00 B/s   0.00 %  0.00 %    stress -d 1 -t 5
  23161  be/4  root     0.00 B/s    0.00 B/s   0.00 %  0.00 %    grep stress
  
  // 4回目
    TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO>    COMMAND
  23162  be/4  root     0.00 B/s  246.01 M/s   0.00 % 63.73 %    stress -d 1 -t 5
  23159  be/4  root     0.00 B/s    0.00 B/s   0.00 %  0.00 %    stress -d 1 -t 5
  23161  be/4  root     0.00 B/s    0.00 B/s   0.00 %  0.00 %    grep stress
  
  // 負荷終了
  stress: info: [23159] successful run completed in 5s
  
  // 5回目
    TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO>    COMMAND
  23161  be/4  root     0.00 B/s    0.00 B/s   0.00 %  0.00 %    grep stress
  
  // 6回目
    TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO>    COMMAND
  23161  be/4  root     0.00 B/s    0.00 B/s   0.00 %  0.00 %    grep stress
  
  // 7回目
    TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO>    COMMAND
  23161  be/4  root     0.00 B/s    0.00 B/s   0.00 %  0.00 %    grep stress
  
  // 8回目
    TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO>    COMMAND
  23161  be/4  root     0.00 B/s    0.00 B/s   0.00 %  0.00 %    grep stress
  
  // 9回目
    TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO>    COMMAND
  23161  be/4  root     0.00 B/s    0.00 B/s   0.00 %  0.00 %    grep stress
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[06]
  Package - 01 (sysstat)
  
[内容]
  ## 各種情報 ##
    sysstat                 // パッケージ名
    sadc                    // データ収集コマンド
    /etc/sysconfig/sysstat  // 設定ファイル
    /var/log/sa/saXX        // 収集データの格納先
    sar                     // 収集データのレポート作成
    sadf                    // 収集データのレポート書式変更
  
  ## 作業内容
    パッケージの各種調査を行う
  
[確認]
  # cd $HOME
  # yum list installed | grep sysstat
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> パッケージのインストール確認
  --------------------------------------------------
  
  # cd /etc/sysconfig
  # cat sysstat | grep -vE '^#|^$'
  
  コマンドの実行結果
  --------------------------------------------------
  HISTORY=28              // デフォルトで28日保存
  COMPRESSAFTER=31        // 31日経過で圧縮
  SADC_OPTIONS="-S DISK"  // データ収集コマンドのオプション設定
  ZIP="bzip2"             // 圧縮形式
  --------------------------------------------------
  
  # cd /etc/cron.d
  # grep -vE '^#|^$' sysstat
  
  コマンドの実行結果
  --------------------------------------------------
  */10 *  *  *  *  root  /usr/lib64/sa/sa1 1 1  // 10分毎に「sa1 1 1」実行
  53   23 *  *  *  root  /usr/lib64/sa/sa2 -A   // 毎日23時53分に「sa2 -A」実行して一日分の集計処理
  
  // スクリプト「sa1」と「sa2」は内部で「sadc」を実行
  --------------------------------------------------
  
  # cd /var/log/sa
  # ls
  
  コマンドの実行結果
  --------------------------------------------------
  sa01  sa06  sa11  sa16  sa21  sa27  sar01  sar06  sar11  sar16  sar21  sar27
  sa02  sa07  sa12  sa17  sa22  sa28  sar02  sar07  sar12  sar17  sar22  sar28
  sa03  sa08  sa13  sa18  sa23  sa29  sar03  sar08  sar13  sar18  sar24  sar29
  sa04  sa09  sa14  sa19  sa25  sa30  sar04  sar09  sar14  sar19  sar25  sar30
  sa05  sa10  sa15  sa20  sa26  sa31  sar05  sar10  sar15  sar20  sar26  sar31
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[07]
  Command - 06 (sar)
  
[内容]
  ## コマンド ##
    sar XX YY       // 更新間隔(XX秒)、更新回数(YY回)
    sar -o XX       // 出力ファイル(XX)を指定
    sar -u          // CPU
    sar	-r          // メモリ
    sar	-W          // スワップ
    sar	-b          // ディスクIO
    sar	-n DEV      // NIC
    sar -n EDEV     // NICエラー
    sar	-f XX       // ログファイル(XX)を指定
    sar	-s XX -e YY	// 時刻XX(HH:MM:SS)から時刻YY(HH:MM:SS)を指定
  
  ## 作業内容
    コマンドの動作確認を行う
  
[確認]
  # cd $HOME
  # sar -u -f /var/log/sa/sa24 -s 21:50:00 -e 22:50:00
  
  コマンドの実行結果
  --------------------------------------------------
  // 24日の21:50:00から22:50:00のCPU
  
  // システム情報
  Linux 3.10.0-1160.45.1.el7.x86_64 (silver) 2021年11月24日 _x86_64_ (4 CPU)
  
  21時50分01秒     CPU     %user     %nice   %system   %iowait    %steal     %idle
  22時00分01秒     all      9.44      0.04      2.99      0.13      0.00     87.40
  22時10分01秒     all      6.70      0.00      1.61      0.08      0.00     91.62
  22時20分01秒     all     13.08      0.02      2.97      0.05      0.00     83.88
  22時30分01秒     all      6.40      0.02      2.19      0.89      0.00     90.49
  22時40分01秒     all      9.09      0.00      2.04      0.12      0.00     88.76
  
  平均値:          all      8.94      0.02      2.36      0.25      0.00     88.43
  --------------------------------------------------
  
  # cd $HOME
  # sar -r -f /var/log/sa/sa24 -s 21:50:00 -e 22:50:00
  
  コマンドの実行結果
  --------------------------------------------------
  // 24日の21:50:00から22:50:00のメモリ
  
  // システム情報
  Linux 3.10.0-1160.45.1.el7.x86_64 (silver) 2021年11月24日 _x86_64_ (4 CPU)
  
  21時50分01秒 kbmemfree kbmemused %memused kbbuffers kbcached kbcommit %commit kbactive kbinact kbdirty
  22時00分01秒   1242188   2520660    66.99         4   685008  6980888   90.72  1363944  825700             8
  22時10分01秒   1174576   2588272    68.78         4   697568  6979064   90.70  1420672  836580            16
  22時20分01秒   1038748   2724100    72.39         4   761192  6988316   90.82  1494060  897296          1144
  22時30分01秒   1178428   2584420    68.68         4   634484  6988308   90.82  1520504  727072             0
  22時40分01秒   1104864   2657984    70.64         4   656420  7038604   91.47  1572928  748348           148
  
  平均値:        1147761   2615087    69.50         4   686934  6995036   90.90  1474422  806999           263
  --------------------------------------------------
  
  # cd $HOME
  # sar -W -f /var/log/sa/sa24 -s 21:50:00 -e 22:50:00
  
  コマンドの実行結果
  --------------------------------------------------
  // 24日の21:50:00から22:50:00のスワップ
  
  // システム情報
  Linux 3.10.0-1160.45.1.el7.x86_64 (silver) 2021年11月24日 _x86_64_ (4 CPU)
  
  21時50分01秒  pswpin/s pswpout/s
  22時00分01秒      2.06      8.27
  22時10分01秒      0.03      0.00
  22時20分01秒      0.09      0.00
  22時30分01秒      0.28      0.17
  22時40分01秒      0.00      0.00
  
  平均値:       0.49      1.69
  --------------------------------------------------
  
  # cd $HOME
  # sar -b -f /var/log/sa/sa24 -s 21:50:00 -e 22:50:00
  
  コマンドの実行結果
  --------------------------------------------------
  // 24日の21:50:00から22:50:00のディスクIO
  
  // システム情報
  Linux 3.10.0-1160.45.1.el7.x86_64 (silver) 2021年11月24日 _x86_64_ (4 CPU)
  
  21時50分01秒       tps      rtps      wtps   bread/s   bwrtn/s
  22時00分01秒     15.46      3.46     12.00    181.71   4844.87
  22時10分01秒      1.86      0.18      1.69      6.72    142.58
  22時20分01秒      3.57      1.49      2.08    110.99    239.08
  22時30分01秒     20.30      4.60     15.70    296.04  13630.94
  22時40分01秒      1.19      0.07      1.12      2.19     91.73
  
  平均値:           8.48      1.96      6.52    119.53   3789.79
  --------------------------------------------------
  
  # cd $HOME
  # sar -n DEV -f /var/log/sa/sa24 -s 21:50:00 -e 22:50:00 | grep enp0s25
  
  コマンドの実行結果
  --------------------------------------------------
  // 24日の21:50:00から22:50:00のNIC(enp0s25)
  
  21時50分01秒     IFACE   rxpck/s   txpck/s    rxkB/s    txkB/s   rxcmp/s   txcmp/s  rxmcst/s
  22時10分01秒   enp0s25     24.17      4.57     32.59      0.62      0.00      0.00      0.01
  22時20分01秒   enp0s25     54.29      8.57     76.35      0.81      0.00      0.00      0.01
  22時30分01秒   enp0s25      9.36      1.07     11.35      0.25      0.00      0.00      0.01
  22時40分01秒   enp0s25     23.70      4.41     32.89      0.44      0.00      0.00      0.01
  
  平均値:        enp0s25     28.62      4.52     38.24      0.69      0.00      0.00      0.01
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[08]
  Command - 07 (sadf)
  
[内容]
  ## コマンド(CPU) ##
    sadf -j -- -u  // JSON形式
    sadf -x -- -u  // XML形式
    sadf -t -- -u  // ローカル日時
  
  ## コマンド(メモリ) ##
    sadf -j -- -r  // JSON形式
    sadf -x -- -r  // XML形式
    sadf -t -- -r  // ローカル日時
  
  ## コマンド(スワップ) ##
    sadf -j -- -W  // JSON形式
    sadf -x -- -W  // XML形式
    sadf -t -- -W  // ローカル日時
  
  ## コマンド(ディスク) ##
    sadf -j -- -b  // JSON形式
    sadf -x -- -b  // XML形式
    sadf -t -- -b  // ローカル日時
  
  ## コマンド(NIC) ##
    sadf -j -- -n DEV  // JSON形式
    sadf -x -- -n DEV  // XML形式
    sadf -t -- -n DEV  // ローカル日時
  
  ## コマンド(NIC) ##
    sadf -j -- -n EDEV  // JSON形式
    sadf -x -- -n EDEV  // XML形式
    sadf -t -- -n EDEV  // ローカル日時
  
  // ログファイル指定時に「-f」を使用したらエラー
  
  ## 作業内容
    コマンドの動作確認を行う
  
[確認]
  # cd $HOME
  # sadf -jt -- -u -s 21:50:00 -e 22:50:00 /var/log/sa/sa24
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 24日のログファイルからJSON形式、ローカル時刻、CPU
  --------------------------------------------------
  
  # cd $HOME
  # sadf -xt -- -u -s 21:50:00 -e 22:50:00 /var/log/sa/sa24
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 24日のログファイルからXML形式、ローカル時刻、CPU
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[09]
  Command - 08 (uptime)
  
[内容]
  ## コマンド ##
    uptime  // システム稼働時間、ログインユーザー数、CPU負荷を出力
  
  ## 作業内容
    コマンドの動作確認を行う
  
[確認]
  # cd $HOME
  # uptime
  
  コマンドの実行結果
  --------------------------------------------------
  // コマンド「top」の1行目と同一
  
  11:35:36 up 3:20, 2 users, load average: 0.42, 0.87, 1.00
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[10]
  Command - 09 (w)
  
[内容]
  ## コマンド ##
    w      // ログインユーザーとプロセス情報を出力
    w -h   // ヘッダを非表示
    w -s   // ログイン時刻、JCPU、PCPUを非表示
  
  ## 項目説明 ##
    TTY    : 端末名
    FROM   : リモートホスト名
    LOGIN@ : ログイン時刻
    IDLE   : アイドル時間
    JCPU   : 端末から実行されている全プロセスが消費したCPU時間
    PCPU   : WHAT欄のプロセスが消費したCPU時間
    WHAT   : 実行コマンド
  
  ## 作業内容
    コマンドの動作確認を行う
  
[確認]
  # cd $HOME
  # w
  
  コマンドの実行結果
  --------------------------------------------------
  12:18:01 up  4:03,  2 users,  load average: 0.74, 0.26, 0.20
  USER    TTY    FROM  LOGIN@  IDLE   JCPU  PCPU   WHAT
  makoto  tty1   :0    08:15   4:03m  5:31  0.54s  /usr/libexec/gnome-session-binary ...
  makoto  pts/0  :0    08:15   1.00s  0.38s 11.14s /usr/libexec/gnome-terminal-server
  --------------------------------------------------
  
  # cd $HOME
  # w -h
  
  コマンドの実行結果
  --------------------------------------------------
  makoto  tty1   :0    08:15   4:03m  5:32  0.54s  /usr/libexec/gnome-session-binary ...
  makoto  pts/0  :0    08:15   0.00s  0.38s 11.26s /usr/libexec/gnome-terminal-server
  --------------------------------------------------
  
  # cd $HOME
  # w -s
  
  コマンドの実行結果
  --------------------------------------------------
  12:30:05 up  4:15,  2 users,  load average: 0.33, 0.45, 0.40
  USER    TTY    FROM  IDLE   WHAT
  makoto  tty1   :0    4:15m  /usr/libexec/gnome-session-binary --session gnome-classic
  makoto  pts/0  :0    5.00s  /usr/libexec/gnome-terminal-server
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[11]
  Command - 10 (ps)
  
[内容]
  ## コマンド ##
    ps a      // 端末上の全プロセス表示
    ps u      // 実行ユーザー表示
    ps x      // 制御端末を持たないプロセスも表示
    ps e      // 環境変数も表示
    ps r      // 実行中プロセスのみ表示
    ps l      // 長フォーマット
    ps -e     // 全プロセス表示
    ps -f     // 引数も含めた完全フォーマットで表示
    ps -l     // 長フォーマット
    ps -p XX  // XX(PID)を指定
    ps -u XX  // XX(UID)を指定
  
  ## 項目説明 ##
    PID     : プロセスID
    PPID    : 親プロセスのPID
    %CPU    : CPU使用率
    %MEM    : メモリ使用率
    VSZ     : プロセスが使用するメモリ量
    RSS     : 現時点で使用中のメモリ量
    TTY     : 制御端末名
    STAT    : プロセス状態(S:スリープ、D:割込不可、R:実行状態、T:トレースまたは停止、Z:消滅状態、W:スワップアウト)
    START   : 実行開始時刻
    TIME    : 消費したCPU時間
    COMMAND : 実行コマンド
  
  ## 作業内容
    コマンドの動作確認を行う
  
[確認]
  # cd $HOME
  # ps aux
  
  コマンドの実行結果
  --------------------------------------------------
  // システムで実行されている全プロセス
  
  USER  PID  %CPU  %MEM     VSZ   RSS  TTY  STAT  START  TIME  COMMAND
  root    1   0.0   0.1  193988  6040    ?    Ss  08:14  0:08  /usr/lib/systemd/systemd ...
  root    2   0.0   0.0       0     0    ?     S  08:14  0:00  [kthreadd]
  
  -- 省略 --
  --------------------------------------------------
  
  # cd $HOME
  # ps -ef
  
  コマンドの実行結果
  --------------------------------------------------
  // システムで実行されている全プロセス
  
  USER  PID  %CPU  %MEM     VSZ   RSS  TTY  STAT  START  TIME  COMMAND
  root    1   0.0   0.1  193988  6040    ?    Ss  08:14  0:08  /usr/lib/systemd/systemd ...
  root    2   0.0   0.0       0     0    ?     S  08:14  0:00  [kthreadd]
  
  -- 省略 --
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[12]
  Command - 11 (pstree)
  
[内容]
  ## コマンド ##
    pstree     // プロセスの親子関係をツリー状で表示
    pstree -l  // 長フォーマット
    pstree -p  // PID表示
  
  ## 作業内容
    コマンドの動作確認を行う
  
[確認]
  # cd $HOME
  # pstree
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> プロセスの親子関係がツリー状で表示
  --------------------------------------------------
  
  # cd $HOME
  # pstree -p
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> PID表示
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[13]
  Command - 12 (lsof)
  
[内容]
  ## コマンド ##
    lsof        // プロセス情報をリスト表示
    lsof -c XX  // コマンド(XX)に一致するプロセスのみ表示
    lsof -i:XX  // ポート番号(XX)へ通信しているプロセスのみ表示
    lsof -n     // DNS名前解決を行わない
    lsof -p XX  // PID(XX)のプロセスのみ表示
    lsof -u XX  // UID(XX)のプロセスのみ表示
  
  ## 作業内容
    コマンドの動作確認を行う
  
[確認]
  # cd $HOME
  # lsof -i:443 -n
  
  コマンドの実行結果
  --------------------------------------------------
  // ポート番号(443)へ通信しているプロセス一覧、DNS名前解決なし
  
  COMMAND  PID   USER   FD TYPE DEVICE SIZE/OFF NODE NAME
  firefox 4050 makoto  96u IPv4 413257      0t0  TCP 192.168.1.4:55984->117.18.237.70:https (ESTABLISHED)
  firefox 4050 makoto  97u IPv4 408349      0t0  TCP 192.168.1.4:54202->133.152.42.207:https (ESTABLISHED)
  firefox 4050 makoto 107u IPv4 429081      0t0  TCP 192.168.1.4:42872->133.152.40.136:https (ESTABLISHED)
  firefox 4050 makoto 125u IPv4  53136      0t0  TCP 192.168.1.4:38498->35.167.57.186:https (ESTABLISHED)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[14]
  Command - 13 (free)
  
[内容]
  ## コマンド ##
    free        // メモリとスワップの情報を表示
    free -b     // バイト単位で表示
    free -k     // キロバイト単位で表示
    free -m     // メガバイト単位で表示
    free -t     // 物理メモリとスワップの合計行も表示
    free -s XX  // 更新間隔(XX)を指定
  
  ## 項目説明 ##
    Mem        : 物理メモリのサイズ(バッファキャッシュを考慮)
    total      : 物理メモリのサイズ
    used       : 使用サイズ(バッファキャッシュを含む)
    free       : 空きメモリ(バッファキャッシュを含まない)
    shared     : 共有メモリ
    buff/cache : バッファキャッシュとページキャッシュ
    available  : 新しいアプリケーション起動時に利用可能な物理メモリ
    Swap       : スワップのサイズ
    total      : スワップのサイズ
    used       : 使用中のスワップ
    free       : 空きスワップ
  
  ## 作業内容
    コマンドの動作確認を行う
  
[確認]
  # cd $HOME
  # free -m
  
  コマンドの実行結果
  --------------------------------------------------
  // メガバイト単位で表示
  
                total        used        free      shared  buff/cache   available
  Mem:           3674        2204         183         388        1286         801
  Swap:          3839          91        3748
  --------------------------------------------------
  
  # cd $HOME
  # free -mt
  
  コマンドの実行結果
  --------------------------------------------------
  // メガバイト単位で表示、物理メモリとスワップの合計行も表示
  
                total        used        free      shared  buff/cache   available
  Mem:           3674        2244         119         389        1310         760
  Swap:          3839          92        3747
  Total:         7514        2336        3867
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[15]
  Command - 14 (df)
  
[内容]
  ## コマンド ##
    df     // ディスク使用量の表示
    df -a  // 全ファイルシステムのディスク使用量を表示
    df -h  // 1MB=1024KB
    df -H  // 1MB=1000KB
    df -i  // iノードの使用状況
    df -m  // メガバイト単位で表示
    df -T  // ファイルシステムタイプを表示
  
  ## 作業内容
    コマンドの動作確認を行う
  
[確認]
  # cd $HOME
  # df -hmT
  
  コマンドの実行結果
  --------------------------------------------------
  // 1MB=1024KB、メガバイト単位、ファイルシステムタイプを表示
  
  ファイルシステム         タイプ     1M-ブロック  使用  使用可 使用% マウント位置
  devtmpfs                devtmpfs        1821     0   1821    0% /dev
  tmpfs                   tmpfs           1838     7   1832    1% /dev/shm
  tmpfs                   tmpfs           1838    10   1828    1% /run
  tmpfs                   tmpfs           1838     0   1838    0% /sys/fs/cgroup
  /dev/mapper/centos-root xfs            51175 41570   9606   82% /
  /dev/sda1               xfs             1014   406    609   40% /boot
  /dev/mapper/centos-home xfs           432105 15821 416284    4% /home
  tmpfs                   tmpfs            368     1    368    1% /run/user/1000
  --------------------------------------------------
  
  # cd $HOME
  # df -iT
  
  コマンドの実行結果
  --------------------------------------------------
  // iノードの使用状況、ファイルシステムタイプを表示
  
  ファイルシステム         タイプ       Iノード  I使用     I残り I使用% マウント位置
  devtmpfs                devtmpfs    465996    440    465556     1% /dev
  tmpfs                   tmpfs       470356     10    470346     1% /dev/shm
  tmpfs                   tmpfs       470356    835    469521     1% /run
  tmpfs                   tmpfs       470356     16    470340     1% /sys/fs/cgroup
  /dev/mapper/centos-root xfs       20154648 467291  19687357     3% /
  /dev/sda1               xfs         524288    415    523873     1% /boot
  /dev/mapper/centos-home xfs      221345792 142030 221203762     1% /home
  tmpfs                   tmpfs       470356     21    470335     1% /run/user/1000
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[16]
  Command - 15 (netstat)
  
[内容]
  ## コマンド ##
    netstat -i  // NIC情報を出力
    netstat -s  // プロトコル毎の統計情報
  
  ## 作業内容
    コマンドの動作確認を行う
  
[確認]
  # cd $HOME
  # netstat -i
  
  コマンドの実行結果
  --------------------------------------------------
  // NIC情報を出力
  
  Kernel Interface table
  Iface             MTU    RX-OK RX-ERR RX-DRP RX-OVR    TX-OK TX-ERR TX-DRP TX-OVR Flg
  br-34da5207ff16  1500  2304190      0  18718 0        413290      0      0      0 BMU
  br-6ba5137bcb72  1500  2304190      0  18718 0        413290      0      0      0 BMU
  br-889b2be5929d  1500        0      0      0 0             0      0      0      0 BMU
  br-c84c0f06b423  1500  2304190      0  18718 0        413290      0      0      0 BMU
  br-fbe4fd9c28f2  1500        0      0      0 0             0      0      0      0 BMU
  docker0          1500        0      0      0 0             0      0      0      0 BMU
  enp0s25          1500  2304190      0  18718 0        413290      0      0      0 BMRU
  lo              65536    11937      0      0 0         11937      0      0      0 LRU
  virbr0           1500        0      0      0 0             0      0      0      0 BMU
  --------------------------------------------------
  
  # cd $HOME
  # netstat -s
  
  コマンドの実行結果
  --------------------------------------------------
  // プロトコル毎の統計情報 -> IPのみ記載
  
  Ip:
    639758 total packets received
    0 forwarded
    0 incoming packets discarded
    636236 incoming packets delivered
    428907 requests sent out
    16 outgoing packets dropped
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[17]
  Command - 16 (ss)
  
[内容]
  ## コマンド ##
    ss -t  // TCP接続を表示
    ss -u  // UDP接続を表示
    ss -s  // 接続状態の統計を表示
  
  ## 作業内容
    コマンドの動作確認を行う
  
[確認]
  # cd $HOME
  # ss -t
  
  コマンドの実行結果
  --------------------------------------------------
  // TCP接続を表示
  
  State      Recv-Q Send-Q      Local Address:Port      Peer Address:Port
  ESTAB      0      0           127.0.0.1:56572         127.0.0.1:43851
  ESTAB      0      0           127.0.0.1:43851         127.0.0.1:56550
  ESTAB      0      0           127.0.0.1:56562         127.0.0.1:43851
  ESTAB      0      0           127.0.0.1:43851         127.0.0.1:56572
  ESTAB      0      0           127.0.0.1:56542         127.0.0.1:43851
  ESTAB      0      0           192.168.1.4:39402       157.240.3.35:https
  ESTAB      0      0           127.0.0.1:43851         127.0.0.1:56562
  ESTAB      0      0           127.0.0.1:56566         127.0.0.1:43851
  ESTAB      0      0           192.168.1.4:57412       117.18.237.70:https
  ESTAB      0      0           192.168.1.4:38498       35.167.57.186:https
  ESTAB      0      0           127.0.0.1:43851         127.0.0.1:56566
  ESTAB      0      0           127.0.0.1:56550         127.0.0.1:43851
  ESTAB      0      0           127.0.0.1:43851         127.0.0.1:56558
  ESTAB      0      0           192.168.1.4:40296       133.152.61.36:https
  ESTAB      0      0           127.0.0.1:56546         127.0.0.1:43851
  ESTAB      0      0           127.0.0.1:43851         127.0.0.1:56542
  ESTAB      0      0           127.0.0.1:56558         127.0.0.1:43851
  ESTAB      0      0           192.168.1.4:55918       133.152.42.207:https
  ESTAB      0      0           192.168.1.4:48112       35.244.247.133:https
  ESTAB      0      0           127.0.0.1:43851         127.0.0.1:56546
  --------------------------------------------------
  
  # cd $HOME
  # ss -s
  
  コマンドの実行結果
  --------------------------------------------------
  // 接続状態の統計を表示
  
  Total: 1099 (kernel 1227)
  TCP: 35 (estab 27, closed 1, orphaned 0, synrecv 0, timewait 0/0), ports 0
  
  Transport  Total  IP     IPv6
  *	         1227   -      -
  RAW        0      0      0
  UDP        11     8      3
  TCP        34     32     2
  INET       45     40     5
  FRAG       0      0      0
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================

================================================================================
[01] 練習 - 01
[02] 練習 - 02
[03] 練習 - 03
[04] 練習 - 04
[05] 練習 - 05
[06] 練習 - 06
[07] 練習 - 07
[08] 練習 - 08
[09] 練習 - 09
[10] 練習 - 10
[11] 練習 - 11
[12] 練習 - 12
================================================================================
[01]
  練習 - 01
  
[内容]
  ## 作業内容
    ・イメージ取得
    ・コンテナ起動と停止
    ・コマンド実行
    ・外部ネットワークへの通信
    ・デタッチとアタッチ
    ・追加インストール
  
  ## ホスト
    HOST : localhost
    IPV4 : DHCP
    MEMO : 自宅ノートパソコン
  
  ## コンテナ
    HOST : rocky01
    IPV4 : 自動採番
    MEMO : イメージ「rockylinux:8」を元に生成
  
  ## コマンド
    podman --version : バージョン表示
    podman search    : イメージ検索
    podman pull XX   : イメージ(XX)を取得
    podman images    : イメージ一覧
    podman run       : コンテナ起動
    podman ps        : コンテナ一覧
    podman exec XX   : コマンド(XX)を実行
    podman stop XX   : コンテナ(XX)を停止
    podman start XX  : コンテナ(XX)を起動
    podman rm XX     : コンテナ(XX)を削除
  
[確認]
  # cd $HOME
  # podman --version
  
  コマンドの実行結果
  --------------------------------------------------
  podman version 4.2.0
  --------------------------------------------------
  
  # cd $HOME
  # cat /etc/redhat-release
  
  コマンドの実行結果
  --------------------------------------------------
  Rocky Linux release 8.7 (Green Obsidian) -> Rocky Linux のイメージの使用決定
  --------------------------------------------------
  
  # cd $HOME
  # podman search --filter=is-official=true rocky -> 公式のみ検索
  
  コマンドの実行結果
  --------------------------------------------------
  NAME                          DESCRIPTION
  docker.io/library/rockylinux  The official build of Rocky Linux.
  --------------------------------------------------
  
  # cd $HOME
  # podman pull rockylinux/rockylinux:8 -> docker.io/rockylinux/rockylinux:8 を選択
  
  コマンドの実行結果
  --------------------------------------------------
  Trying to pull docker.io/rockylinux/rockylinux:8...
  Getting image source signatures
  Copying blob 4eaab28a863f done  
  Copying config e7368aa563 done  
  Writing manifest to image destination
  Storing signatures
  e7368aa563ffb98f3ef977b07bee7c356282160bbeeb5586cef28aecd3f2cbc5
  --------------------------------------------------
  
  # cd $HOME
  # podman images
  
  コマンドの実行結果
  --------------------------------------------------
  REPOSITORY                       TAG  IMAGE ID      CREATED       SIZE
  docker.io/rockylinux/rockylinux  8    e7368aa563ff  2 months ago  203 MB
  --------------------------------------------------
  
  # cd $HOME
  # podman run
  > -i                  // キー入力有効
  > -t                  // シェルプロンプト表示
  > --name rocky01      // コンテナ名
  > --hostname rocky01  // ホスト名
  > rockylinux:8        // イメージ名
  > /bin/bash           // シェル指定
  
  コマンドの実行結果
  --------------------------------------------------
  (プロンプト変化) -> アタッチモードでコンテナ内部にログインした状態から始まる
  --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# whoami
    
    コマンドの実行結果
    --------------------------------------------------
    root
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# pwd
    
    コマンドの実行結果
    --------------------------------------------------
    / -> ルートディレクトリ
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# hostname
    
    コマンドの実行結果
    --------------------------------------------------
    rocky01
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# uname -r
    
    コマンドの実行結果
    --------------------------------------------------
    4.18.0-425.19.2.el8_7.x86_64 -> ホストと同じバージョン
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# cat /etc/redhat-release
    
    コマンドの実行結果
    --------------------------------------------------
    Rocky Linux release 8.7 (Green Obsidian)
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# [ Ctrl + P ] + [ Ctrl + Q ] -> デタッチ
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  # cd $HOME
  # podman ps -a -> 停止コンテナも表示
  
  コマンドの実行結果
  --------------------------------------------------
  CONTAINER ID  IMAGE                              COMMAND    CREATED         STATUS             PORTS  NAMES
  33ca3f8bf867  docker.io/rockylinux/rockylinux:8  /bin/bash  50 seconds ago  Up 50 seconds ago         rocky01
  --------------------------------------------------
  
  # cd $HOME
  # podman exec -it rocky01 /bin/bash -> コンテナへ再びアタッチ
  
  コマンドの実行結果
  --------------------------------------------------
  (プロンプト変化)
  --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# ping -c 3 rocky01 -> 自アドレスへ通信
    
    コマンドの実行結果
    --------------------------------------------------
    PING rocky01 (10.88.0.4) 56(84) bytes of data.
    64 bytes from rocky01 (10.88.0.4): icmp_seq=1 ttl=64 time=0.069 ms
    64 bytes from rocky01 (10.88.0.4): icmp_seq=2 ttl=64 time=0.108 ms
    64 bytes from rocky01 (10.88.0.4): icmp_seq=3 ttl=64 time=0.086 ms
    
    --- rocky01 ping statistics ---
    3 packets transmitted, 3 received, 0% packet loss, time 2045ms
    rtt min/avg/max/mdev = 0.069/0.087/0.108/0.019 ms
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# ping -c 3 192.168.1.1 -> 家庭用ルータへ通信
    
    コマンドの実行結果
    --------------------------------------------------
    PING 192.168.1.1 (192.168.1.1) 56(84) bytes of data.
    64 bytes from 192.168.1.1: icmp_seq=1 ttl=254 time=0.947 ms
    64 bytes from 192.168.1.1: icmp_seq=2 ttl=254 time=0.894 ms
    64 bytes from 192.168.1.1: icmp_seq=3 ttl=254 time=0.861 ms
    
    --- 192.168.1.1 ping statistics ---
    3 packets transmitted, 3 received, 0% packet loss, time 2002ms
    rtt min/avg/max/mdev = 0.861/0.900/0.947/0.049 ms
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# ping -c 3 www.yahoo.co.jp -> インターネット上のサーバーへ通信
    
    コマンドの実行結果
    --------------------------------------------------
    PING edge12.g.yimg.jp (183.79.219.252) 56(84) bytes of data.
    64 bytes from 183.79.219.252 (183.79.219.252): icmp_seq=1 ttl=48 time=16.0 ms
    64 bytes from 183.79.219.252 (183.79.219.252): icmp_seq=2 ttl=48 time=16.2 ms
    64 bytes from 183.79.219.252 (183.79.219.252): icmp_seq=3 ttl=48 time=16.2 ms
    
    --- edge12.g.yimg.jp ping statistics ---
    3 packets transmitted, 3 received, 0% packet loss, time 2003ms
    rtt min/avg/max/mdev = 16.045/16.140/16.194/0.067 ms
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# ifconfig
    
    コマンドの実行結果
    --------------------------------------------------
    bash: ifconfig: command not found
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# traceroute
    
    コマンドの実行結果
    --------------------------------------------------
    bash: traceroute: command not found
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# dnf -y install net-tools -> 追加インストール
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> エラー出力が無ければOK
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# dnf -y install traceroute -> 追加インストール
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> エラー出力が無ければOK
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# ifconfig
    
    コマンドの実行結果
    --------------------------------------------------
    eth0: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500
        inet 10.88.0.4  netmask 255.255.0.0  broadcast 10.88.255.255
        inet6 fe80::8ef:bbff:fe6b:c93a  prefixlen 64  scopeid 0x20<link>
        ether 0a:ef:bb:6b:c9:3a  txqueuelen 0  (Ethernet)
        RX packets 2716  bytes 18209697 (17.3 MiB)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 2178  bytes 157294 (153.6 KiB)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
    
    lo: flags=73<UP,LOOPBACK,RUNNING>  mtu 65536
        inet 127.0.0.1  netmask 255.0.0.0
        inet6 ::1  prefixlen 128  scopeid 0x10<host>
        loop  txqueuelen 1000  (Local Loopback)
        RX packets 6  bytes 504 (504.0 B)
        RX errors 0  dropped 0  overruns 0  frame 0
        TX packets 6  bytes 504 (504.0 B)
        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# traceroute 192.168.1.1 -> 家庭用ルータまでの経路
    
    コマンドの実行結果
    --------------------------------------------------
    traceroute to 192.168.1.1 (192.168.1.1), 30 hops max, 60 byte packets
    1  host.containers.internal (10.88.0.1)  0.219 ms  0.070 ms  0.058 ms -> 10.88.0.1 を経由する
    2  ntt.setup (192.168.1.1)  0.856 ms  1.084 ms  1.279 ms
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# exit -> デタッチ
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  # cd $HOME
  # podman ps -a -> 停止コンテナも表示
  
  コマンドの実行結果
  --------------------------------------------------
  CONTAINER ID  IMAGE                              COMMAND    CREATED        STATUS            PORTS  NAMES
  33ca3f8bf867  docker.io/rockylinux/rockylinux:8  /bin/bash  7 minutes ago  Up 7 minutes ago         rocky01
  --------------------------------------------------
  
  # cd $HOME
  # podman stop rocky01
  
  コマンドの実行結果
  --------------------------------------------------
  rocky01
  --------------------------------------------------
  
  # cd $HOME
  # podman ps -a -> 停止コンテナも表示
  
  コマンドの実行結果
  --------------------------------------------------
  CONTAINER ID  IMAGE                              COMMAND    CREATED        STATUS                    PORTS  NAMES
  33ca3f8bf867  docker.io/rockylinux/rockylinux:8  /bin/bash  8 minutes ago  Exited (0) 6 seconds ago         rocky01
  --------------------------------------------------
  
  # cd $HOME
  # podman start rocky01
  
  コマンドの実行結果
  --------------------------------------------------
  rocky01
  --------------------------------------------------
  
  # cd $HOME
  # podman ps -a -> 停止コンテナも表示
  
  コマンドの実行結果
  --------------------------------------------------
  CONTAINER ID  IMAGE                              COMMAND    CREATED        STATUS            PORTS  NAMES
  33ca3f8bf867  docker.io/rockylinux/rockylinux:8  /bin/bash  8 minutes ago  Up 4 seconds ago         rocky01
  --------------------------------------------------
  
  # cd $HOME
  # podman stop rocky01
  
  コマンドの実行結果
  --------------------------------------------------
  rocky01
  --------------------------------------------------
  
  # cd $HOME
  # podman rm rocky01
  
  コマンドの実行結果
  --------------------------------------------------
  33ca3f8bf867b5c3bdacf2599a79c05eeefa7c5a70f1397b64d72973092d001e
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[02]
  練習 - 02
  
[内容]
  ## 作業内容
    コンテナとホスト間でファイルのコピー
  
  ## ホスト
    HOST : localhost
    IPV4 : DHCP
    MEMO : 自宅ノートパソコン
  
  ## コンテナ
    HOST : rocky01
    IPV4 : 自動採番
    MEMO : イメージ「rockylinux:8」を元に生成
  
  ## コマンド
    podman cp XX YY:ZZ : ファイル(XX)をコンテナ(YY)のコンテナ側のディレクトリ(ZZ)にコピー
    podman cp XX:YY ZZ : コンテナ(XX)のファイル(YY)をホスト側のディレクトリ(ZZ)にコピー
  
[確認]
  # cd $HOME
  # podman ps -a
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  # cd $HOME
  # vi script01.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # 既存ログファイル削除
  if test -f script.log ; then
    rm -f script.log
  fi
  
  # 指定回数ループ
  for i in $(seq 1 5)
  do
    echo "script01 : $i" >> script.log
    sleep 1
  done
  --------------------------------------------------
  
  # cd $HOME
  # podman run
  > -i                  // キー入力有効
  > -t                  // シェルプロンプト表示
  > -d                  // デタッチ -> アタッチモードで最初からコンテナにログインした状態を回避
  > --name rocky01      // コンテナ名
  > --hostname rocky01  // ホスト名
  > rockylinux:8        // イメージ名
  > /bin/bash           // シェル指定
  
  コマンドの実行結果
  --------------------------------------------------
  9e3ddfc27ea426b1794e3f133b79da67c625495eaefeb37e81fb216b8d370d59
  --------------------------------------------------
  
  # cd $HOME
  # podman cp script01.sh rocky01:/root -> コンテナへファイルをコピー
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  # cd $HOME
  # podman exec -it rocky01 /bin/bash -> コンテナへアタッチ
  
  コマンドの実行結果
  --------------------------------------------------
  (プロンプト変化)
  --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# cd root
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 ~]# pwd
    
    コマンドの実行結果
    --------------------------------------------------
    /root
    --------------------------------------------------
    
    [root@rocky01 ~]# 
    [root@rocky01 ~]# ls -lh | grep script
    
    コマンドの実行結果
    --------------------------------------------------
    -rw-r--r--. 1 root root  197 Apr 24 03:21 script01.sh
    --------------------------------------------------
    
    [root@rocky01 ~]# 
    [root@rocky01 ~]# bash script01.sh
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    [root@rocky01 ~]# 
    [root@rocky01 ~]# ls -lh | grep script
    
    コマンドの実行結果
    --------------------------------------------------
    -rw-r--r--. 1 root root   65 Apr 24 03:24 script.log
    -rw-r--r--. 1 root root  197 Apr 24 03:21 script01.sh
    --------------------------------------------------
    
    [root@rocky01 ~]# 
    [root@rocky01 ~]# cat script.log
    
    コマンドの実行結果
    --------------------------------------------------
    script01 : 1
    script01 : 2
    script01 : 3
    script01 : 4
    script01 : 5
    --------------------------------------------------
    
    [root@rocky01 ~]# 
    [root@rocky01 ~]# exit -> デタッチ
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  # cd $HOME
  # ls -lh | grep script
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root  197  4月 24 12:21 script01.sh
  --------------------------------------------------
  
  # cd $HOME
  # podman cp rocky01:/root/script.log .(カレントディレクトリ) -> コンテナからファイルをコピー
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  # cd $HOME
  # ls -lh | grep script
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root   65  4月 24 12:24 script.log
  -rw-r--r--. 1 root root  197  4月 24 12:21 script01.sh
  --------------------------------------------------
  
  # cd $HOME
  # cat script.log
  
  コマンドの実行結果
  --------------------------------------------------
  script01 : 1
  script01 : 2
  script01 : 3
  script01 : 4
  script01 : 5
  --------------------------------------------------
  
  # cd $HOME
  # podman stop rocky01
  
  コマンドの実行結果
  --------------------------------------------------
  rocky01
  --------------------------------------------------
  
  # cd $HOME
  # podman rm rocky01
  
  コマンドの実行結果
  --------------------------------------------------
  9e3ddfc27ea426b1794e3f133b79da67c625495eaefeb37e81fb216b8d370d59
  --------------------------------------------------
  
  # cd $HOME
  # rm -f script*
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[03]
  練習 - 03
  
[内容]
  ## 作業内容
    ホスト側とコンテナのディレクトリ共有
  
  ## ホスト
    HOST : localhost
    IPV4 : DHCP
    MEMO : 自宅ノートパソコン
  
  ## コンテナ
    HOST : rocky01
    IPV4 : 自動採番
    MEMO : イメージ「rockylinux:8」を元に生成
  
[確認]
  # cd $HOME
  # mkdir -p container/rocky01 -> コンテナ用のディレクトリ作成
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  # cd $HOME
  # podman ps -a
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  # cd $HOME/container/rocky01
  # vi script01.sh
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # 既存ログファイル削除
  if test -f script.log ; then
    rm -f script.log
  fi
  
  # 指定回数ループ
  for i in $(seq 1 5)
  do
    echo "script01 : $i" >> script.log
    sleep 1
  done
  --------------------------------------------------
  
  # cd $HOME
  # podman run
  > -i
  > -t
  > -v ./container/rocky01:/opt:Z -> ホスト側 : コンテナ : Z(SELinuxの設定を自動変更)
  > --name rocky01
  > --hostname rocky01
  > rockylinux:8
  > /bin/bash
  
  コマンドの実行結果
  --------------------------------------------------
  (プロンプト変化)
  --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# cd opt
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    [root@rocky01 opt]# 
    [root@rocky01 opt]# pwd
    
    コマンドの実行結果
    --------------------------------------------------
    /opt
    --------------------------------------------------
    
    [root@rocky01 opt]# 
    [root@rocky01 opt]# ls -lh | grep script
    
    コマンドの実行結果
    --------------------------------------------------
    -rw-r--r--. 1 root root 197 Apr 24 03:33 script01.sh
    --------------------------------------------------
    
    [root@rocky01 opt]# 
    [root@rocky01 opt]# bash script01.sh
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    [root@rocky01 opt]# 
    [root@rocky01 opt]# ls -lh | grep script
    
    コマンドの実行結果
    --------------------------------------------------
    -rw-r--r--. 1 root root  65 Apr 24 03:35 script.log
    -rw-r--r--. 1 root root 197 Apr 24 03:33 script01.sh
    --------------------------------------------------
    
    [root@rocky01 opt]# 
    [root@rocky01 opt]# cat script.log
    
    コマンドの実行結果
    --------------------------------------------------
    script01 : 1
    script01 : 2
    script01 : 3
    script01 : 4
    script01 : 5
    --------------------------------------------------
    
    [root@rocky01 opt]# 
    [root@rocky01 opt]# exit -> デタッチ
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
  
  # cd $HOME
  # ls -lh container/rocky01
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root  65  4月 24 12:35 script.log
  -rw-r--r--. 1 root root 197  4月 24 12:33 script01.sh
  --------------------------------------------------
  
  # cd $HOME
  # cat container/rocky01/script.log
  
  コマンドの実行結果
  --------------------------------------------------
  script01 : 1
  script01 : 2
  script01 : 3
  script01 : 4
  script01 : 5
  --------------------------------------------------
  
  # cd $HOME
  # rm  -f container/rocky01/script.log
  
  コマンドの実行結果
  --------------------------------------------------
  script01 : 1
  script01 : 2
  script01 : 3
  script01 : 4
  script01 : 5
  --------------------------------------------------
  
  # cd $HOME
  # podman stop rocky01
  
  コマンドの実行結果
  --------------------------------------------------
  rocky01
  --------------------------------------------------
  
  # cd $HOME
  # podman rm rocky01
  
  コマンドの実行結果
  --------------------------------------------------
  ca6723b90a2a55edc8cefd3f31773494900729d8cea7ab55604d1ee558bec136
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[04]
  練習 - 04
  
[内容]
  ## 作業内容
    コンテナをイメージ化
  
  ## ホスト
    HOST : localhost
    IPV4 : DHCP
    MEMO : 自宅ノートパソコン
  
  ## コンテナ1
    HOST : rocky01
    IPV4 : 自動採番
    MEMO : イメージ「rockylinux:8」を元に生成
  
  ## コンテナ2
    HOST : rocky02
    IPV4 : 自動採番
    MEMO : イメージ「rockylinux:8」を元に生成
  
[確認]
  # cd $HOME
  # podman run
  > -i
  > -t
  > --name rocky01
  > --hostname rocky01
  > rockylinux:8
  > /bin/bash
  
  コマンドの実行結果
  --------------------------------------------------
  (プロンプト変化)
  --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# dnf -y install net-tools -> 差別化を図るため追加インストール
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# dnf -y install traceroute -> 差別化を図るため追加インストール
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# exit -> デタッチ
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  # cd $HOME
  # podman stop rocky01
  
  コマンドの実行結果
  --------------------------------------------------
  rocky01
  --------------------------------------------------
  
  # cd $HOME
  # podman commit rocky01 image01 -> コンテナの構成をイメージ化
  
  コマンドの実行結果
  --------------------------------------------------
  Getting image source signatures
  Copying blob d6d602e436a8 skipped: already exists  
  Copying blob 5d52432fa816 done  
  Copying config 2ea6c5e5a4 done  
  Writing manifest to image destination
  Storing signatures
  2ea6c5e5a4e4c299a07d1983916141d89c6db8322e38969a93e655f1a2c212b3
  --------------------------------------------------
  
  # cd $HOME
  # podman images
  
  コマンドの実行結果
  --------------------------------------------------
  REPOSITORY                       TAG     IMAGE ID      CREATED         SIZE
  localhost/image01                latest  2ea6c5e5a4e4  33 seconds ago  252 MB
  docker.io/rockylinux/rockylinux  8       e7368aa563ff  2 months ago    203 MB
  --------------------------------------------------
  
  # cd $HOME
  # podman run
  > -i
  > -t
  > --name rocky02
  > --hostname rocky02
  > image01 -> 新たに作成したイメージを使用
  > /bin/bash
  
  コマンドの実行結果
  --------------------------------------------------
  (プロンプト変化)
  --------------------------------------------------
    
    [root@rocky02 /]# 
    [root@rocky02 /]# ifconfig -> 追加インストールのコマンドが最初から使用可能
    
    コマンドの実行結果
    --------------------------------------------------
    (省略)
    --------------------------------------------------
    
    [root@rocky02 /]# 
    [root@rocky02 /]# traceroute 192.168.1.1 -> 追加インストールのコマンドが最初から使用可能
    
    コマンドの実行結果
    --------------------------------------------------
    (省略)
    --------------------------------------------------
    
    [root@rocky02 /]# 
    [root@rocky02 /]# exit -> デタッチ
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  # cd $HOME
  # podman stop rocky02
  
  コマンドの実行結果
  --------------------------------------------------
  rocky02
  --------------------------------------------------
  
  # cd $HOME
  # podman ps -a
  
  コマンドの実行結果
  --------------------------------------------------
  CONTAINER ID  IMAGE                              COMMAND    CREATED             STATUS                     PORTS  NAMES
  7ac922df25c7  docker.io/rockylinux/rockylinux:8  /bin/bash  5 minutes ago       Exited (0) 4 minutes ago          rocky01
  3607fb870886  localhost/image01:latest           /bin/bash  About a minute ago  Exited (0) 51 seconds ago         rocky02
  --------------------------------------------------
  
  # cd $HOME
  # podman rm rocky01 rocky02
  
  コマンドの実行結果
  --------------------------------------------------
  7ac922df25c7790a3697df492678a7cfd855aebb71f386ad878a5e6d7e805d68
  3607fb8708866ff6c670522b87374e6cfc3d3640c8173ef32a6fd4219430f504
  --------------------------------------------------
  
  # cd $HOME
  # podman rmi image01:latest
  
  コマンドの実行結果
  --------------------------------------------------
  Untagged: localhost/image01:latest
  Deleted: 2ea6c5e5a4e4c299a07d1983916141d89c6db8322e38969a93e655f1a2c212b3
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[05]
  練習 - 05
  
[内容]
  ## 作業内容
    イメージをファイル「Dockerfile」を使用してカスタム化
  
  ## ホスト
    HOST : localhost
    IPV4 : DHCP
    MEMO : 自宅ノートパソコン
  
  ## コンテナ1
    HOST : rocky01
    IPV4 : 自動採番
    MEMO : イメージ「rockylinux:8」を元に生成
  
[確認]
  # cd $HOME/container/rocky01 -> コンテナ用のディレクトリ
  # ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 197  4月 24 12:33 script01.sh
  --------------------------------------------------
  
  # cd $HOME/container/rocky01
  # vi Dockerfile
  
  コマンドの実行結果
  --------------------------------------------------
  FROM rockylinux:8
  RUN dnf -y install net-tools
  RUN dnf -y install traceroute
  COPY script01.sh /opt/
  CMD ["/bin/bash"]
  --------------------------------------------------
  
  # cd $HOME/container/rocky01
  # podman build -t rocky:1 .(カレントディレクトリ) -> 実行結果は重要部分のみ抜粋
  
  コマンドの実行結果
  --------------------------------------------------
  STEP 1/5: FROM rockylinux:8
  STEP 2/5: RUN dnf -y install net-tools
  STEP 3/5: RUN dnf -y install traceroute
  STEP 4/5: COPY script01.sh /opt/
  STEP 5/5: CMD ["/bin/bash"]
  COMMIT rocky:1
  Successfully tagged localhost/rocky:1
  3d911771884fc539352ad4e89ebb48cfca3ec98762af33cc271457cdeb538ced
  --------------------------------------------------
  
  # cd $HOME/container/rocky01
  # podman images
  
  コマンドの実行結果
  --------------------------------------------------
  REPOSITORY                       TAG  IMAGE ID      CREATED             SIZE
  localhost/rocky                  1    3d911771884f  About a minute ago  281 MB
  docker.io/rockylinux/rockylinux  8    e7368aa563ff  2 months ago        203 MB
  --------------------------------------------------
  
  # cd $HOME
  # podman run
  > -i
  > -t
  > --name rocky01
  > --hostname rocky01
  > rocky:1 -> ビルドされたイメージ名
  > /bin/bash
  
  コマンドの実行結果
  --------------------------------------------------
  (プロンプト変化)
  --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# ifconfig -> コマンドが最初から使用可能
    
    コマンドの実行結果
    --------------------------------------------------
    (省略)
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# traceroute 192.168.1.1 -> コマンドが最初から使用可能
    
    コマンドの実行結果
    --------------------------------------------------
    (省略)
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# ls -lh /opt
    
    コマンドの実行結果
    --------------------------------------------------
    -rw-r--r--. 1 root root 197 Apr 24 03:33 script01.sh
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# exit -> デタッチ
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  # cd $HOME
  # podman stop rocky01
  
  コマンドの実行結果
  --------------------------------------------------
  rocky01
  --------------------------------------------------
  
  # cd $HOME
  # podman rm rocky01
  
  コマンドの実行結果
  --------------------------------------------------
  7362d0779ea83aa6a50b42c7fe8c9c6e8a8bc41f383c43d8ea0ef819a08bc867
  --------------------------------------------------
  
  # cd $HOME
  # podman rmi rocky:1
  
  コマンドの実行結果
  --------------------------------------------------
  Untagged: localhost/rocky:1
  Deleted: 3d911771884fc539352ad4e89ebb48cfca3ec98762af33cc271457cdeb538ced
  Deleted: 75ea3c52a541539aa2c65a75b1aa1802f17177521dd5d6055523c5bb1a55620e
  Deleted: f8030d0e258c4f99d57bd20d8ce225737fed5515f609c3c7cecaade32884e642
  Deleted: 1bf8dea2564962230a7d4cff755db902e9a5f7f60fa7df698e8cd4b3aeba1541
  --------------------------------------------------
  
  # cd $HOME/container/rocky01
  # rm -f Dockerfile script01.sh -> 不要ファイル削除
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[06]
  練習 - 06
  
[内容]
  ## 作業内容
    コンテナの外部ストレージ
  
  ## ホスト
    HOST : localhost
    IPV4 : DHCP
    MEMO : 自宅ノートパソコン
  
  ## コンテナ
    HOST : rocky01
    IPV4 : 自動採番
    MEMO : イメージ「rockylinux:8」を元に生成
  
[確認]
  # cd $HOME/container/rocky01
  # mkdir disk01
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  # cd $HOME/container/rocky01
  # tree
  
  コマンドの実行結果
  --------------------------------------------------
  |-- disk01
  --------------------------------------------------
  
  # cd $HOME
  # podman run
  > -i
  > -t
  > --name rocky01
  > --hostname rocky01
  > --privileged -> SELinux が Enforcing の場合に必要
  > -v ./container/rocky01/disk01:/mnt -> ディレクトリ共有
  > rockylinux:8
  > /bin/bash
  
  コマンドの実行結果
  --------------------------------------------------
  (プロンプト変化)
  --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# df -mT
    
    コマンドの実行結果
    --------------------------------------------------
    Filesystem           Type     1M-blocks  Used  Available  Use%  Mounted on
    overlay              overlay      71645  9835      61811   14%  /
    tmpfs                tmpfs           64     0         64    0%  /dev
    /dev/mapper/rl-root  xfs          71645  9835      61811   14%  /mnt -> ホスト側とディレクトリ共有
    tmpfs                tmpfs         1809    10       1799    1%  /etc/hosts
    shm                  tmpfs           63     0         63    0%  /dev/shm
    tmpfs                tmpfs         1809     0       1809    0%  /sys/fs/cgroup
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# cd mnt
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    [root@rocky01 mnt]# 
    [root@rocky01 mnt]# vi sample.txt
    
    コマンドの実行結果
    --------------------------------------------------
    1582年 本能寺の変
    1600年 関ヶ原の戦い
    1615年 大坂夏の陣
    --------------------------------------------------
    
    [root@rocky01 mnt]# 
    [root@rocky01 mnt]# exit -> デタッチ
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  # cd $HOME
  # podman stop rocky01
  
  コマンドの実行結果
  --------------------------------------------------
  rocky01
  --------------------------------------------------
  
  # cd $HOME
  # podman rm rocky01
  
  コマンドの実行結果
  --------------------------------------------------
  09ae7b8f647fbda58b59f3e48998fd4543b3f8aaaf5b9c2f5adde8acfd3f5d8e
  --------------------------------------------------
  
  # cd $HOME/container/rocky01
  # cat disk01/sample.txt
  
  コマンドの実行結果
  --------------------------------------------------
  1582年 本能寺の変
  1600年 関ヶ原の戦い
  1615年 大坂夏の陣
  --------------------------------------------------
  
  # cd $HOME/container/rocky01
  # rm -rf disk01
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[07]
  練習 - 07
  
[内容]
  ## 作業内容
    データボリュームの使用
  
  ## ホスト
    HOST : localhost
    IPV4 : DHCP
    MEMO : 自宅ノートパソコン
  
  ## コンテナ
    HOST : rocky01
    IPV4 : 自動採番
    MEMO : イメージ「rockylinux:8」を元に生成
  
  ## コンテナ
    HOST : rocky02
    IPV4 : 自動採番
    MEMO : イメージ「rockylinux:8」を元に生成
  
[確認]
  # cd $HOME
  # podman volume ls
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  # cd $HOME
  # podman volume create volume01
  
  コマンドの実行結果
  --------------------------------------------------
  volume01
  --------------------------------------------------
  
  # cd $HOME
  # podman volume ls
  
  コマンドの実行結果
  --------------------------------------------------
  DRIVER  VOLUME NAME
  local   volume01
  --------------------------------------------------
  
  # cd $HOME
  # podman volume inspect volume01
  
  コマンドの実行結果
  --------------------------------------------------
  [
    {
      "Name": "volume01",
      "Driver": "local",
      "Mountpoint": "/var/lib/containers/storage/volumes/volume01/_data",
      "CreatedAt": "2023-04-24T13:29:59.797604839+09:00",
      "Labels": {},
      "Scope": "local",
      "Options": {},
      "MountCount": 0,
      "NeedsCopyUp": true,
      "NeedsChown": true
    }
  ]
  --------------------------------------------------
  
  # cd $HOME
  # podman run
  > -i
  > -t
  > --name rocky01
  > --hostname rocky01
  > --privileged -> SELinux が Enforcing の場合に必要
  > -v volume01:/mnt -> データボリューム指定
  > rockylinux:8
  > /bin/bash
  
  コマンドの実行結果
  --------------------------------------------------
  (プロンプト変化)
  --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# df -mT
    
    コマンドの実行結果
    --------------------------------------------------
    Filesystem           Type     1M-blocks  Used  Available  Use%  Mounted on
    overlay              overlay      71645  9835      61811   14%  /
    tmpfs                tmpfs           64     0         64    0%  /dev
    /dev/mapper/rl-root  xfs          71645  9835      61811   14%  /mnt -> 実体はデータボリューム
    shm                  tmpfs           63     0         63    0%  /dev/shm
    tmpfs                tmpfs         1809    10       1799    1%  /etc/hosts
    tmpfs                tmpfs         1809     0       1809    0%  /sys/fs/cgroup
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# cd mnt
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    [root@rocky01 mnt]# 
    [root@rocky01 mnt]# vi sample.txt
    
    コマンドの実行結果
    --------------------------------------------------
    1582年 本能寺の変
    1600年 関ヶ原の戦い
    1615年 大坂夏の陣
    --------------------------------------------------
    
    [root@rocky01 mnt]# 
    [root@rocky01 mnt]# exit -> デタッチ
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  # cd $HOME
  # podman stop rocky01
  
  コマンドの実行結果
  --------------------------------------------------
  rocky01
  --------------------------------------------------
  
  # cd $HOME
  # podman rm rocky01
  
  コマンドの実行結果
  --------------------------------------------------
  fda8f1f6cfb5200d695d51d1ff1b34abebcb06a59418b7135df0645775c03ade
  --------------------------------------------------
  
  # cd $HOME
  # podman run
  > -i
  > -t
  > --name rocky02
  > --hostname rocky02
  > --privileged
  > -v volume01:/mnt -> 別コンテナでデータボリュームを使用
  > rockylinux:8
  > /bin/bash
  
  コマンドの実行結果
  --------------------------------------------------
  (プロンプト変化)
  --------------------------------------------------
    
    [root@rocky02 /]# 
    [root@rocky02 /]# df -mT
    
    コマンドの実行結果
    --------------------------------------------------
    Filesystem           Type     1M-blocks  Used  Available  Use%  Mounted on
    overlay              overlay      71645  9835      61811   14%  /
    tmpfs                tmpfs           64     0         64    0%  /dev
    /dev/mapper/rl-root  xfs          71645  9835      61811   14%  /mnt -> 実体はデータボリューム
    tmpfs                tmpfs         1809    10       1799    1%  /etc/hosts
    shm                  tmpfs           63     0         63    0%  /dev/shm
    tmpfs                tmpfs         1809     0       1809    0%  /sys/fs/cgroup
    --------------------------------------------------
    
    [root@rocky02 /]# 
    [root@rocky02 /]# cat /mnt/sample.txt
    
    コマンドの実行結果
    --------------------------------------------------
    1582年 本能寺の変
    1600年 関ヶ原の戦い
    1615年 大坂夏の陣
    --------------------------------------------------
    
    [root@rocky02 /]# 
    [root@rocky02 /]# exit -> デタッチ
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  # cd $HOME
  # podman stop rocky02
  
  コマンドの実行結果
  --------------------------------------------------
  rocky02
  --------------------------------------------------
  
  # cd $HOME
  # podman rm rocky02
  
  コマンドの実行結果
  --------------------------------------------------
  28615f550a575353bbb75d663d68a6cc344b9ff4e6bc83b42f8c59deeedaf2d8
  --------------------------------------------------
  
  # cd $HOME
  # podman volume rm volume01
  
  コマンドの実行結果
  --------------------------------------------------
  volume01
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[08]
  練習 - 08
  
[内容]
  ## 作業内容
    コンテナ間の通信
  
  ## ホスト
    HOST : localhost
    IPV4 : DHCP
    MEMO : 自宅ノートパソコン
  
  ## コンテナ
    HOST : rocky01
    IPV4 : 自動採番
    MEMO : イメージ「rockylinux:8」を元に生成
  
  ## コンテナ
    HOST : rocky02
    IPV4 : 自動採番
    MEMO : イメージ「rockylinux:8」を元に生成
  
[確認]
  # cd $HOME
  # podman network ls
  
  コマンドの実行結果
  --------------------------------------------------
  NETWORK ID    NAME            DRIVER
  498054d2d9f2  makoto_default  bridge
  2f259bab93aa  podman          bridge -> デフォルトの所属ネットワーク
  --------------------------------------------------
  
  # cd $HOME
  # podman network inspect podman
  
  コマンドの実行結果
  --------------------------------------------------
  [
    {
      "name": "podman",
      "id": "2f259bab93aaaaa2542ba43ef33eb990d0999ee1b9924b557b7be53c0b7a1bb9",
      "driver": "bridge",
      "network_interface": "cni-podman0",
      "created": "2023-04-24T14:07:24.101431541+09:00",
      "subnets": [
        {
          "subnet": "10.88.0.0/16", -> 所属コンテナは「10.88.XX.XX」というIPv4を割り振られる
          "gateway": "10.88.0.1" -> 外部通信時は「10.88.0.1」をゲートウェイに使用する
        }
      ],
      "ipv6_enabled": false,
      "internal": false,
      "dns_enabled": false,
      "ipam_options": {
        "driver": "host-local"
      }
    }
  ]
  --------------------------------------------------
  
  # cd $HOME
  # podman run
  > -i
  > -t
  > --name rocky01
  > --hostname rocky01
  > --network podman -> 所属ネットワーク指定
  > rockylinux:8
  > /bin/bash
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# cat /etc/hosts | grep rock
    
    コマンドの実行結果
    --------------------------------------------------
    10.88.0.25  rocky01 rocky01
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# [ Ctrl + P ] + [ Ctrl + Q ]
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  # cd $HOME
  # podman run
  > -i
  > -t
  > --name rocky02
  > --hostname rocky02
  > --network podman -> 所属ネットワーク指定
  > rockylinux:8
  > /bin/bash
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
    
    [root@rocky02 /]# 
    [root@rocky02 /]# cat /etc/hosts | grep rock
    
    コマンドの実行結果
    --------------------------------------------------
    10.88.0.26  rocky02 rocky02
    --------------------------------------------------
    
    [root@rocky02 /]# 
    [root@rocky02 /]# [ Ctrl + P ] + [ Ctrl + Q ]
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  # cd $HOME
  # podman ps -a
  
  コマンドの実行結果
  --------------------------------------------------
  CONTAINER ID  IMAGE                              COMMAND    CREATED             STATUS                 PORTS  NAMES
  bb6779d4724a  docker.io/rockylinux/rockylinux:8  /bin/bash  7 minutes ago       Up 5 minutes ago              rocky01
  caf016626ed1  docker.io/rockylinux/rockylinux:8  /bin/bash  About a minute ago  Up About a minute ago         rocky02
  --------------------------------------------------
  
  # cd $HOME
  # podman exec -it rocky01 /bin/bash
  
  コマンドの実行結果
  --------------------------------------------------
  (プロンプト変化)
  --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# vi /etc/hosts
    
    コマンドの実行結果
    --------------------------------------------------
    (省略)
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# cat /etc/hosts | grep rock
    
    コマンドの実行結果
    --------------------------------------------------
    10.88.0.25  rocky01 rocky01
    10.88.0.26  rocky02 rocky02
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# ping -c 3 rocky02
    
    コマンドの実行結果
    --------------------------------------------------
    PING rocky02 (10.88.0.26) 56(84) bytes of data.
    64 bytes from rocky02 (10.88.0.26): icmp_seq=1 ttl=64 time=0.097 ms
    64 bytes from rocky02 (10.88.0.26): icmp_seq=2 ttl=64 time=0.120 ms
    64 bytes from rocky02 (10.88.0.26): icmp_seq=3 ttl=64 time=0.123 ms
    
    --- rocky02 ping statistics ---
    3 packets transmitted, 3 received, 0% packet loss, time 2064ms
    rtt min/avg/max/mdev = 0.097/0.113/0.123/0.014 ms
    --------------------------------------------------
    
    [root@rocky01 /]# 
    [root@rocky01 /]# [ Ctrl + P ] + [ Ctrl + Q ]
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  # cd $HOME
  # podman exec -it rocky02 /bin/bash
  
  コマンドの実行結果
  --------------------------------------------------
  (プロンプト変化)
  --------------------------------------------------
    
    [root@rocky02 /]# 
    [root@rocky02 /]# vi /etc/hosts
    
    コマンドの実行結果
    --------------------------------------------------
    (省略)
    --------------------------------------------------
    
    [root@rocky02 /]# 
    [root@rocky02 /]# cat /etc/hosts | grep rock
    
    コマンドの実行結果
    --------------------------------------------------
    10.88.0.25  rocky01 rocky01
    10.88.0.26  rocky02 rocky02
    --------------------------------------------------
    
    [root@rocky02 /]# 
    [root@rocky02 /]# ping -c 3 rocky01
    
    コマンドの実行結果
    --------------------------------------------------
    PING rocky01 (10.88.0.25) 56(84) bytes of data.
    64 bytes from rocky01 (10.88.0.25): icmp_seq=1 ttl=64 time=0.095 ms
    64 bytes from rocky01 (10.88.0.25): icmp_seq=2 ttl=64 time=0.124 ms
    64 bytes from rocky01 (10.88.0.25): icmp_seq=3 ttl=64 time=0.124 ms
    
    --- rocky01 ping statistics ---
    3 packets transmitted, 3 received, 0% packet loss, time 2070ms
    rtt min/avg/max/mdev = 0.095/0.114/0.124/0.016 ms
    --------------------------------------------------
    
    [root@rocky02 /]# 
    [root@rocky02 /]# [ Ctrl + P ] + [ Ctrl + Q ]
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
  
  # cd $HOME
  # podman stop rocky01 rocky02
  
  コマンドの実行結果
  --------------------------------------------------
  rocky01
  rocky02
  --------------------------------------------------
  
  # cd $HOME
  # podman rm rocky01 rocky02
  
  コマンドの実行結果
  --------------------------------------------------
  bb6779d4724a492b12e0fd46f9bb3a56c25ffa8d1a52fbd48c30231b24fcf3ed
  caf016626ed116d8b71f204adc5dc4a7762350ea6abbba7c716b7d4981ee65eb
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[09]
  練習 - 09
  
[内容]
  ## 作業内容
    複数コンテナをファイル「docker-compose.yml」を使用してまとめて構築・起動・停止
  
  ## ホスト
    HOST : localhost
    IPV4 : DHCP
    MEMO : 自宅ノートパソコン
  
  ## コンテナ1
    HOST : rocky01
    IPV4 : 自動採番
    MEMO : イメージ「rockylinux:8」を元に生成
  
  ## コンテナ2
    HOST : rocky02
    IPV4 : 自動採番
    MEMO : イメージ「rockylinux:8」を元に生成
  
[確認]
  # cd $HOME
  # dnf list installed | grep -i podman-docker
  
  コマンドの実行結果
  --------------------------------------------------
  podman-docker.noarch -> コマンド「docker」が使用可能なことが分かった
  --------------------------------------------------
  
  # cd $HOME/container
  # mkdir -p compose01/rocky01
  # mkdir -p compose01/rocky02
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  # cd $HOME/container/compose01
  # vi rocky01/Dockerfile
  
  コマンドの実行結果
  --------------------------------------------------
  FROM rockylinux:8
  RUN dnf -y install net-tools
  RUN dnf -y install traceroute
  CMD ["/bin/bash"]
  --------------------------------------------------
  
  # cd $HOME/container/compose01
  # vi rocky02/Dockerfile
  
  コマンドの実行結果
  --------------------------------------------------
  FROM rockylinux:8
  RUN dnf -y install net-tools
  RUN dnf -y install traceroute
  CMD ["/bin/bash"]
  --------------------------------------------------
  
  # cd $HOME/container/compose01
  # vi docker-compose.yml -> ファイル行頭の空白は空白文字が二個
  
  コマンドの実行結果
  --------------------------------------------------
  version: "3"
  services:
    rocky01:
      build: ./rocky01
    rocky02:
      build: ./rocky02
  --------------------------------------------------
  
  # cd $HOME/container/compose01
  # podman-compose up -d -> コンテナをまとめて構築・起動
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  # cd $HOME/container/compose01
  # podman images -> コマンド「podman-compose」にはオプション「images」が存在しない
  
  コマンドの実行結果
  --------------------------------------------------
  REPOSITORY                       TAG     IMAGE ID      CREATED        SIZE
  localhost/compose01_rocky02      latest  f8661a3e32c5  2 minutes ago  281 MB -> 作成されたイメージ
  localhost/compose01_rocky01      latest  f8661a3e32c5  2 minutes ago  281 MB -> 作成されたイメージ
  docker.io/rockylinux/rockylinux  8       e7368aa563ff  2 months ago   203 MB
  --------------------------------------------------
  
  # cd $HOME/container/compose01
  # podman-compose ps -> 起動した筈なのに「Exited」なのが不明、仕方無く続行する
  
  コマンドの実行結果
  --------------------------------------------------
  CONTAINER ID  IMAGE                               COMMAND    CREATED        STATUS                    PORTS  NAMES
  2630c7d0e91a  localhost/compose01_rocky01:latest  /bin/bash  4 minutes ago  Exited (0) 4 minutes ago         compose01_rocky01_1
  2ed82753b419  localhost/compose01_rocky02:latest  /bin/bash  4 minutes ago  Exited (0) 4 minutes ago         compose01_rocky02_1
  --------------------------------------------------
  
  # cd $HOME/container/compose01
  # podman-compose start -> ステータスが「Exited」なので起動コマンドを実行
  
  コマンドの実行結果
  --------------------------------------------------
  podman start compose01_rocky01_1
  compose01_rocky01_1
  exit code: 0

  podman start compose01_rocky02_1
  compose01_rocky02_1
  exit code: 0
  --------------------------------------------------
  
  # cd $HOME/container/compose01
  # podman-compose ps -> ステータスが「Exited」のままで変化なし
  
  コマンドの実行結果
  --------------------------------------------------
  CONTAINER ID  IMAGE                               COMMAND    CREATED         STATUS                    PORTS       NAMES
  2630c7d0e91a  localhost/compose01_rocky01:latest  /bin/bash  13 minutes ago  Exited (0) 2 minutes ago              compose01_rocky01_1
  2ed82753b419  localhost/compose01_rocky02:latest  /bin/bash  13 minutes ago  Exited (0) 2 minutes ago              compose01_rocky02_1
  --------------------------------------------------
  
  # cd $HOME/container/compose01
  # podman-compose down -> コンテナをまとめて停止・削除
  
  コマンドの実行結果
  --------------------------------------------------
  podman stop -t 10 compose01_rocky02_1
  compose01_rocky02_1
  exit code: 0

  podman stop -t 10 compose01_rocky01_1
  compose01_rocky01_1
  exit code: 0

  podman rm compose01_rocky02_1
  f4867cec0343c843c9b404124c32536e0ee4edf73ea5137f61fc4fad35b41b96
  exit code: 0

  podman rm compose01_rocky01_1
  e76a03569416beb9cdb207815fefca81792dd151a60a7231dedf299e27a47b2d
  exit code: 0
  --------------------------------------------------
  
  # cd $HOME/container/compose01
  # podman rmi compose01_rocky01:latest
  
  コマンドの実行結果
  --------------------------------------------------
  Untagged: localhost/compose01_rocky01:latest
  --------------------------------------------------
  
  # cd $HOME/container/compose01
  # podman rmi compose01_rocky02:latest
  
  コマンドの実行結果
  --------------------------------------------------
  Untagged: localhost/compose01_rocky02:latest
  Deleted: 76a22d58c534b64028cd135d7d6f18c2ec054a3397c3f5407fcabc0e5c8a988b
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[10]
  練習 - 10
  
[内容]
  ## 作業内容
    コンテナ「nginx」を使用してウェブページを表示
  
  ## ホスト
    HOST : localhost
    IPV4 : DHCP
    MEMO : 自宅ノートパソコン
  
  ## コンテナ
    HOST : nginx01
    IPV4 : 自動採番
    MEMO : イメージ「nginx:latest」を元に生成
  
[確認]
  # cd $HOME
  # podman search --filter=is-official=true nginx -> 公式のみ検索
  
  コマンドの実行結果
  --------------------------------------------------
  NAME                     DESCRIPTION
  docker.io/library/nginx  Official build of Nginx.
  --------------------------------------------------
  
  # cd $HOME
  # podman pull nginx -> docker.io/library/httpd:latest を選択
  
  コマンドの実行結果
  --------------------------------------------------
  Trying to pull docker.io/library/nginx:latest...
  Getting image source signatures
  Copying blob 75576236abf5 done  
  Copying blob 8c767bdbc9ae done  
  Copying blob 4f3256bdf66b done  
  Copying blob 2019c71d5655 done  
  Copying blob 78e14bb05fd3 done  
  Copying blob 26c5c85e47da done  
  Copying config 6efc10a051 done  
  Writing manifest to image destination
  Storing signatures
  6efc10a0510f143a90b69dc564a914574973223e88418d65c1f8809e08dc0a1f
  --------------------------------------------------
  
  # cd $HOME
  # podman images
  
  コマンドの実行結果
  --------------------------------------------------
  REPOSITORY                       TAG     IMAGE ID      CREATED       SIZE
  docker.io/library/nginx          latest  6efc10a0510f  2 weeks ago   147 MB
  docker.io/rockylinux/rockylinux  8       e7368aa563ff  2 months ago  203 MB
  --------------------------------------------------
  
  # cd $HOME
  # podman run
  > -i                  // キー入力有効
  > -t                  // シェルプロンプト表示
  > --name nginx01      // コンテナ名
  > --hostname nginx01  // ホスト名
  > nginx:latest        // イメージ名
  > /bin/bash           // シェル指定
  
  コマンドの実行結果
  --------------------------------------------------
  (プロンプト変化) -> アタッチモードでコンテナ内部にログインした状態から始まる
  --------------------------------------------------
    
    root@nginx01:/#  
    root@nginx01:/# whoami
    
    コマンドの実行結果
    --------------------------------------------------
    root
    --------------------------------------------------
    
    root@nginx01:/# 
    root@nginx01:/# pwd
    
    コマンドの実行結果
    --------------------------------------------------
    / -> ルートディレクトリ
    --------------------------------------------------
    
    root@nginx01:/# 
    root@nginx01:/# hostname
    
    コマンドの実行結果
    --------------------------------------------------
    nginx01
    --------------------------------------------------
    
    root@nginx01:/# 
    root@nginx01:/# ls -lh
    
    コマンドの実行結果
    --------------------------------------------------
    drwxr-xr-x.   2 root root 4.0K Apr 11 00:00 bin
    drwxr-xr-x.   2 root root    6 Dec  9 19:15 boot
    drwxr-xr-x.   5 root root  360 Apr 27 13:27 dev
    drwxr-xr-x.   1 root root   41 Apr 12 08:51 docker-entrypoint.d
    -rwxrwxr-x.   1 root root 1.6K Apr 12 08:51 docker-entrypoint.sh
    drwxr-xr-x.   1 root root   31 Apr 27 13:27 etc
    drwxr-xr-x.   2 root root    6 Dec  9 19:15 home
    drwxr-xr-x.   1 root root   45 Apr 11 00:00 lib
    drwxr-xr-x.   2 root root   34 Apr 11 00:00 lib64
    drwxr-xr-x.   2 root root    6 Apr 11 00:00 media
    drwxr-xr-x.   2 root root    6 Apr 11 00:00 mnt
    drwxr-xr-x.   2 root root    6 Apr 11 00:00 opt
    dr-xr-xr-x. 295 root root    0 Apr 27 13:27 proc
    drwx------.   2 root root   37 Apr 11 00:00 root
    drwxr-xr-x.   1 root root   42 Apr 27 13:27 run
    drwxr-xr-x.   2 root root 4.0K Apr 11 00:00 sbin
    drwxr-xr-x.   2 root root    6 Apr 11 00:00 srv
    dr-xr-xr-x.  13 root root    0 Apr 27 13:12 sys
    drwxrwxrwt.   1 root root    6 Apr 12 08:51 tmp
    drwxr-xr-x.   1 root root   66 Apr 11 00:00 usr
    drwxr-xr-x.   1 root root   41 Apr 11 00:00 var
    --------------------------------------------------
    
    root@nginx01:/# 
    root@nginx01:/# find / -name nginx.conf -> 設定ファイルの検索
    
    コマンドの実行結果
    --------------------------------------------------
    /etc/nginx/nginx.conf
    --------------------------------------------------
    
    root@nginx01:/# 
    root@nginx01:/# ls -lh /etc/nginx -> ディレクトリ調査
    
    コマンドの実行結果
    --------------------------------------------------
    drwxr-xr-x. 2 root root   26 Apr 12 08:51 conf.d
    -rw-r--r--. 1 root root 1007 Mar 28 15:01 fastcgi_params
    -rw-r--r--. 1 root root 5.3K Mar 28 15:01 mime.types
    lrwxrwxrwx. 1 root root   22 Mar 28 16:49 modules -> /usr/lib/nginx/modules
    -rw-r--r--. 1 root root  648 Mar 28 16:49 nginx.conf
    -rw-r--r--. 1 root root  636 Mar 28 15:01 scgi_params
    -rw-r--r--. 1 root root  664 Mar 28 15:01 uwsgi_params
    --------------------------------------------------
    
    root@nginx01:/# 
    root@nginx01:/# cat /etc/nginx/nginx.conf -> 設定ファイル
    
    コマンドの実行結果
    --------------------------------------------------
    user  nginx;
    worker_processes  auto;
    error_log  /var/log/nginx/error.log notice; -> ホスト側と共有
    pid  /var/run/nginx.pid;
    
    events {
      worker_connections  1024;
    }
    
    http {
      include  /etc/nginx/mime.types;
      default_type  application/octet-stream;
      log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
      access_log  /var/log/nginx/access.log  main; -> ホスト側と共有
      sendfile  on;
      keepalive_timeout  65;
      include /etc/nginx/conf.d/*.conf;
    }
    --------------------------------------------------
    
    root@nginx01:/# 
    root@nginx01:/# ls -lh /etc/nginx/conf.d -> ディレクトリ調査
    
    コマンドの実行結果
    --------------------------------------------------
    -rw-r--r--. 1 root root 1.1K Mar 28 16:49 default.conf
    --------------------------------------------------
    
    root@nginx01:/# 
    root@nginx01:/# cat /etc/nginx/conf.d/default.conf | grep -vE '^#|^$|^.*#' -> 設定ファイル
    
    コマンドの実行結果
    --------------------------------------------------
    server {
      listen  80;
      server_name  localhost;
      location / {
        root  /usr/share/nginx/html; -> ホスト側と共有
        index  index.html index.htm;
      }
      error_page  500 502 503 504  /50x.html;
      location = /50x.html {
        root  /usr/share/nginx/html;
      }
    }
    --------------------------------------------------
    
    root@nginx01:/# 
    root@nginx01:/# cat /usr/share/nginx/html/index.html -> HTMLファイル
    
    コマンドの実行結果
    --------------------------------------------------
    <!DOCTYPE html>
    ...
    --------------------------------------------------
    
    root@nginx01:/# 
    root@nginx01:/# [ Ctrl + P ] + [ Ctrl + Q ] -> デタッチ
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  # cd $HOME
  # podman stop nginx01
  
  コマンドの実行結果
  --------------------------------------------------
  nginx01
  --------------------------------------------------
  
  # cd $HOME
  # podman rm nginx01
  
  コマンドの実行結果
  --------------------------------------------------
  237662ede0529863e3068cc59f3e837911beb28b75dfeaf3bc41d38a3de22fd9
  --------------------------------------------------
  
  # cd $HOME
  # podman run
  > -i                  // キー入力有効
  > -t                  // シェルプロンプト表示
  > -d                  // デタッチモード
  > -p 8080:80          // ホスト側 : コンテナ
  > --name nginx01      // コンテナ名
  > --hostname nginx01  // ホスト名
  > nginx:latest        // イメージ名
  
  コマンドの実行結果
  --------------------------------------------------
  57c9b8f85aba767cb0a1d04dd0ee4d72d54ea6c9ab448a4645674d120bc31931
  --------------------------------------------------
  
  # cd $HOME
  # curl localhost:8080
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> コンテンツ表示
  --------------------------------------------------
  
  # cd $HOME
  # podman stop nginx01
  
  コマンドの実行結果
  --------------------------------------------------
  nginx01
  --------------------------------------------------
  
  # cd $HOME
  # podman rm nginx01
  
  コマンドの実行結果
  --------------------------------------------------
  57c9b8f85aba767cb0a1d04dd0ee4d72d54ea6c9ab448a4645674d120bc31931
  --------------------------------------------------
  
  # cd $HOME
  # mkdir -p container/nginx01 -> コンテナ用のディレクトリ作成
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  # cd $HOME/container/nginx01
  # mkdir logs docs
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  # cd $HOME/container/nginx01
  # vi docs/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!DOCTYPE html>
  <html>
  <head>
  <title>Hello World</title>
  </head>
  <body>
  <p>Hello World</p>
  </body>
  </html>
  --------------------------------------------------
  
  # cd $HOME/container/nginx01
  # podman run
  > -i                                 // キー入力有効
  > -t                                 // シェルプロンプト表示
  > -d                                 // デタッチモード
  > -p 8080:80                         // ホスト側 : コンテナ -> ポート番号
  > -v ./docs:/usr/share/nginx/html:Z  // ホスト側 : コンテナ -> コンテンツ
  > -v ./logs:/var/log/nginx:Z         // ホスト側 : コンテナ -> ログ出力先
  > --name nginx01                     // コンテナ名
  > --hostname nginx01                 // ホスト名
  > nginx:latest                       // イメージ名
  
  コマンドの実行結果
  --------------------------------------------------
  7856e2e069d49c07b5c1fa4abc73b7db8bae183ff4ee4075aa5177cf908b32ab
  --------------------------------------------------
  
  # cd $HOME/container/nginx01
  # curl localhost:8080
  
  コマンドの実行結果
  --------------------------------------------------
  <!DOCTYPE html>
  <html>
  <head>
  <title>Hello World</title>
  </head>
  <body>
  <p>Hello World</p>
  </body>
  </html>
  --------------------------------------------------
  
  # cd $HOME/container/nginx01
  # ls -lh logs
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root  90  4月 28 07:56 access.log -> アクセスログ
  -rw-r--r--. 1 root root 632  4月 28 07:55 error.log -> エラーログ
  --------------------------------------------------
  
  # cd $HOME/container/nginx01
  # cat logs/access.log
  
  コマンドの実行結果
  --------------------------------------------------
  10.88.0.1 - - [27/Apr/2023:22:56:48 +0000] "GET / HTTP/1.1" 200 107 "-" "curl/7.61.1" "-"
  --------------------------------------------------
  
  # cd $HOME/container/nginx01
  # cat logs/error.log
  
  コマンドの実行結果
  --------------------------------------------------
  2023/04/27 22:55:56 [notice] 1#1: using the "epoll" event method
  2023/04/27 22:55:56 [notice] 1#1: nginx/1.23.4
  2023/04/27 22:55:56 [notice] 1#1: built by gcc 10.2.1 20210110 (Debian 10.2.1-6) 
  2023/04/27 22:55:56 [notice] 1#1: OS: Linux 4.18.0-425.19.2.el8_7.x86_64
  2023/04/27 22:55:56 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
  2023/04/27 22:55:56 [notice] 1#1: start worker processes
  2023/04/27 22:55:56 [notice] 1#1: start worker process 28
  2023/04/27 22:55:56 [notice] 1#1: start worker process 29
  2023/04/27 22:55:56 [notice] 1#1: start worker process 30
  2023/04/27 22:55:56 [notice] 1#1: start worker process 31
  --------------------------------------------------
  
  # cd $HOME/container/nginx01
  # podman stop nginx01
  
  コマンドの実行結果
  --------------------------------------------------
  nginx01
  --------------------------------------------------
  
  # cd $HOME/container/nginx01
  # podman rm nginx01
  
  コマンドの実行結果
  --------------------------------------------------
  7856e2e069d49c07b5c1fa4abc73b7db8bae183ff4ee4075aa5177cf908b32ab
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[11]
  練習 - 11
  
[内容]
  ## 作業内容
    コンテナ「httpd」を使用してウェブページを表示
  
  ## ホスト
    HOST : localhost
    IPV4 : DHCP
    MEMO : 自宅ノートパソコン
  
  ## コンテナ
    HOST : httpd01
    IPV4 : 自動採番
    MEMO : イメージ「httpd:latest」を元に生成
  
[確認]
  # cd $HOME
  # podman search --filter=is-official=true httpd -> 公式のみ検索
  
  コマンドの実行結果
  --------------------------------------------------
  NAME                     DESCRIPTION
  docker.io/library/httpd  The Apache HTTP Server Project
  --------------------------------------------------
  
  # cd $HOME
  # podman pull httpd -> docker.io/library/httpd:latest を選択
  
  コマンドの実行結果
  --------------------------------------------------
  Trying to pull docker.io/library/httpd:latest...
  Getting image source signatures
  Copying blob 757908175415 done  
  Copying blob 2d29d3837df5 done  
  Copying blob e78016c4ba87 done  
  Copying blob 26c5c85e47da skipped: already exists  
  Copying blob 2483414a5e59 done  
  Copying config 4b7fc736cb done  
  Writing manifest to image destination
  Storing signatures
  4b7fc736cb48352ef2c989d63c74bed704fc5a0cd43eb5c7c7cf9ab7faf891d1
  --------------------------------------------------
  
  # cd $HOME
  # podman images
  
  コマンドの実行結果
  --------------------------------------------------
  REPOSITORY                       TAG     IMAGE ID      CREATED       SIZE
  docker.io/library/nginx          latest  6efc10a0510f  2 weeks ago   147 MB
  docker.io/library/httpd          latest  4b7fc736cb48  2 weeks ago   150 MB
  docker.io/rockylinux/rockylinux  8       e7368aa563ff  2 months ago  203 MB
  --------------------------------------------------
  
  # cd $HOME
  # podman run
  > -i                  // キー入力有効
  > -t                  // シェルプロンプト表示
  > --name httpd01      // コンテナ名
  > --hostname httpd01  // ホスト名
  > httpd:latest        // イメージ名
  > /bin/bash           // シェル指定
  
  コマンドの実行結果
  --------------------------------------------------
  (プロンプト変化) -> アタッチモードでコンテナ内部にログインした状態から始まる
  --------------------------------------------------
    
    root@httpd01:/usr/local/apache2#  
    root@httpd01:/usr/local/apache2# whoami
    
    コマンドの実行結果
    --------------------------------------------------
    root
    --------------------------------------------------
    
    root@httpd01:/usr/local/apache2# 
    root@httpd01:/usr/local/apache2# pwd
    
    コマンドの実行結果
    --------------------------------------------------
    /usr/local/apache2
    --------------------------------------------------
    
    root@httpd01:/usr/local/apache2# 
    root@httpd01:/usr/local/apache2# hostname
    
    コマンドの実行結果
    --------------------------------------------------
    httpd01
    --------------------------------------------------
    
    root@httpd01:/usr/local/apache2# 
    root@httpd01:/usr/local/apache2# ls -lh
    
    コマンドの実行結果
    --------------------------------------------------
    drwxr-xr-x. 2 root root 4.0K Apr 12 01:47 bin
    drwxr-xr-x. 2 root root  167 Apr 12 01:47 build
    drwxr-xr-x. 2 root root   78 Apr 12 01:47 cgi-bin
    drwxr-xr-x. 4 root root   84 Apr 12 01:47 conf
    drwxr-xr-x. 3 root root 4.0K Apr 12 01:47 error
    drwxr-xr-x. 2 root root   24 Apr 12 01:47 htdocs
    drwxr-xr-x. 3 root root 8.0K Apr 12 01:47 icons
    drwxr-xr-x. 2 root root 4.0K Apr 12 01:47 include
    drwxr-xr-x. 2 root root    6 Apr 12 01:47 logs
    drwxr-xr-x. 2 root root 8.0K Apr 12 01:47 modules
    --------------------------------------------------
    
    root@httpd01:/usr/local/apache2# 
    root@httpd01:/usr/local/apache2# find ./ -name httpd.conf -> 設定ファイルの検索
    
    コマンドの実行結果
    --------------------------------------------------
    ./conf/httpd.conf -> こちらの設定ファイルを編集
    ./conf/original/httpd.conf
    --------------------------------------------------
    
    root@httpd01:/usr/local/apache2# 
    root@httpd01:/usr/local/apache2# ls -lh conf -> ディレクトリ調査
    
    コマンドの実行結果
    --------------------------------------------------
    drwxr-xr-x. 2 root root 4.0K Apr 12 01:47 extra
    -rw-r--r--. 1 root root  21K Apr 12 01:47 httpd.conf
    -rw-r--r--. 1 root root  13K Apr 12 01:47 magic
    -rw-r--r--. 1 root root  60K Apr 12 01:47 mime.types
    drwxr-xr-x. 3 root root   37 Apr 12 01:47 original
    --------------------------------------------------
    
    root@httpd01:/usr/local/apache2# 
    root@httpd01:/usr/local/apache2# cat conf/httpd.conf | grep -vE '^#|^$|^.*#' -> 設定ファイル
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/usr/local/apache2"
    Listen 80
    LoadModule mpm_event_module modules/mod_mpm_event.so
    LoadModule authn_file_module modules/mod_authn_file.so
    LoadModule authn_core_module modules/mod_authn_core.so
    LoadModule authz_host_module modules/mod_authz_host.so
    LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
    LoadModule authz_user_module modules/mod_authz_user.so
    LoadModule authz_core_module modules/mod_authz_core.so
    LoadModule access_compat_module modules/mod_access_compat.so
    LoadModule auth_basic_module modules/mod_auth_basic.so
    LoadModule reqtimeout_module modules/mod_reqtimeout.so
    LoadModule filter_module modules/mod_filter.so
    LoadModule mime_module modules/mod_mime.so
    LoadModule log_config_module modules/mod_log_config.so
    LoadModule env_module modules/mod_env.so
    LoadModule headers_module modules/mod_headers.so
    LoadModule setenvif_module modules/mod_setenvif.so
    LoadModule version_module modules/mod_version.so
    LoadModule unixd_module modules/mod_unixd.so
    LoadModule status_module modules/mod_status.so
    LoadModule autoindex_module modules/mod_autoindex.so
    
    <IfModule !mpm_prefork_module>
      # 処理なし
    </IfModule>
    
    <IfModule mpm_prefork_module>
      # 処理なし
    </IfModule>
    
    LoadModule dir_module modules/mod_dir.so
    LoadModule alias_module modules/mod_alias.so
    
    <IfModule unixd_module>
      User www-data
      Group www-data
    </IfModule>
    
    # 管理者メールアドレス
    ServerAdmin you@example.com
    
    <Directory />
      AllowOverride none
      Require all denied
    </Directory>
    
    # ドキュメントルート
    DocumentRoot "/usr/local/apache2/htdocs" ->  ホスト側と共有
    
    <Directory "/usr/local/apache2/htdocs">
      Options Indexes FollowSymLinks
      AllowOverride None
      Require all granted
    </Directory>
    
    <IfModule dir_module>
      DirectoryIndex index.html
    </IfModule>
    
    <Files ".ht*">
      Require all denied
    </Files>
    
    ErrorLog /proc/self/fd/2 -> ホスト側と共有は不可
    LogLevel warn
    
    <IfModule log_config_module>
      LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
      LogFormat "%h %l %u %t \"%r\" %>s %b" common
      CustomLog /proc/self/fd/1 common -> ホスト側と共有は不可
      <IfModule logio_module>
        LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
      </IfModule>
    </IfModule>
    
    <IfModule alias_module>
      ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
    </IfModule>
    
    <IfModule cgid_module>
      # 処理なし
    </IfModule>
    
    <Directory "/usr/local/apache2/cgi-bin">
      AllowOverride None
      Options None
      Require all granted
    </Directory>
    
    <IfModule headers_module>
      RequestHeader unset Proxy early
    </IfModule>
    
    <IfModule mime_module>
      TypesConfig conf/mime.types
      AddType application/x-compress .Z
      AddType application/x-gzip .gz .tgz
    </IfModule>
    
    <IfModule proxy_html_module>
      Include conf/extra/proxy-html.conf
    </IfModule>
    
    <IfModule ssl_module>
      SSLRandomSeed startup builtin
      SSLRandomSeed connect builtin
    </IfModule>
    --------------------------------------------------
    
    root@httpd01:/usr/local/apache2# 
    root@httpd01:/usr/local/apache2# ls -lh conf/extra -> ディレクトリ調査
    
    コマンドの実行結果
    --------------------------------------------------
    -rw-r--r--. 1 root root 2.9K Apr 12 01:47 httpd-autoindex.conf
    -rw-r--r--. 1 root root 1.8K Apr 12 01:47 httpd-dav.conf
    -rw-r--r--. 1 root root 2.9K Apr 12 01:47 httpd-default.conf
    -rw-r--r--. 1 root root 1.1K Apr 12 01:47 httpd-info.conf
    -rw-r--r--. 1 root root 5.0K Apr 12 01:47 httpd-languages.conf
    -rw-r--r--. 1 root root 1.4K Apr 12 01:47 httpd-manual.conf
    -rw-r--r--. 1 root root 4.4K Apr 12 01:47 httpd-mpm.conf
    -rw-r--r--. 1 root root 2.2K Apr 12 01:47 httpd-multilang-errordoc.conf
    -rw-r--r--. 1 root root  13K Apr 12 01:47 httpd-ssl.conf
    -rw-r--r--. 1 root root  694 Apr 12 01:47 httpd-userdir.conf
    -rw-r--r--. 1 root root 1.5K Apr 12 01:47 httpd-vhosts.conf
    -rw-r--r--. 1 root root 3.1K Apr 12 01:47 proxy-html.conf
    --------------------------------------------------
    
    root@httpd01:/usr/local/apache2# 
    root@httpd01:/usr/local/apache2# cat htdocs/index.html -> HTMLファイル
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>It works!</h1></body></html>
    --------------------------------------------------
    
    root@httpd01:/usr/local/apache2# 
    root@httpd01:/usr/local/apache2# [ Ctrl + P ] + [ Ctrl + Q ] -> デタッチ
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  # cd $HOME
  # podman stop httpd01
  
  コマンドの実行結果
  --------------------------------------------------
  nginx01
  --------------------------------------------------
  
  # cd $HOME
  # podman rm httpd01
  
  コマンドの実行結果
  --------------------------------------------------
  ca2e9de7d57a79c73ffc62b9771831ed7abace67e2c5bbd3d4ef0e44917721dd
  --------------------------------------------------
  
  # cd $HOME
  # podman run
  > -i                  // キー入力有効
  > -t                  // シェルプロンプト表示
  > -d                  // デタッチモード
  > -p 8080:80          // ホスト側 : コンテナ
  > --name httpd01      // コンテナ名
  > --hostname httpd01  // ホスト名
  > httpd:latest        // イメージ名
  
  コマンドの実行結果
  --------------------------------------------------
  07b5609d2d3342ec0410e6f3edd9937e3b5af6a69cdce1eac4b8e5ac06c592a7
  --------------------------------------------------
  
  # cd $HOME
  # curl localhost:8080
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>It works!</h1></body></html>
  --------------------------------------------------
  
  # cd $HOME
  # podman stop httpd01
  
  コマンドの実行結果
  --------------------------------------------------
  httpd01
  --------------------------------------------------
  
  # cd $HOME
  # podman rm httpd01
  
  コマンドの実行結果
  --------------------------------------------------
  07b5609d2d3342ec0410e6f3edd9937e3b5af6a69cdce1eac4b8e5ac06c592a7
  --------------------------------------------------
  
  # cd $HOME
  # mkdir -p container/httpd01 -> コンテナ用のディレクトリ作成
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  # cd $HOME/container/httpd01
  # mkdir logs docs
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  # cd $HOME/container/httpd01
  # vi docs/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  <!DOCTYPE html>
  <html>
  <head>
  <title>Hello World</title>
  </head>
  <body>
  <p>Hello World</p>
  </body>
  </html>
  --------------------------------------------------
  
  # cd $HOME/container/httpd01
  # podman run
  > -i                                     // キー入力有効
  > -t                                     // シェルプロンプト表示
  > -d                                     // デタッチモード
  > -p 8080:80                             // ホスト側 : コンテナ -> ポート番号
  > -v ./docs:/usr/local/apache2/htdocs:Z  // ホスト側 : コンテナ -> コンテンツ
  > --name httpd01                         // コンテナ名
  > --hostname httpd01                     // ホスト名
  > httpd:latest                           // イメージ名
  
  コマンドの実行結果
  --------------------------------------------------
  41ad5299a7a7aca222885e253feca70cc4d48e199e9bbf90dda62d309a42e429
  --------------------------------------------------
  
  # cd $HOME/container/httpd01
  # curl localhost:8080
  
  コマンドの実行結果
  --------------------------------------------------
  <!DOCTYPE html>
  <html>
  <head>
  <title>Hello World</title>
  </head>
  <body>
  <p>Hello World</p>
  </body>
  </html>
  --------------------------------------------------
  
  # cd $HOME/container/httpd01
  # podman stop httpd01
  
  コマンドの実行結果
  --------------------------------------------------
  httpd01
  --------------------------------------------------
  
  # cd $HOME/container/httpd01
  # podman rm httpd01
  
  コマンドの実行結果
  --------------------------------------------------
  41ad5299a7a7aca222885e253feca70cc4d48e199e9bbf90dda62d309a42e429
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[12]
  練習 - 12
  
[内容]
  ## 作業内容
    コンテナ「mysql」を使用してデータベース構築
  
  ## ホスト
    HOST : localhost
    IPV4 : DHCP
    MEMO : 自宅ノートパソコン
  
  ## コンテナ
    HOST : mysql01
    IPV4 : 自動採番
    MEMO : イメージ「mysql:latest」を元に生成
  
[確認]
  # cd $HOME
  # podman search --filter=is-official=true mysql -> 公式のみ検索
  
  コマンドの実行結果
  --------------------------------------------------
  NAME                     DESCRIPTION
  docker.io/library/mysql  MySQL is a widely used, open-source relation...
  --------------------------------------------------
  
  # cd $HOME
  # podman pull mysql -> docker.io/library/mysql:latest を選択
  
  コマンドの実行結果
  --------------------------------------------------
  Trying to pull docker.io/library/mysql:latest...
  Getting image source signatures
  Copying blob a0608f8959e0 done  
  Copying blob 70b5d4e8750e done  
  Copying blob f3f5ff008d73 done  
  Copying blob dd7054d6d0c7 done  
  Copying blob 328ba678bf27 done  
  Copying blob cdc4a7b43bdd done  
  Copying blob 5823e721608f done  
  Copying blob a564ada930a9 done  
  Copying blob 539565d00e89 done  
  Copying blob a11a06843fd5 done  
  Copying blob 92f6d4aa041d done  
  Copying config 8189e588b0 done  
  Writing manifest to image destination
  Storing signatures
  8189e588b0e8fcc95b0d764d6f7bdb55b5b41e9249157177d73781058f603ca9
  --------------------------------------------------
  
  # cd $HOME
  # podman images
  
  コマンドの実行結果
  --------------------------------------------------
  REPOSITORY                       TAG     IMAGE ID      CREATED       SIZE
  docker.io/library/mysql          latest  8189e588b0e8  12 days ago   579 MB
  docker.io/library/nginx          latest  6efc10a0510f  2 weeks ago   147 MB
  docker.io/library/httpd          latest  4b7fc736cb48  2 weeks ago   150 MB
  docker.io/rockylinux/rockylinux  8       e7368aa563ff  2 months ago  203 MB
  --------------------------------------------------
  
  # cd $HOME
  # podman volume create mysql-vol01
  
  コマンドの実行結果
  --------------------------------------------------
  mysql-vol01
  --------------------------------------------------
  
  # cd $HOME
  # podman volume ls
  
  コマンドの実行結果
  --------------------------------------------------
  DRIVER  VOLUME NAME
  local   mysql-vol01
  --------------------------------------------------
  
  # cd $HOME
  # podman run
  > -i                  // キー入力有効
  > -t                  // シェルプロンプト表示
  > --name mysql01      // コンテナ名
  > --hostname mysql01  // ホスト名
  > mysql:latest        // イメージ名
  > /bin/bash           // シェル指定
  
  コマンドの実行結果
  --------------------------------------------------
  (プロンプト変化) -> アタッチモードでコンテナ内部にログインした状態から始まる
  --------------------------------------------------
    
    bash-4.4#  
    bash-4.4# whoami
    
    コマンドの実行結果
    --------------------------------------------------
    root
    --------------------------------------------------
    
    bash-4.4# 
    bash-4.4# pwd
    
    コマンドの実行結果
    --------------------------------------------------
    / -> ルートディレクトリ
    --------------------------------------------------
    
    bash-4.4# 
    bash-4.4# cat /etc/my.cnf | grep -vE '^#|^$'
    
    コマンドの実行結果
    --------------------------------------------------
    [mysqld]
      skip-host-cache
      skip-name-resolve
      datadir=/var/lib/mysql -> データ格納先は「/var/lib/mysql」と判明
      socket=/var/run/mysqld/mysqld.sock
      secure-file-priv=/var/lib/mysql-files
      user=mysql
      pid-file=/var/run/mysqld/mysqld.pid
    
    [client]
      socket=/var/run/mysqld/mysqld.sock
      !includedir /etc/mysql/conf.d/
    --------------------------------------------------
    
    bash-4.4# 
    bash-4.4# [ Ctrl + P ] + [ Ctrl + Q ] -> デタッチ
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  # cd $HOME
  # podman stop mysql01
  
  コマンドの実行結果
  --------------------------------------------------
  mysql01
  --------------------------------------------------
  
  # cd $HOME
  # podman rm mysql01
  
  コマンドの実行結果
  --------------------------------------------------
  5a2a411988f7be1f20447906a86901aba3ebf2d66de9f2e227e37fd673aefbb2
  --------------------------------------------------
  
  # cd $HOME
  # podman run
  > -i                               // キー入力有効
  > -t                               // シェルプロンプト表示
  > -d                               // デタッチモード
  > -v mysql-vol01:/var/lib/mysql:Z  // ホスト側 : コンテナ
  > -e MYSQL_ROOT_PASSWORD=rt0122ma  // パスワード
  > --name mysql01                   // コンテナ名
  > --hostname mysql01               // ホスト名
  > mysql:latest                     // イメージ名
  
  コマンドの実行結果
  --------------------------------------------------
  8ceb2b86f63e45839c66ebd629f59c2dd0d38cc596e8b057eae10417c1c0e4f7
  --------------------------------------------------
  
  # cd $HOME
  # podman exec -it mysql01 /bin/bash
  
  コマンドの実行結果
  --------------------------------------------------
  (プロンプト変化)
  --------------------------------------------------
    
    bash-4.4# 
    bash-4.4# mysql -p -> MYSQL接続
    
    コマンドの実行結果
    --------------------------------------------------
    Enter password: (パスワード入力) -> プロンプト変化
    --------------------------------------------------
    
      mysql> 
      mysql> create database sample; -> データベース作成
      
      コマンドの実行結果
      --------------------------------------------------
      Query OK, 1 row affected (0.04 sec)
      --------------------------------------------------
      
      mysql> 
      mysql> use sample; -> 使用データベース
      
      コマンドの実行結果
      --------------------------------------------------
      Database changed
      --------------------------------------------------
      
      mysql> 
      mysql> create table list1(id int, name varchar(10)); -> テーブル作成
      
      コマンドの実行結果
      --------------------------------------------------
      Query OK, 0 rows affected (0.27 sec)
      --------------------------------------------------
      
      mysql> 
      mysql> insert into list1 (id, name) values (1, 'Kate'); -> レコード作成
      mysql> insert into list1 (id, name) values (2, 'Mike'); -> レコード作成
      mysql> insert into list1 (id, name) values (3, 'John'); -> レコード作成
      
      コマンドの実行結果
      --------------------------------------------------
      Query OK, 1 row affected (0.03 sec)
      --------------------------------------------------
      
      mysql> 
      mysql> select * from list1; -> レコード確認
      
      コマンドの実行結果
      --------------------------------------------------
      id    name
      1     Kate
      2     Mike
      3     John
      --------------------------------------------------
      
      mysql> 
      mysql> exit -> MYSQL離脱
      
      コマンドの実行結果
      --------------------------------------------------
      Bye
      --------------------------------------------------
      
    bash-4.4# 
    bash-4.4# [ Ctrl + P ] + [ Ctrl + Q ]
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
  
  # cd $HOME
  # podman stop mysql01
  
  コマンドの実行結果
  --------------------------------------------------
  mysql01
  --------------------------------------------------
  
  # cd $HOME
  # podman run
  > -i                               // キー入力有効
  > -t                               // シェルプロンプト表示
  > -d                               // デタッチモード
  > -v mysql-vol01:/var/lib/mysql:Z  // ホスト側 : コンテナ
  > -e MYSQL_ROOT_PASSWORD=rt0122ma  // パスワード
  > --name mysql02                   // コンテナ名
  > --hostname mysql02               // ホスト名
  > mysql:latest                     // イメージ名
  
  コマンドの実行結果
  --------------------------------------------------
  222bf3d90ed98a8265f49154276315a5770fb195f8502f00674ebd18942aabaf
  --------------------------------------------------
  
  # cd $HOME
  # podman exec -it mysql02 /bin/bash
  
  コマンドの実行結果
  --------------------------------------------------
  (プロンプト変化)
  --------------------------------------------------
    
    bash-4.4# 
    bash-4.4# mysql -p -> MYSQL接続
    
    コマンドの実行結果
    --------------------------------------------------
    Enter password: (パスワード入力) -> プロンプト変化
    --------------------------------------------------
      
      mysql> 
      mysql> use sample -> 使用データベース
      
      コマンドの実行結果
      --------------------------------------------------
      Database changed
      --------------------------------------------------
      
      mysql> 
      mysql> select * from list1; -> レコード確認
      
      コマンドの実行結果
      --------------------------------------------------
      id    name
      1     Kate
      2     Mike
      3     John
      --------------------------------------------------
      
      mysql> 
      mysql> exit -> MYSQL離脱
      
      コマンドの実行結果
      --------------------------------------------------
      Bye
      --------------------------------------------------
      
    bash-4.4# 
    bash-4.4# [ Ctrl + P ] + [ Ctrl + Q ]
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
  
  # cd $HOME
  # podman stop mysql02
  
  コマンドの実行結果
  --------------------------------------------------
  mysql02
  --------------------------------------------------
  
  # cd $HOME
  # podman rm mysql01 mysql02
  
  コマンドの実行結果
  --------------------------------------------------
  8ceb2b86f63e45839c66ebd629f59c2dd0d38cc596e8b057eae10417c1c0e4f7
  222bf3d90ed98a8265f49154276315a5770fb195f8502f00674ebd18942aabaf
  --------------------------------------------------
  
  # cd $HOME
  # podman volume rm mysql-vol01
  
  コマンドの実行結果
  --------------------------------------------------
  mysql-vol01
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
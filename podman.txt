================================================================================
[01] コンテナエンジン
[02] サンプルコンテナ
[03] コンテナ基本動作 - 01 (イメージの取得)
[04] コンテナ基本動作 - 02 (コンテナの起動と停止)
[05] コンテナ基本動作 - 03 (コンテナ内へ内部接続)
================================================================================
[01]
  コンテナエンジン
  
[内容]
  ## 作業内容
    ホスト内のコンテナエンジン(Podman)の状態を確認
  
  ## 使用マシン
    HOST : localhost(Rocky-Linux)
    IPV4 : 192.168.1.4
    MEMO : ホスト
  
  ## コマンド
    podman --version : バージョン表示
    podman images    : ローカルのコンテナイメージ一覧
    podman ps        : コンテナ一覧
    podman ps -a     : コンテナ一覧に停止中のコンテナも含む

[確認]
  $ cd $HOME
  $ podman --version (バージョン確認)
  
  コマンドの実行結果
  --------------------------------------------------
  podman version 4.2.0
  --------------------------------------------------
  
  $ cd $HOME
  $ podman images (コンテナイメージ確認)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 列見出しのみ出力
  --------------------------------------------------
  
  $ cd $HOME
  $ podman ps -a (停止中のコンテナを含むコンテナ一覧)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 列見出しのみ出力
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[02]
  サンプルコンテナ
  
[内容]
  ## 作業内容
    サンプルコンテナ(Hello-World)の自動ダウンロードとコンテナ実行 -> コマンド(run)で実現
  
  ## 使用マシン
    HOST : localhost(Rocky-Linux)
    IPV4 : 192.168.1.4
    MEMO : ホスト
  
  ## コマンド
    podman run XX : コンテナ(XX)を自動ダウンロード後に実行
    podman rm XX  : コンテナ(XX)を削除
    podman rmi XX : イメージ(XX)を削除
  
[確認]
  $ cd $HOME
  $ podman run hello-world (自動ダウンロードとコンテナ実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  $ cd $HOME
  $ podman images (イメージ確認)
  
  コマンドの実行結果
  --------------------------------------------------
  REPOSITORY            TAG     IMAGE ID      CREATED       SIZE
  quay.io/podman/hello  latest  03ed4cbdaa46  18 hours ago  82.1 kB
  --------------------------------------------------
  
  $ cd $HOME
  $ podman ps -a (停止中のコンテナを含むコンテナ一覧) -> ステータスが「Exited」で動作中ではない
  
  コマンドの実行結果
  --------------------------------------------------
  CONTAINER ID  IMAGE                        COMMAND               CREATED        STATUS                    PORTS  NAMES
  55d863453907  quay.io/podman/hello:latest  /usr/local/bin/po...  2 minutes ago  Exited (0) 2 minutes ago         gallant_mahavira
  --------------------------------------------------
  
  $ cd $HOME
  $ podman rm 55d863453907 (コンテナの削除) -> コンテナの停止は「podman stop」で行う
  
  コマンドの実行結果
  --------------------------------------------------
  55d863453907484cb046e4c405ffdc01fc94214bb31739002efbb0d8d93f0d2d
  --------------------------------------------------
  
  $ cd $HOME
  $ podman rmi 03ed4cbdaa46 (イメージの削除)
  
  コマンドの実行結果
  --------------------------------------------------
  Untagged: quay.io/podman/hello:latest
  Deleted: 03ed4cbdaa464c7077ddd8581ea20064fcd6be3723a983fe41626c28c9d8976b
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[03]
  コンテナ基本動作 - 01 (イメージの取得)
  
[内容]
  ## 作業内容
    イメージの取得 -> 今回は「Nginx」を使用
  
  ## 使用マシン
    HOST : localhost(Rocky-Linux)
    IPV4 : 192.168.1.4
    MEMO : ホスト
  
  ## コマンド
    podman pull XX : イメージ(XX)を取得

[確認]
  $ cd $HOME
  $ podman images (コンテナイメージ確認)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 列見出しのみ出力
  --------------------------------------------------
  
  $ cd $HOME
  $ podman pull nginx (コンテナイメージ取得) -> docker.io/library/nginx:latest を選択
  
  コマンドの実行結果
  --------------------------------------------------
  Trying to pull docker.io/library/nginx:latest...
  Getting image source signatures
  Copying blob 8c767bdbc9ae done  
  Copying blob 2019c71d5655 done  
  Copying blob 26c5c85e47da done  
  Copying blob 78e14bb05fd3 done  
  Copying blob 4f3256bdf66b done  
  Copying blob 75576236abf5 done  
  Copying config 6efc10a051 done  
  Writing manifest to image destination
  Storing signatures
  6efc10a0510f143a90b69dc564a914574973223e88418d65c1f8809e08dc0a1f
  --------------------------------------------------
  
  $ cd $HOME
  $ podman images (コンテナイメージ確認)
  
  コマンドの実行結果
  --------------------------------------------------
  REPOSITORY               TAG     IMAGE ID      CREATED     SIZE
  docker.io/library/nginx  latest  6efc10a0510f  5 days ago  147 MB
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[04]
  コンテナ基本動作 - 02 (コンテナの起動と停止)
  
[内容]
  ## 作業内容
    コンテナの起動と停止
  
  ## 使用マシン
    HOST : localhost(Rocky-Linux)
    IPV4 : 192.168.1.4
    MEMO : ホスト
  
  ## コマンド
    podman run -d        : バックグラウンド実行
    podman run -p XX:YY  : ホスト側のポート(XX)とコンテナ側のポート(YY)をリンク
    podman run --name XX : コンテナを「XX」という名前で実行

[確認]
  $ cd $HOME
  $ podman ps -a (コンテナ確認)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 列見出しのみ出力
  --------------------------------------------------
  
  $ cd $HOME
  $ podman run -d -p 8181:80 --name mine01 nginx (コンテナ起動)
  
  コマンドの実行結果
  --------------------------------------------------
  a259a44a437924cf6cf00f169d97af127a1510bcaee37235c499a49ce422d056
  --------------------------------------------------
  
  $ cd $HOME
  $ podman ps -a (コンテナ確認)
  
  コマンドの実行結果
  --------------------------------------------------
  CONTAINER ID  IMAGE                           COMMAND               CREATED         STATUS             PORTS                 NAMES
  a259a44a4379  docker.io/library/nginx:latest  nginx -g daemon o...  17 seconds ago  Up 17 seconds ago  0.0.0.0:8181->80/tcp  mine01
  --------------------------------------------------
  
  $ cd $HOME
  $ firefox -> http://localhost:8181 (ブラウザからコンテナへアクセス)
  
  コマンドの実行結果
  --------------------------------------------------
  (ウェルカムページ表示)
  --------------------------------------------------
  
  $ cd $HOME
  $ podman stop mine01 (コンテナの停止) -> コンテナ名ではなくコンテナIDも可
  
  コマンドの実行結果
  --------------------------------------------------
  mine01
  --------------------------------------------------
  
  $ cd $HOME
  $ podman ps -a (コンテナ確認)
  
  コマンドの実行結果
  --------------------------------------------------
  CONTAINER ID  IMAGE                           COMMAND               CREATED        STATUS                       PORTS                 NAMES
  a259a44a4379  docker.io/library/nginx:latest  nginx -g daemon o...  3 minutes ago  Exited (137) 33 seconds ago  0.0.0.0:8181->80/tcp  mine01
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[05]
  コンテナ基本動作 - 03 (コンテナ内へ内部接続)
  
[内容]
  ## 作業内容
    コンテナ内へ内部接続
  
  ## 使用マシン
    HOST : localhost(Rocky-Linux)
    IPV4 : 192.168.1.4
    MEMO : ホスト
  
  ## コマンド
    podman run -it : コンテナ内へ接続可能にする
    podman run -d  : バックグラウンド実行
    podman exec XX : コンテナにコマンド(XX)実行
  
[確認]
  $ cd $HOME
  $ podman run -it -d -p 8181:80 --name mine02 nginx (コンテナ起動)
  
  コマンドの実行結果
  --------------------------------------------------
  6d766b5fd2da031f29710a12881015e62768a704f3533f43dd9e3240ddd5e0ae
  --------------------------------------------------
  
  $ cd $HOME
  $ podman ps -a (コンテナ確認)
  
  コマンドの実行結果
  --------------------------------------------------
  CONTAINER ID  IMAGE                           COMMAND               CREATED         STATUS                      PORTS                 NAMES
  a259a44a4379  docker.io/library/nginx:latest  nginx -g daemon o...  4 minutes ago   Exited (137) 2 minutes ago  0.0.0.0:8181->80/tcp  mine01
  6d766b5fd2da  docker.io/library/nginx:latest  nginx -g daemon o...  15 seconds ago  Up 15 seconds ago           0.0.0.0:8181->80/tcp  mine02
  --------------------------------------------------
  
  $ cd $HOME
  $ podman exec -it mine02 bash (コンテナ接続)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> プロンプトが「root@6d766b5fd2da:/#」に変化
  --------------------------------------------------
    
    root@6d766b5fd2da:/# (ユーザー確認)
    root@6d766b5fd2da:/# whoami
    
    コマンドの実行結果
    --------------------------------------------------
    root
    --------------------------------------------------
    
    root@6d766b5fd2da:/# (カレントディレクトリ)
    root@6d766b5fd2da:/# pwd
    
    コマンドの実行結果
    --------------------------------------------------
    /
    --------------------------------------------------
    
    root@6d766b5fd2da:/# (カーネルバージョン)
    root@6d766b5fd2da:/# uname -r
    
    コマンドの実行結果
    --------------------------------------------------
    4.18.0-425.19.2.el8_7.x86_64 -> ホストと同一
    --------------------------------------------------
    
    root@6d766b5fd2da:/# (ディレクトリ構成)
    root@6d766b5fd2da:/# ls -lh
    
    コマンドの実行結果
    --------------------------------------------------
    drwxr-xr-x.   2 root   root    4.0K Apr 11 00:00 bin
    drwxr-xr-x.   2 root   root       6 Dec  9 19:15 boot
    drwxr-xr-x.   5 root   root     360 Apr 18 13:49 dev
    drwxr-xr-x.   1 root   root      41 Apr 12 08:51 docker-entrypoint.d
    -rwxrwxr-x.   1 root   root    1.6K Apr 12 08:51 docker-entrypoint.sh
    drwxr-xr-x.   1 root   root      44 Apr 18 13:49 etc
    drwxr-xr-x.   2 root   root       6 Dec  9 19:15 home
    drwxr-xr-x.   1 root   root      45 Apr 11 00:00 lib
    drwxr-xr-x.   2 root   root      34 Apr 11 00:00 lib64
    drwxr-xr-x.   2 root   root       6 Apr 11 00:00 media
    drwxr-xr-x.   2 root   root       6 Apr 11 00:00 mnt
    drwxr-xr-x.   2 root   root       6 Apr 11 00:00 opt
    dr-xr-xr-x. 300 nobody nogroup    0 Apr 18 13:49 proc
    drwx------.   2 root   root      37 Apr 11 00:00 root
    drwxr-xr-x.   1 root   root      59 Apr 18 13:49 run
    drwxr-xr-x.   2 root   root    4.0K Apr 11 00:00 sbin
    drwxr-xr-x.   2 root   root       6 Apr 11 00:00 srv
    dr-xr-xr-x.  13 nobody nogroup    0 Apr 18 07:32 sys
    drwxrwxrwt.   1 root   root       6 Apr 12 08:51 tmp
    drwxr-xr-x.   1 root   root      66 Apr 11 00:00 usr
    drwxr-xr-x.   1 root   root      19 Apr 11 00:00 var
    --------------------------------------------------
    
    root@6d766b5fd2da:/# (ログアウト)
    root@6d766b5fd2da:/# exit
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  $ cd $HOME
  $ podman stop mine02 (コンテナ停止)
  
  コマンドの実行結果
  --------------------------------------------------
  mine02
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================

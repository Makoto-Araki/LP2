================================================================================
[01] Nginx - 01 (イメージの取得)
[02] Nginx - 02 (コンテナの起動と停止)
[03] Nginx - 03 (コンテナ内へ内部接続)
[04] Nginx - 04 (設定ファイルを閲覧)
================================================================================
[01]
  Nginx - 01 (イメージの取得)
  
[内容]
  ## 作業内容
    イメージ(Nginx)の取得
  
  ## 使用マシン
    HOST : localhost
    IPV4 : 192.168.1.4
    MEMO : ホスト
  
  ## コマンド
    podman --version : バージョン表示
    podman images    : ローカルのコンテナイメージ一覧
    podman pull XX   : イメージ(XX)を取得
  
[確認]
  $ cd $HOME
  $ podman --version
  
  コマンドの実行結果
  --------------------------------------------------
  podman version 4.2.0
  --------------------------------------------------
  
  $ cd $HOME
  $ podman images
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  $ cd $HOME
  $ podman pull nginx (コンテナイメージ取得) -> docker.io/library/nginx:latest を選択
  
  コマンドの実行結果
  --------------------------------------------------
  Trying to pull docker.io/library/nginx:latest...
  Getting image source signatures
  Copying blob 8c767bdbc9ae done  
  Copying blob 2019c71d5655 done  
  Copying blob 26c5c85e47da done  
  Copying blob 78e14bb05fd3 done  
  Copying blob 4f3256bdf66b done  
  Copying blob 75576236abf5 done  
  Copying config 6efc10a051 done  
  Writing manifest to image destination
  Storing signatures
  6efc10a0510f143a90b69dc564a914574973223e88418d65c1f8809e08dc0a1f
  --------------------------------------------------
  
  $ cd $HOME
  $ podman images
  
  コマンドの実行結果
  --------------------------------------------------
  REPOSITORY               TAG     IMAGE ID      CREATED     SIZE
  docker.io/library/nginx  latest  6efc10a0510f  5 days ago  147 MB
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[02]
  Nginx - 02 (コンテナの起動と停止)
  
[内容]
  ## 作業内容
    コンテナの起動と停止
  
  ## 使用マシン
    HOST : localhost
    IPV4 : 192.168.1.4
    MEMO : ホスト
  
  ## コマンド
    podman ps            : コンテナ一覧
    podman ps -a         : コンテナ一覧に停止中のコンテナも含む
    podman run -d        : バックグラウンド実行
    podman run -p XX:YY  : ホスト側のポート(XX)とコンテナ側のポート(YY)をリンク
    podman run --name XX : コンテナ(XX)という名前で実行
    podman run XX        : イメージ(XX)を実行
    podman stop XX       : コンテナ(XX)を停止
    podman start XX      : コンテナ(XX)を起動
    podman rm XX         : コンテナ(XX)を削除
    podman rmi XX        : イメージ(XX)を削除
  
[確認]
  $ cd $HOME
  $ podman ps -a
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  $ cd $HOME
  $ podman run -d -p 8181:80 --name mine01 nginx (コンテナ起動)
  
  コマンドの実行結果
  --------------------------------------------------
  f3663f1aa30adea7fb6e51c4c82697b06360d4505f52a19a5934ee4d450fa636
  --------------------------------------------------
  
  $ cd $HOME
  $ podman ps -a
  
  コマンドの実行結果
  --------------------------------------------------
  CONTAINER ID  IMAGE                           COMMAND               CREATED         STATUS             PORTS                 NAMES
  f3663f1aa30a  docker.io/library/nginx:latest  nginx -g daemon o...  14 seconds ago  Up 14 seconds ago  0.0.0.0:8181->80/tcp  mine01
  --------------------------------------------------
  
  $ cd $HOME
  $ podman stop mine01 -> コンテナ名ではなくコンテナIDも可
  
  コマンドの実行結果
  --------------------------------------------------
  mine01
  --------------------------------------------------
  
  $ cd $HOME
  $ podman ps -a
  
  コマンドの実行結果
  --------------------------------------------------
  CONTAINER ID  IMAGE                           COMMAND               CREATED             STATUS                      PORTS                 NAMES
  f3663f1aa30a  docker.io/library/nginx:latest  nginx -g daemon o...  About a minute ago  Exited (137) 7 seconds ago  0.0.0.0:8181->80/tcp  mine01
  --------------------------------------------------
  
  $ cd $HOME
  $ podman start mine01 -> コマンド(start)でも起動可能
  
  コマンドの実行結果
  --------------------------------------------------
  mine01
  --------------------------------------------------
  
  $ cd $HOME
  $ podman ps -a
  
  コマンドの実行結果
  --------------------------------------------------
  CONTAINER ID  IMAGE                           COMMAND               CREATED             STATUS            PORTS                 NAMES
  f3663f1aa30a  docker.io/library/nginx:latest  nginx -g daemon o...  About a minute ago  Up 6 seconds ago  0.0.0.0:8181->80/tcp  mine01
  --------------------------------------------------
  
  $ cd $HOME
  $ podman stop mine01
  
  コマンドの実行結果
  --------------------------------------------------
  mine01
  --------------------------------------------------
  
  $ cd $HOME
  $ podman rm mine01
  
  コマンドの実行結果
  --------------------------------------------------
  f3663f1aa30adea7fb6e51c4c82697b06360d4505f52a19a5934ee4d450fa636
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[03]
  Nginx - 03 (コンテナ内へ内部接続)
  
[内容]
  ## 作業内容
    コンテナ内へ内部接続
  
  ## 使用マシン
    HOST : localhost
    IPV4 : 192.168.1.4
    MEMO : ホスト
  
  ## コマンド
    podman run -it : コンテナ内へ接続可能にする
    podman exec XX : コンテナにコマンド(XX)実行
  
[確認]
  $ cd $HOME
  $ podman run -it -d -p 8181:80 --name mine02 nginx
  
  コマンドの実行結果
  --------------------------------------------------
  fb35a6c56afe3340b5cafd1818a4551e62ef1602be1e5d05adc8e651ffe7f9e7
  --------------------------------------------------
  
  $ cd $HOME
  $ podman ps -a
  
  コマンドの実行結果
  --------------------------------------------------
  CONTAINER ID  IMAGE                           COMMAND               CREATED         STATUS             PORTS                 NAMES
  fb35a6c56afe  docker.io/library/nginx:latest  nginx -g daemon o...  16 seconds ago  Up 16 seconds ago  0.0.0.0:8181->80/tcp  mine02
  --------------------------------------------------
  
  $ cd $HOME
  $ podman exec -it mine02 bash (コンテナ内へ内部接続)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> プロンプトが「root@6d766b5fd2da:/#」に変化 -> 「root@container-id:/#」と表記
  --------------------------------------------------
    
    root@container-id:/# (ユーザー確認)
    root@container-id:/# whoami
    
    コマンドの実行結果
    --------------------------------------------------
    root
    --------------------------------------------------
    
    root@container-id:/# (カレントディレクトリ)
    root@container-id:/# pwd
    
    コマンドの実行結果
    --------------------------------------------------
    / (ルートディレクトリ)
    --------------------------------------------------
    
    root@container-id:/# (カーネルバージョン)
    root@container-id:/# uname -r
    
    コマンドの実行結果
    --------------------------------------------------
    4.18.0-425.19.2.el8_7.x86_64 -> ホストのカーネルバージョンと同一
    --------------------------------------------------
    
    root@container-id:/# (ディレクトリ構成)
    root@container-id:/# ls -lh
    
    コマンドの実行結果
    --------------------------------------------------
    drwxr-xr-x.   2 root   root    4.0K Apr 11 00:00 bin
    drwxr-xr-x.   2 root   root       6 Dec  9 19:15 boot
    drwxr-xr-x.   5 root   root     360 Apr 18 13:49 dev
    drwxr-xr-x.   1 root   root      41 Apr 12 08:51 docker-entrypoint.d
    -rwxrwxr-x.   1 root   root    1.6K Apr 12 08:51 docker-entrypoint.sh
    drwxr-xr-x.   1 root   root      44 Apr 18 13:49 etc
    drwxr-xr-x.   2 root   root       6 Dec  9 19:15 home
    drwxr-xr-x.   1 root   root      45 Apr 11 00:00 lib
    drwxr-xr-x.   2 root   root      34 Apr 11 00:00 lib64
    drwxr-xr-x.   2 root   root       6 Apr 11 00:00 media
    drwxr-xr-x.   2 root   root       6 Apr 11 00:00 mnt
    drwxr-xr-x.   2 root   root       6 Apr 11 00:00 opt
    dr-xr-xr-x. 300 nobody nogroup    0 Apr 18 13:49 proc
    drwx------.   2 root   root      37 Apr 11 00:00 root
    drwxr-xr-x.   1 root   root      59 Apr 18 13:49 run
    drwxr-xr-x.   2 root   root    4.0K Apr 11 00:00 sbin
    drwxr-xr-x.   2 root   root       6 Apr 11 00:00 srv
    dr-xr-xr-x.  13 nobody nogroup    0 Apr 18 07:32 sys
    drwxrwxrwt.   1 root   root       6 Apr 12 08:51 tmp
    drwxr-xr-x.   1 root   root      66 Apr 11 00:00 usr
    drwxr-xr-x.   1 root   root      19 Apr 11 00:00 var
    --------------------------------------------------
    
    root@container-id:/# (ログアウト)
    root@container-id:/# exit
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  $ cd $HOME
  $ podman stop mine02
  
  コマンドの実行結果
  --------------------------------------------------
  mine02
  --------------------------------------------------
  
  $ cd $HOME
  $ podman rm mine02
  
  コマンドの実行結果
  --------------------------------------------------
  fb35a6c56afe3340b5cafd1818a4551e62ef1602be1e5d05adc8e651ffe7f9e7
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[04]
  Nginx - 04 (設定ファイルを閲覧)
  
[内容]
  ## 作業内容
    設定ファイルを閲覧
  
  ## 使用マシン
    HOST : localhost
    IPV4 : 192.168.1.4
    MEMO : ホスト
  
  ## コマンド
    podman run -it : コンテナ内へ接続可能にする
    podman exec XX : コンテナにコマンド(XX)実行
  
[確認]
  $ cd $HOME
  $ podman run -it -d -p 8181:80 --name mine03 nginx
  
  コマンドの実行結果
  --------------------------------------------------
  733464389dcf7a58cf9b656b561a3911ba1301e4c9110c48c42b5ceaeb21cf93
  --------------------------------------------------
  
  $ cd $HOME
  $ podman ps -a
  
  コマンドの実行結果
  --------------------------------------------------
  CONTAINER ID  IMAGE                           COMMAND               CREATED         STATUS             PORTS                 NAMES
  733464389dcf  docker.io/library/nginx:latest  nginx -g daemon o...  19 seconds ago  Up 19 seconds ago  0.0.0.0:8181->80/tcp  mine03
  --------------------------------------------------
  
  $ cd $HOME
  $ podman exec -it mine03 bash
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> プロンプトが「root@733464389dcf:/#」に変化 -> 「root@container-id:/#」と表記
  --------------------------------------------------
    
    root@container-id:/# (カレントディレクトリ)
    root@container-id:/# pwd
    
    コマンドの実行結果
    --------------------------------------------------
    / (ルートディレクトリ)
    --------------------------------------------------
    
    root@container-id:/# (ファイル検索)
    root@container-id:/# find . -name nginx.conf
    
    コマンドの実行結果
    --------------------------------------------------
    /etc/nginx/nginx.conf
    --------------------------------------------------
    
    root@container-id:/# (ファイル閲覧)
    root@container-id:/# cat /etc/nginx/nginx.conf -> コメント削除など出力結果を整形済み
    
    コマンドの実行結果
    --------------------------------------------------
    user nginx;
    worker_processes  auto;    
    error_log /var/log/nginx/error.log notice;
    pid /var/run/nginx.pid;
    
    events {
      worker_connections  1024;
    }
    
    http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;
      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';      
      access_log /var/log/nginx/access.log main;
      sendfile on;
      keepalive_timeout 65;
      include /etc/nginx/conf.d/*.conf; -> 追加設定ファイルの格納ディレクトリ
    }
    --------------------------------------------------
    
    root@container-id:/# (ファイル確認)
    root@container-id:/# ls -lh /etc/nginx/conf.d
    
    コマンドの実行結果
    --------------------------------------------------
    -rw-r--r--. 1 root root 1.1K Apr 19 00:59 default.conf
    --------------------------------------------------
    
    root@container-id:/# (ファイル閲覧)
    root@container-id:/# cat /etc/nginx/conf.d/default.conf -> コメント削除など出力結果を整形済み
    
    コマンドの実行結果
    --------------------------------------------------
    server {
      listen 80;
      listen [::]:80;
      server_name localhost;
      location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
      }
      error_page 500 502 503 504 /50x.html;
      location = /50x.html {
        root /usr/share/nginx/html;
      }
    }
    --------------------------------------------------
    
    root@container-id:/# (エディタ検索)
    root@container-id:/# which vi
    
    コマンドの実行結果
    --------------------------------------------------
    (出力なし) -> コンテナ内でエディタからのファイル編集が不可
    --------------------------------------------------
    
    root@container-id:/# (ログアウト)
    root@container-id:/# exit
    
    コマンドの実行結果
    --------------------------------------------------
    (プロンプトが元に戻る)
    --------------------------------------------------
    
  $ cd $HOME
  $ podman stop mine03
  
  コマンドの実行結果
  --------------------------------------------------
  mine03
  --------------------------------------------------
  
  $ cd $HOME
  $ podman rm mine03
  
  コマンドの実行結果
  --------------------------------------------------
  733464389dcf7a58cf9b656b561a3911ba1301e4c9110c48c42b5ceaeb21cf93
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================

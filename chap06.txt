================================================================================
[001] ネットワークデバイス - 01
[002] ネットワークデバイス - 02
[003] ネットワークデバイス - 03 (ifconfig)
[004] ARP
[005] ネットワーク管理コマンド - 01 (ping)
[006] ネットワーク管理コマンド - 02 (ping6)
[007] ネットワーク管理コマンド - 03 (traceroute)
[008] ネットワーク管理コマンド - 04 (traceroute6)
[009] ネットワーク管理コマンド - 05 (tcpdump)
[010] ネットワーク管理コマンド - 06 (netstat)
[011] ネットワーク管理コマンド - 07 (ss)
[012] ネットワーク管理コマンド - 08 (nc)
[013] ネットワーク管理コマンド - 09 (ip)
[014] ルーティングの設定
[015] 無線ネットワークの設定
================================================================================
[001]
  ネットワークデバイス - 01
  
[内容]
  ## 作業内容
    システムのイーサネットのネットワークデバイスを調査する
  
  ## 命名規則1
    en(イーサネット) + p0(PCIバスの0番目) + s0(スロット0)
    en(イーサネット) + p0(PCIバスの0番目) + s1(スロット1)
  
  ## 命名規則2
    en(イーサネット) + o0(オンボードの0番目)
    en(イーサネット) + o1(オンボードの1番目)
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  //
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ dmesg | grep enp -> PCIバス
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ dmesg | grep eno -> オンボード
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[002]
  ネットワークデバイス - 02
  
[内容]
  ## 作業内容
    システムの無線LANのネットワークデバイスを調査する
  
  ## 命名規則1
    wl(無線LAN) + p0(PCIバスの0番目) + s0(スロット0)
    wl(無線LAN) + p0(PCIバスの0番目) + s1(スロット1)
  
  ## 命名規則2
    wl(無線LAN) + o0(オンボードの0番目)
    wl(無線LAN) + o1(オンボードの1番目)
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  //
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ dmesg | grep wlp -> PCIバス
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ dmesg | grep wlo -> オンボード
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[003]
  ネットワークデバイス - 03 (ifconfig)
  
[内容]
  ## 作業内容
    ネットワークデバイスの設定をコマンド(ifconfig)で行う
  
  ## コマンド(ifconfig)
    ifconfig -a                : 全ネットワークデバイスを表示
    ifconfig XX                : ネットワークデバイス(XX)を表示
    ifconfig XX YY netmask ZZ  : ネットワークデバイス(XX)にIPアドレス(YY)、ネットマスク(ZZ)を設定する
    ifconfig XX up             : ネットワークデバイス(XX)を起動
    ifconfig XX down           : ネットワークデバイス(XX)を停止
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  //
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ifconfig (-a) -> 全ネットワークデバイスを表示
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ifconfig eth0 -> ネットワークデバイス(eth0)を表示
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo ifconfig eth0:0 192.168.122.21 netmask 255.255.255.0 -> 仮想ネットワークデバイスにIPアドレスを付与
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo ifconfig eth0:0 up -> 仮想ネットワークデバイスを起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo ifconfig eth0:0 down -> 仮想ネットワークデバイスを停止
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[004]
  ARP
  
[内容]
  ## 作業内容
    ARPの設定をコマンド(arp)で行う
  
  ## コマンド(arp)
    arp -a XX     : 指定ホスト(XX)のエントリまたは全エントリ表示
    arp -d XX     : 指定ホスト(XX)のエントリ削除
    arp -f XX     : ファイルからホストとMACアドレスの対応を詠み込む -> デフォルトは「/etc/ethers」
    arp -n        : ホスト名の名前解決を行わない
    arp -i XX     : 指定NIC(XX)のエントリ表示
    arp -a XX YY  : ホスト名(XX)とMACアドレス(YY)の組合せエントリを追加
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  //
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ arp -a -> 全エントリ表示
    
    コマンドの実行結果
    --------------------------------------------------
    ntt.setup (192.168.1.1) at 1c:b1:7f:43:f0:da [ether] on enp0s25
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ arp -a -n -> ホスト名の名前解決を行わない
    
    コマンドの実行結果
    --------------------------------------------------
    ? (192.168.122.1) at 52:54:00:6f:51:3b [ether] PERM on eth0
    ? (192.168.122.12) at 52:54:00:44:98:f6 [ether] PERM on eth0
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ arp ntt.setup -> 指定ホストのみ表示
    
    コマンドの実行結果
    --------------------------------------------------
    Address    HWtype  HWaddress          Flags Mask  Iface
    ntt.setup  ether   1c:b1:7f:43:f0:da  C           enp0s25
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo arp -d vm12 -> エントリ削除
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/ethers -> 設定ファイル作成
    
    コマンドの実行結果
    --------------------------------------------------
    52:54:00:44:98:f6 192.168.122.12  // vm12
    52:54:00:6f:51:3b 192.168.122.1   // gateway
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo arp -f /etc/ethers -> 設定ファイル読込
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ arp -a -> 全エントリ表示
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[005]
  ネットワーク管理コマンド - 01 (ping)
  
[内容]
  ## 作業内容
    ネットワーク管理をコマンド(ping)で行う
  
  ## コマンド(ping)
    ping XX        : 指定ホスト(XX)にICMPパケットを送信(Ctrl + C で停止)
    ping -c NN XX  : 指定ホスト(XX)にICMPパケットを送信、送信回数(NN)回
    ping -n XX     : 指定ホスト(XX)にICMPパケットを送信、ホスト名の名前解決を行わない
    ping -i NN XX  : 指定ホスト(XX)にICMPパケットを送信、送信間隔(NN)秒
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  //
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ping -n -c 3 -i 1 www.yahoo.co.jp -> 名前解決なし、送信回数は3回、送信間隔は1秒
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[006]
  ネットワーク管理コマンド - 02 (ping6)
  
[内容]
  ## 作業内容
    ネットワーク管理をコマンド(ping6)で行う
  
  ## コマンド(ping6)
    ping6 XX        : 指定ホスト(XX)にICMPパケットを送信(Ctrl + C で停止)
    ping6 -c NN XX  : 指定ホスト(XX)にICMPパケットを送信、送信回数(NN)回
    ping6 -n XX     : 指定ホスト(XX)にICMPパケットを送信、ホスト名の名前解決を行わない
    ping6 -i NN XX  : 指定ホスト(XX)にICMPパケットを送信、送信間隔(NN)秒
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  //
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ping6 -n -c 3 -i 1 localhost -> 名前解決なし、送信回数は3回、送信間隔は1秒
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[007]
  ネットワーク管理コマンド - 03 (traceroute)
  
[内容]
  ## 作業内容
    ネットワーク管理をコマンド(traceroute)で行う
  
  ## コマンド(traceroute)
    traceroute XX        : 指定ホスト(XX)への通信経路を表示
    traceroute -n XX     : 指定ホスト(XX)への通信経路を表示、ホスト名の名前解決を行わない
    traceroute -i NN XX  : 指定ホスト(XX)への通信経路を表示、NIC(NN)を指定
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  //
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ traceroute -n 192.168.1.1 -> 名前解決なし、通信経路を表示
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[008]
  ネットワーク管理コマンド - 04 (traceroute6)
  
[内容]
  ## 作業内容
    ネットワーク管理をコマンド(traceroute6)で行う
  
  ## コマンド(traceroute6)
    traceroute6 XX        : 指定ホスト(XX)への通信経路を表示
    traceroute6 -n XX     : 指定ホスト(XX)への通信経路を表示、ホスト名の名前解決を行わない
    traceroute6 -i NN XX  : 指定ホスト(XX)への通信経路を表示、NIC(NN)を指定
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  //
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ traceroute6 -n localhost -> 名前解決なし、通信経路を表示
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[009]
  ネットワーク管理コマンド - 05 (tcpdump)
  
[内容]
  ## 作業内容
    ネットワーク管理をコマンド(tcpdump)で行う
  
  ## コマンド(tcpdump)
    tcpdump -i XX               : NIC(XX)を指定
    tcpdump -n                  : ホストの名前解決を行わない
    tcpdump -N                  : ホストのドメイン名を表示しない
    tcpdump -p                  : 自分宛のパケット以外はキャプチャしない(非プロミスキャスモード)
    tcpdump -t                  : 時刻を表示しない
    tcpdump -v                  : 詳細に表示
    tcpdump -l                  : 標準出力をバッファリング
    tcpdump -s XX               : パケットからの抽出バイト数(XX)を指定
    tcpdump -X                  : 16進数とASCII文字で表示
    tcpdump -w XX               : キャプチャ内容をファイル(XX)に保存
    tcpdump src host XX         : 送信元ホスト(XX)を指定
    tcpdump dst host XX         : 送信先ホスト(XX)を指定
    tcpdump host XX             : 送信元または送信先ホスト(XX)を指定
    tcpdump src net XX mask YY  : 送信元ネットワーク(XX)とそのネットマスク(YY)を指定
    tcpdump dst net XX mask YY  : 送信先ネットワーク(XX)とそのネットマスク(YY)を指定
    tcpdump net XX mask YY      : 送信元または送信先ネットワーク(XX)とそのネットマスク(YY)を指定
    tcpdump src port XX         : 送信元ポート(XX)を指定
    tcpdump dst port XX         : 送信先ポート(XX)を指定
    tcpdump port XX             : ポート(XX)を指定

[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  //
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo tcpdump
        > -n             // 名前解決なし
        > -l             // バッファリング
        > -i eth0        // NIC指定
        > src host rock  // 送信元指定
    
    コマンドの実行結果
    --------------------------------------------------
    [ 9357.799276] device eth0 entered promiscuous mode
    tcpdump: verbose output suppressed, use -v or -vv for full protocol decode
    listening on eth0, link-type EN10MB (Ethernet), capture size 262144 bytes
    
    // ここでホスト(vm12)からICMPパケット送信
    
    13:01:42.861134 IP 192.168.122.12 > 192.168.122.11: ICMP echo request, id 9015, seq 1, length 64
    13:01:43.862704 IP 192.168.122.12 > 192.168.122.11: ICMP echo request, id 9015, seq 2, length 64
    13:01:44.863907 IP 192.168.122.12 > 192.168.122.11: ICMP echo request, id 9015, seq 3, length 64
    13:01:47.867085 ARP, Request who-has 192.168.122.11 tell 192.168.122.12, length 28
    
    // Ctrl + C でネットワーク監視を停止
    
    4 packets captured
    4 packets received by filter
    0 packets dropped by kernel
    [ 9548.826892] device eth0 left promiscuous mode
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[010]
  ネットワーク管理コマンド - 06 (netstat)
  
[内容]
  ## 作業内容
    ネットワーク管理をコマンド(netstat)で行う
  
  ## コマンド(netstat)
    netstat -a  : 全ソケット情報を表示
    netstat -l  : 接続待ちソケットのみ表示
    netstat -c  : 一秒毎にリアルタイム表示更新
    netstat -i  : ネットワークデバイスの状態を表示
    netstat -n  : 名前解決なし
    netstat -p  : プロセスとPIDも表示
    netstat -r  : ルーティングテーブルを表示
    netstat -t  : TCPポートのみ表示
    netstat -u  : UDPポートのみ表示

[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  //
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ netstat -i -> ネットワークデバイス毎の状態を表示
    
    コマンドの実行結果
    --------------------------------------------------
    Kernel Interface table
    Iface    MTU    RX-OK  RX-ERR  RX-DRP  RX-OVR  TX-OK  TX-ERR  TX-DRP  TX-OVR  Flg
    eth0    1500     8137       0       9       0   2543       0       0       0  BMRU
    lo     65536       70       0       0       0     70       0       0       0  LRU
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ netstat -a -p -> 全ソケット情報、プロセス名を表示
    
    コマンドの実行結果
    --------------------------------------------------
    // インターネット接続
    Active Internet connections (servers and established)
    Proto   Recv-Q   Send-Q   Local Address    Foreign Address   State    PID/Program name    
    tcp          0        0   0.0.0.0:ssh      0.0.0.0:*         LISTEN   3167/sshd           
    tcp          0        0   localhost:smtp   0.0.0.0:*         LISTEN   3412/master         
    tcp6         0        0   [::]:ssh         [::]:*            LISTEN   3167/sshd           
    tcp6         0        0   localhost:smtp   [::]:*            LISTEN   3412/master         
    udp          0        0   localhost:323    0.0.0.0:*                  2636/chronyd        
    udp6         0        0   localhost:323    [::]:*                     2636/chronyd        
    
    // ソケット
    Active UNIX domain sockets (servers and established)
    Proto  RefCnt  Flags    Type    State      I-Node  PID/Program name  Path
    unix   2       [ ACC ]  STREAM  LISTENING  24736   3412/master       private/trace
    unix   3       [ ]      DGRAM              7456    1/systemd         /run/systemd/notify
    unix   2       [ ]      DGRAM              7458    1/systemd         /run/systemd/cgroups-agent
    unix   2       [ ACC ]  STREAM  LISTENING  24717   3412/master       public/cleanup
    unix   2       [ ACC ]  STREAM  LISTENING  24720   3412/master       public/qmgr
    unix   2       [ ACC ]  STREAM  LISTENING  24742   3412/master       public/flush
    ...
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ netstat -a -t -n -> 全ソケット情報、TCPポート、名前解決なし
    
    コマンドの実行結果
    --------------------------------------------------
    // インターネット接続
    Active Internet connections (servers and established)
    Proto   Recv-Q   Send-Q   Local Address    Foreign Address   State
    tcp          0        0   0.0.0.0:22       0.0.0.0:*         LISTEN
    tcp          0        0   127.0.0.1:25     0.0.0.0:*         LISTEN
    tcp6         0        0   :::22            :::*              LISTEN
    tcp6         0        0   ::1:25           :::*              LISTEN
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ netstat -r -> ルーティングテーブル
    
    コマンドの実行結果
    --------------------------------------------------
    Kernel IP routing table
    Destination     Gateway   Genmask         Flags   MSS   Window   irtt   Iface
    default         gateway   0.0.0.0         UG        0        0      0   eth0
    192.168.122.0   0.0.0.0   255.255.255.0   U         0        0      0   eth0
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[011]
  ネットワーク管理コマンド - 07 (ss)
  
[内容]
  ## 作業内容
    ネットワーク管理をコマンド(ss)で行う
  
  ## コマンド(ss)
    ss -a  : 全ソケット情報を表示
    ss -n  : 名前解決なし
    ss -p  : プロセスとPIDも表示
    ss -r  : ホスト名を解決
    ss -t  : TCPポートのみ表示
    ss -u  : UDPポートのみ表示
    ss -4  : IPv4のみ表示
    ss -6  : IPv6のみ表示
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  //
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ss
        > -a  // 全ソケット情報
        > -p  // プロセス名表示
        > -n  // 名前解決なし
        > -t  // TCPポートのみ
        > -4  // IPv4のみ表示
    
    コマンドの実行結果
    --------------------------------------------------
    State    Recv-Q   Send-Q   Local Address:Port   Peer Address:Port
    LISTEN        0      128   *:22                 *:*              
    LISTEN        0      100   127.0.0.1:25         *:*              
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[012]
  ネットワーク管理コマンド - 08 (nc)
  
[内容]
  ## 作業内容
    ネットワーク管理をコマンド(nc)で行う
  
  ## コマンド(nc)
    nc -k  : 複数クライアントTCPコネクションを同時確立
    nc -l  : 指定ポートをリスニング
    nc -4  : IPv4
    nc -6  : IPv6
    nc -p  : ポート番号を指定
    nc -u  : UDP利用
    nc -o  : 指定ファイルに出力
    nc -n  : 名前解決なし
    nc -v  : 詳細情報を表示
    nc -z  : 通信可能か表示
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  //
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ vi script05.sh -> ポートスキャンのツール作成
    
    コマンドの実行結果
    --------------------------------------------------
    #!/bin/bash
    
    host=$1  # ホスト名
    var1=$2  # 開始ポート
    var2=$3  # 終了ポート
    
    while [ ${var1} -le ${var2} ]
    do
      echo "${host} - ${var1}"
      nc -4 -vz ${host} $(expr ${var1}+1)
      echo ''
      var1=$((var1+1))
      sleep 1
    done
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ bash script05.sh localhost 15000 15002 -> ポートスキャン実行
    
    コマンドの実行結果
    --------------------------------------------------
    localhost - 15000
    Ncat: Version 7.50 ( https://nmap.org/ncat )
    Ncat: Connection to 127.0.0.1 failed: Connection refused.
    Ncat: Trying next address...
    Ncat: Connection refused.
    
    localhost - 15001
    Ncat: Version 7.50 ( https://nmap.org/ncat )
    Ncat: Connection to 127.0.0.1 failed: Connection refused.
    Ncat: Trying next address...
    Ncat: Connection refused.
    
    localhost - 15002
    Ncat: Version 7.50 ( https://nmap.org/ncat )
    Ncat: Connection to 127.0.0.1 failed: Connection refused.
    Ncat: Trying next address...
    Ncat: Connection refused.
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo firewall-cmd --add-port=15001/tcp --permanent
    
    コマンドの実行結果
    --------------------------------------------------
    success
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo firewall-cmd --reload
    
    コマンドの実行結果
    --------------------------------------------------
    success
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ bash script05.sh localhost 15000 15002 -> ポートスキャン実行
    
    コマンドの実行結果
    --------------------------------------------------
    localhost - 15000
    Ncat: Version 7.50 ( https://nmap.org/ncat )
    Ncat: Connection to 127.0.0.1 failed: Connection refused.
    Ncat: Trying next address...
    Ncat: Connection refused.
    
    localhost - 15001
    Ncat: Version 7.50 ( https://nmap.org/ncat )
    Ncat: Connection to 127.0.0.1 failed: Connection refused.
    Ncat: Trying next address...
    Ncat: Connection refused. -> ポート開放しても受取プログラムが無いため失敗する模様
    
    localhost - 15002
    Ncat: Version 7.50 ( https://nmap.org/ncat )
    Ncat: Connection to 127.0.0.1 failed: Connection refused.
    Ncat: Trying next address...
    Ncat: Connection refused.
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ nc
        > -k        // 複数接続
        > -4        // IPV4通信
        > -l 15001  // ポート(15001)をリスニング開始
        > &         // バックグラウンド
    
    コマンドの実行結果
    --------------------------------------------------
    [1] 1382 -> PID
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ netstat
        > -l  // リスニング
        > -t  // TCP
        > -4  // IPV4
        > -p  // PID
    
    コマンドの実行結果
    --------------------------------------------------
    Proto  Recv-Q  Send-Q  Local Address   Foreign Address  State   PID/Program name
    tcp         0       0  0.0.0.0:ssh     0.0.0.0:*        LISTEN  -
    tcp         0       0  0.0.0.0:15001   0.0.0.0:*        LISTEN  1382/nc -> ポート「15001」の受取プログラム
    tcp         0       0  localhost:smtp  0.0.0.0:*        LISTEN  -
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ss
        > -l  // リスニング
        > -t  // TCP
        > -4  // IPV4
    
    コマンドの実行結果
    --------------------------------------------------
    State   Recv-Q  Send-Q  Local Address:Port  Peer Address:Port
    LISTEN  0          128  *:ssh               *:*
    LISTEN  0           10  *:15001             *:* -> ポート「15001」の受取プログラム
    LISTEN  0          100  127.0.0.1:smtp      *:*
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ echo 'Hello World' | nc localhost 15001 -> ポート15001へデータ送信
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> Hello World と出力
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ pgrep nc -> プロセスのPIDを調査
    
    コマンドの実行結果
    --------------------------------------------------
    1382
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ kill -term 1382
    
    コマンドの実行結果
    --------------------------------------------------
    [1]+  Terminated   nc -k -4 -l 15001
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo firewall-cmd --remove-port=15001/tcp --permanent
    
    コマンドの実行結果
    --------------------------------------------------
    success
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo firewall-cmd --reload
    
    コマンドの実行結果
    --------------------------------------------------
    success
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[013]
  ネットワーク管理コマンド - 09 (ip)
  
[内容]
  ## 作業内容
    ネットワーク管理をコマンド(ip)で行う
  
  ## コマンド(ip)
    ip -s                   : 詳細表示
    ip -r                   : 名前解決して表示
    ip -f inet|inet6        : inet(IPv4), inet6(IPv6)
    ip link show            : データリンク層の情報を表示
    ip neigh show           : ARPキャッシュの情報を表示
    ip addr show            : IPアドレスの情報を表示
    ip route show           : ルーティングテーブル表示
    ip addr add XX dev YY   : デバイス(YY)にIPアドレス(XX)を追加
    ip addr del XX dev YY   : デバイス(YY)のIPアドレス(XX)を削除
    ip route add XX dev YY  : デバイス(YY)にルート(XX)を追加
    ip route del XX dev YY  : デバイス(YY)のルート(XX)を削除
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  //
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ip neigh show -> ARPキャッシュ
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ip -s neigh show -> ARPキャッシュの詳細情報
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ip link show -> データリンク層
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ip -s link show -> データリンク層の詳細情報
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ip -f inet addr show -> IPv4のみ、IPアドレスの情報
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ip -s -f inet addr show -> IPv4のみ、IPアドレスの詳細情報
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo ip addr add 192.168.122.21/24 dev eth0:0 -> デバイスに仮想IPアドレスを付与
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ip -f inet addr show
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo ip addr del 192.168.122.21/24 dev eth0:0 -> 仮想IPアドレスを削除
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ip route show -> ルーティングテーブル
    
    コマンドの実行結果
    --------------------------------------------------
    default via 192.168.122.1 dev eth0 proto static metric 100 
    192.168.122.0/24 dev eth0 proto kernel scope link src 192.168.122.11 metric 100 
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ip -s route show -> ルーティングテーブルの詳細情報
    
    コマンドの実行結果
    --------------------------------------------------
    default via 192.168.122.1 dev eth0 proto static metric 100 
    192.168.122.0/24 dev eth0 proto kernel scope link src 192.168.122.11 metric 100 
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo ip route add 192.168.122.21/32 via 192.168.122.1 dev eth0 -> ルート情報を追加
    vm11$ sudo ip route add 192.168.122.31/32 via 192.168.122.1 dev eth0 -> ルート情報を追加
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ip route show
    
    コマンドの実行結果
    --------------------------------------------------
    default via 192.168.122.1 dev eth0 proto static metric 100 
    192.168.122.0/24 dev eth0 proto kernel scope link src 192.168.122.11 metric 100 
    192.168.122.21 via 192.168.122.1 dev eth0 -> 追加ルート
    192.168.122.31 via 192.168.122.1 dev eth0 -> 追加ルート
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo ip route del 192.168.122.21/32 via 192.168.122.1 dev eth0 -> ルート情報を削除
    vm11$ sudo ip route del 192.168.122.31/32 via 192.168.122.1 dev eth0 -> ルート情報を削除
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[014]
  ルーティングの設定
  
[内容]
  ## 作業内容
    ルーティングテーブルをコマンド(route)で管理する
  
  ## コマンド(route)
    route -n                              : 名前解決しない
    route -F                              : ルーティングテーブル表示
    route -C                              : ルーティングキャッシュ表示
    route add -host XX dev ZZ             : ホスト(XX)へはデバイス(ZZ)へ送出というルート情報を追加
    route del -host XX dev ZZ             : ホスト(XX)へはデバイス(ZZ)へ送出というルート情報を削除
    route add -net XX  netmask YY dev ZZ  : ネットワーク(XX)へはデバイス(ZZ)へ送出というルート情報を追加
    route del -net XX  netmask YY dev ZZ  : ネットワーク(XX)へはデバイス(ZZ)へ送出というルート情報を削除
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  //
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ route -> ルーティングテーブル
    
    コマンドの実行結果
    --------------------------------------------------
    Kernel IP routing table
    Destination     Gateway   Genmask         Flags   Metric   Ref   Use   Iface
    default         gateway   0.0.0.0         UG      100      0     0     eth0
    192.168.122.0   0.0.0.0   255.255.255.0   U       100      0     0     eth0
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo route add -host 192.168.122.21 dev eth0 -> ルート情報を追加
    vm11$ sudo route add -host 192.168.122.31 dev eth0 -> ルート情報を追加
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ route
    
    コマンドの実行結果
    --------------------------------------------------
    Kernel IP routing table
    Destination     Gateway   Genmask           Flags   Metric   Ref   Use   Iface
    default         gateway   0.0.0.0           UG      100      0     0     eth0
    192.168.122.0   0.0.0.0   255.255.255.0     U       100      0     0     eth0
    192.168.122.21  0.0.0.0   255.255.255.255   UH      0        0     0     eth0
    192.168.122.31  0.0.0.0   255.255.255.255   UH      0        0     0     eth0
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo route del -host 192.168.122.21 dev eth0 -> ルート情報を削除
    vm11$ sudo route del -host 192.168.122.31 dev eth0 -> ルート情報を削除
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ route
    
    コマンドの実行結果
    --------------------------------------------------
    Kernel IP routing table
    Destination     Gateway   Genmask         Flags   Metric   Ref   Use   Iface
    default         gateway   0.0.0.0         UG      100      0     0     eth0
    192.168.122.0   0.0.0.0   255.255.255.0   U       100      0     0     eth0
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo route add -net 192.168.130.0 netmask 255.255.255.0 dev eth0 -> ルート情報を追加
    vm11$ sudo route add -net 192.168.140.0 netmask 255.255.255.0 dev eth0 -> ルート情報を追加
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ route
    
    コマンドの実行結果
    --------------------------------------------------
    Kernel IP routing table
    Destination     Gateway   Genmask         Flags   Metric   Ref   Use   Iface
    default         gateway   0.0.0.0         UG      100      0     0     eth0
    192.168.122.0   0.0.0.0   255.255.255.0   U       100      0     0     eth0
    192.168.130.0   0.0.0.0   255.255.255.0   U       0        0     0     eth0
    192.168.140.0   0.0.0.0   255.255.255.0   U       0        0     0     eth0
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo route del -net 192.168.130.0 netmask 255.255.255.0 dev eth0 -> ルート情報を削除
    vm11$ sudo route del -net 192.168.140.0 netmask 255.255.255.0 dev eth0 -> ルート情報を削除
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ route
    
    コマンドの実行結果
    --------------------------------------------------
    Kernel IP routing table
    Destination     Gateway   Genmask         Flags   Metric   Ref   Use   Iface
    default         gateway   0.0.0.0         UG      100      0     0     eth0
    192.168.122.0   0.0.0.0   255.255.255.0   U       100      0     0     eth0
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[015]
  無線ネットワークの設定
  
[内容]
  ## 作業内容
    システムのLANケーブルを外し、無線LAN接続を行う
  
  ## アクセスポイント(家庭用ルーター)
    IPV4  : 192.168.1.1
    SSID1 : pr400n-43f0db-1 
    SSID2 : pr400n-43f0db-2
  
[確認]
  $ cd $HOME
  $ dmesg | grep wlp -> 無線LANネットワークデバイス
  
  コマンドの実行結果
  --------------------------------------------------
  [    6.813871] iwlwifi 0000:03:00.0 wlp3s0: renamed from wlan0 -> PCIデバイス「03:00.0」がデバイス「wlp3s0」
  [    8.914444] IPv6: ADDRCONF(NETDEV_UP): wlp3s0: link is not ready
  --------------------------------------------------
  
  $ cd $HOME
  $ dmesg | grep wlo -> 無線LANネットワークデバイス
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  $ cd $HOME
  $ lspci -s 03:00.0 -> 無線LANネットワークデバイス
  
  コマンドの実行結果
  --------------------------------------------------
  03:00.0 Network controller: Intel Corporation Centrino Advanced-N + WiMAX 6250 [Kilmer Peak] (rev 5e)
  --------------------------------------------------
  
  $ cd $HOME
  $ lspci -vv -s 03:00.0 -> 無線LANネットワークデバイスの詳細情報
  
  コマンドの実行結果
  --------------------------------------------------
  03:00.0 Network controller: Intel Corporation Centrino Advanced-N + WiMAX 6250 [Kilmer Peak] (rev 5e)
	  Subsystem: Intel Corporation Centrino Advanced-N + WiMAX 6250 2x2 AGN
	  Control: I/O- Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx+
	  Status: Cap+ 66MHz- UDF- FastB2B- ParErr- DEVSEL=fast >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
	  Latency: 0, Cache Line Size: 64 bytes
	  Interrupt: pin A routed to IRQ 39
	  Region 0: Memory at f7900000 (64-bit, non-prefetchable) [size=8K]
	  Capabilities: <access denied>
	  Kernel driver in use: iwlwifi
	  Kernel modules: iwlwifi
  --------------------------------------------------
  
  $ cd $HOME
  $ lw dev -> 無線LANネットワークデバイス
  
  コマンドの実行結果
  --------------------------------------------------
  phy#0
    Interface wlp3s0 -> ネットワークデバイス名
      ifindex 3
      wdev 0x1
      addr b6:fd:fd:76:29:2d -> MACアドレス
      type managed
      txpower 0.00 dBm
  --------------------------------------------------
  
  $ cd $HOME
  $ nmcli device | grep wifi -> 無線LANネットワークデバイス

  コマンドの実行結果
  --------------------------------------------------
  DEVICE      TYPE      STATE          CONNECTION
  wlp3s0      wifi      利用不可       --
  --------------------------------------------------
  
  $ cd $HOME
  $ nmcli radio wifi on -> WIFI機能を有効化
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  $ cd $HOME
  $ nmcli device | grep wifi
  
  コマンドの実行結果
  --------------------------------------------------
  DEVICE          TYPE      STATE     CONNECTION
  wlp3s0          wifi      切断済み  --          // 状態が利用不可から切断済みに変化
  --------------------------------------------------
  
  $ cd $HOME
  $ nmcli device wifi list | grep pr400n-43f0db -> アクセスポイントのSSIDを検索
  
  コマンドの実行結果
  --------------------------------------------------
  IN-USE  BSSID              SSID             MODE      CHAN  RATE        SIGNAL  BARS      SECURITY  
          10:66:82:FA:02:F4  pr400n-43f0db-1  インフラ  13    130 Mbit/s  100     ▂▄▆█  WPA1 WPA2 -> こちらを使用
          12:66:82:FA:02:F4  pr400n-43f0db-2  インフラ  13    54 Mbit/s   100     ▂▄▆█  WEP       -> 脆弱性あり
  --------------------------------------------------
  
  $ cd $HOME
  $ nmcli --ask device wifi connect pr400n-43f0db-1 -> アクセスポイントにログイン
  
  コマンドの実行結果
  --------------------------------------------------
  パスワード: •••••••••••••
  デバイス 'wlp3s0' が 'e4ee0545-4882-479e-9a96-34165cdf4108' で正常にアクティベートされました。
  --------------------------------------------------
  
  $ cd $HOME
  $ nmcli device | grep wifi
  
  コマンドの実行結果
  --------------------------------------------------
  DEVICE          TYPE      STATE     CONNECTION
  wlp3s0          wifi      接続済み  pr400n-43f0db-1 (アクセスポイントに接続済み)
  --------------------------------------------------
  
  $ cd $HOME
  $ ping -c 3 192.168.1.1 -> アクセスポイントに導通テスト
  
  コマンドの実行結果
  --------------------------------------------------
  PING 192.168.1.1 (192.168.1.1) 56(84) bytes of data.
  64 bytes from 192.168.1.1: icmp_seq=1 ttl=255 time=3.06 ms
  64 bytes from 192.168.1.1: icmp_seq=2 ttl=255 time=8.41 ms
  64 bytes from 192.168.1.1: icmp_seq=3 ttl=255 time=21.2 ms
  
  --- 192.168.1.1 ping statistics ---
  3 packets transmitted, 3 received, 0% packet loss, time 2002ms
  rtt min/avg/max/mdev = 3.057/10.886/21.194/7.609 ms
  --------------------------------------------------
  
  $ cd $HOME
  $ ping -c 3 www.yahoo.co.jp -> インターネットに導通テスト
  
  コマンドの実行結果
  --------------------------------------------------
  PING edge12.g.yimg.jp (183.79.250.251) 56(84) bytes of data.
  64 bytes from 183.79.250.251 (183.79.250.251): icmp_seq=1 ttl=52 time=19.1 ms
  64 bytes from 183.79.250.251 (183.79.250.251): icmp_seq=2 ttl=52 time=19.3 ms
  64 bytes from 183.79.250.251 (183.79.250.251): icmp_seq=3 ttl=52 time=20.5 ms
  
  --- edge12.g.yimg.jp ping statistics ---
  3 packets transmitted, 3 received, 0% packet loss, time 2002ms
  rtt min/avg/max/mdev = 19.145/19.643/20.535/0.652 ms
  --------------------------------------------------
  
  $ cd $HOME
  $ nmcli connection down pr400n-43f0db-1 -> アクセスポイントからログアウト
  
  コマンドの実行結果
  --------------------------------------------------
  接続 'pr400n-43f0db-1' が正常に非アクティブ化されました
  (D-Bus アクティブパス: /org/freedesktop/NetworkManager/ActiveConnection/2)
  --------------------------------------------------
  
  $ cd $HOME
  $ nmcli radio wifi off -> WIFI機能を無効化
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================

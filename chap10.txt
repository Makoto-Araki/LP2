================================================================================
[01] ソースから構築 - 01 (APR)
[02] ソースから構築 - 02 (APR-Util)
[03] ソースから構築 - 03 (PCRE)
[04] ソースから構築 - 04 (OPENSSL)
[05] ソースから構築 - 05 (NGHTTP2)
[06] ソースから構築 - 06 (Apache)
[07] 制御コマンド
[08] 設定ファイル(httpd.conf) - 01 (単独サイト)
[09] 設定ファイル(httpd.conf) - 02 (複数サイト)
[10] 設定ファイル(httpd.conf) - 03 (ルート認証局)
================================================================================
[01]
  ソースから構築 - 01 (APR)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install wget gcc expat-devel (パッケージ追加)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://www.apache.org/dist/apr/apr-1.7.0.tar.gz (ソース取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://www.apache.org/dist/apr/apr-1.7.0.tar.gz.sha256 (チェックサム取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo sha256sum -c apr-1.7.0.tar.gz.sha256 (チェックサム確認)
  
  コマンドの実行結果
  --------------------------------------------------
  apr-1.7.0.tar.gz: 完了
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf apr-1.7.0.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-1.7.0
  vm12$ sudo ./configure --prefix=/usr/local/apr-1.7.0 (Makefile生成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-1.7.0
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-1.7.0
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[02]
  ソースから構築 - 02 (APR-Util)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://dlcdn.apache.org//apr/apr-util-1.6.1.tar.gz (ソース取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://www.apache.org/dist/apr/apr-util-1.6.1.tar.gz.sha256 (チェックサム取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo sha256sum -c apr-util-1.6.1.tar.gz.sha256 (チェックサム確認)
  
  コマンドの実行結果
  --------------------------------------------------
  apr-util-1.6.1.tar.gz: 完了
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf apr-util-1.6.1.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-util-1.6.1
  vm12$ sudo ./configure --prefix=/usr/local/apr-util-1.6.1 --with-apr=/usr/local/apr-1.7.0 (Makefile生成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-util-1.6.1
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-util-1.6.1
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[03]
  ソースから構築 - 03 (PCRE)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install gcc-c++ (パッケージ追加)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src (ソース取得)
  vm12$ sudo wget --no-check-certificate https://sourceforge.net/projects/pcre/files/pcre/8.45/pcre-8.45.tar.gz
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf pcre-8.45.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/pcre-8.45
  vm12$ sudo ./configure --prefix=/usr/local/pcre-8.45 (Makefile生成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/pcre-8.45
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/pcre-8.45
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[04]
  ソースから構築 - 04 (OPENSSL)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install perl (パッケージ追加)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://www.openssl.org/source/openssl-1.1.0h.tar.gz (ソース取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf openssl-1.1.0h.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/openssl-1.1.0h
  vm12$ sudo ./config --openssldir=/usr/local/openssl-1.1.0 (Makefile生成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/openssl-1.1.0h
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/openssl-1.1.0h
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[05]
  ソースから構築 - 05 (NGHTTP2)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd /usr/local/src (ソース取得)
  vm12$ sudo wget --no-check-certificate https://github.com/nghttp2/nghttp2/releases/download/v1.31.0/nghttp2-1.31.0.tar.gz
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf nghttp2-1.31.0.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/nghttp2-1.31.0 (Makefile生成)
  vm12$ sudo env OPENSSL_CFLAGS="-I/usr/local/openssl/include" OPENSSL_LIBS="-L/usr/local/openssl/lib -lssl -lcrypto" ./configure
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/nghttp2-1.31.0
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/nghttp2-1.31.0
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[06]
  ソースから構築 - 06 (Apache)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://dlcdn.apache.org//httpd/httpd-2.4.52.tar.gz (ソース取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://downloads.apache.org/httpd/httpd-2.4.52.tar.gz.sha256 (チェックサム取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo sha256sum -c httpd-2.4.52.tar.gz.sha256 (チェックサム確認)
  
  コマンドの実行結果
  --------------------------------------------------
  httpd-2.4.52.tar.gz: 完了
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf httpd-2.4.52.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/httpd-2.4.52
  vm12$ sudo cat INSTALL (INSTALL確認)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> インストール概要を確認、以降は概要に従い作業する
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/httpd-2.4.52
  vm12$ (Makefile生成)
    sudo ./configure
    --prefix=/usr/local/apache2
    --with-apr=/usr/local/apr-1.7.0            // APR
    --with-apr-util=/usr/local/apr-util-1.6.1  // APR-Util
    --with-pcre=/usr/local/pcre-8.45           // PCRE
    --with-ssl=/usr/local/openssl-1.1.0        // OPENSSL
    --with-mpm=prefork                         // PHP(prefork)
    --enable-http2            // HTTP2
    --enable-ssl              // SSL
    --enable-so               // APXS
    --enable-mods-shared=all  // Dynamic Modules
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/httpd-2.4.52
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/httpd-2.4.52
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo useradd -d /tmp -s /sbin/nologin apache (実行用ユーザー追加)
  
  コマンドの実行結果
  --------------------------------------------------
  useradd: 警告: ホームディレクトリが既に存在します。
  skel ディレクトリからのコピーは行いません。
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo passwd apache (パスワード更新)
  
  コマンドの実行結果
  --------------------------------------------------
  ユーザー apache のパスワードを変更。
  新しいパスワード: (パスワード入力)
  新しいパスワードを再入力してください: (パスワード入力)
  passwd: すべての認証トークンが正しく更新できました。
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo chown -R apache:apache /usr/local/apache2 (所有者とグループの変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo vi /etc/bashrc (シェルの設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  (末尾に追加) -> PATH=$PATH:/usr/local/apache2/bin
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ source /etc/bashrc (シェルの設定ファイルを読み込み)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ which apachectl (コマンドのパス開通を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  /usr/local/apache2/bin/apachectl
  --------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo vi /usr/lib/systemd/system/httpd.service (自動起動のためサービスファイルを作成)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #[Unit]
  #Description=Apache httpd daemon
  #
  #[Service]
  #Type=forking
  #ExecStart=/usr/local/apache2/bin/apachectl -k start
  #
  #[Install]
  #WantedBy=multi-user.target
  #--------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo systemctl daemon-reload (サービスファイルをシステムに通知)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #(省略) -> 出力なし
  #--------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo systemctl enable httpd (サービスの自動起動)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #Created symlink from /etc/systemd/system/multi-user.target.wants/httpd.service to /usr/lib/systemd/system/httpd.service.
  #--------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo systemctl start httpd (サービスの起動)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #(省略) -> 出力なし
  #--------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo systemctl status httpd (サービスの状態)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #● httpd.service - Apache httpd daemon
  #   Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled; vendor preset: disabled)
  #   Active: active (running) since 日 2022-01-16 19:00:28 JST; 45s ago
  #  Process: 3384 ExecStart=/usr/local/apache2/bin/apachectl -k start (code=exited, status=0/SUCCESS)
  # Main PID: 3387 (httpd)
  #   CGroup: /system.slice/httpd.service
  #           ├─3387 /usr/local/apache2/bin/httpd -k start
  #           ├─3388 /usr/local/apache2/bin/httpd -k start
  #           ├─3389 /usr/local/apache2/bin/httpd -k start
  #           ├─3390 /usr/local/apache2/bin/httpd -k start
  #           ├─3391 /usr/local/apache2/bin/httpd -k start
  #           └─3392 /usr/local/apache2/bin/httpd -k start
  #
  #1月 16 19:00:28 vm12 systemd[1]      : Starting Apache httpd daemon...
  #1月 16 19:00:28 vm12 apachectl[3384] : AH00558: httpd: Could not reliably d...e
  #1月 16 19:00:28 vm12 systemd[1]      : Started Apache httpd daemon.
  #Hint: Some lines were ellipsized, use -l to show in full.
  #--------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo systemctl stop httpd (サービスの停止)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #(省略) -> 出力なし
  #--------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[07]
  制御コマンド
  
[内容]
  ## 作業内容
    制御コマンド(apachectl)で「Apache」の制御を行う
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド(apachectl)
    apachectl start       // Apacheを起動する
    apachectl stop        // Apacheを停止する
    apachectl restart     // Apacheを再起動する
    apachectl graceful    // Apacheを安全に再起動する
    apachectl reload      // Apacheの設定ファイルを再読込する
    apachectl configtest  // Apacheの設定ファイルの構文チェック
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 一般ユーザー(makoto)にsudo付与では制御コマンドが失敗するため
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/conf/httpd.conf (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  (修正前) #ServerName www.example.com:80 -> ServerNameが未設定の場合は制御コマンドが失敗するため修正
  (修正後)  ServerName www.example.com:80
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl start (Apacheを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep httpd | grep -v grep (Apacheのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  root      2399  0.0  0.1  70520  1988 ?        Ss   13:37   0:00 /usr/local/apache2/bin/httpd -k start
  daemon    2400  0.0  0.1  70520  1488 ?        S    13:37   0:00 /usr/local/apache2/bin/httpd -k start
  daemon    2401  0.0  0.2  70520  2228 ?        S    13:37   0:00 /usr/local/apache2/bin/httpd -k start
  daemon    2402  0.0  0.1  70520  1488 ?        S    13:37   0:00 /usr/local/apache2/bin/httpd -k start
  daemon    2403  0.0  0.1  70520  1488 ?        S    13:37   0:00 /usr/local/apache2/bin/httpd -k start
  daemon    2404  0.0  0.1  70520  1488 ?        S    13:37   0:00 /usr/local/apache2/bin/httpd -k start
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl localhost:80 (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>It works!</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl stop (Apacheを停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep httpd | grep -v grep (Apacheのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------

  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[08]
  設定ファイル(httpd.conf) - 01 (単独サイト)
  
[内容]
  ## 作業内容
    設定ファイル(httpd.conf)で様々なサイト構築パターンを試してみる
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /usr/local/apache2         // ServerRoot
      | -- /conf
              | -- httpd.conf  // Main-Config
              | -- /extra      // Extra-Config
      | -- /htdocs             // DocumentRoot
              | -- index.html  // HTML
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 一般ユーザー(makoto)にsudo付与では制御コマンドが失敗するため
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf
  vm12# cp -p httpd.conf httpd.conf.org (設定ファイルのバックアップ)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/conf/httpd.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## トップディレクトリ
  ServerRoot "/usr/local/apache2"
  
  ## リスニング対象のポート番号
  Listen 80
  
  ## ロードするモジュール一覧
  LoadModule authn_file_module modules/mod_authn_file.so
  LoadModule authn_core_module modules/mod_authn_core.so
  LoadModule authz_host_module modules/mod_authz_host.so
  LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
  LoadModule authz_user_module modules/mod_authz_user.so
  LoadModule authz_core_module modules/mod_authz_core.so
  LoadModule access_compat_module modules/mod_access_compat.so
  LoadModule auth_basic_module modules/mod_auth_basic.so
  LoadModule reqtimeout_module modules/mod_reqtimeout.so
  LoadModule filter_module modules/mod_filter.so
  LoadModule mime_module modules/mod_mime.so
  LoadModule log_config_module modules/mod_log_config.so
  LoadModule env_module modules/mod_env.so
  LoadModule headers_module modules/mod_headers.so
  LoadModule setenvif_module modules/mod_setenvif.so
  LoadModule version_module modules/mod_version.so
  LoadModule unixd_module modules/mod_unixd.so
  LoadModule status_module modules/mod_status.so
  LoadModule autoindex_module modules/mod_autoindex.so
  LoadModule dir_module modules/mod_dir.so
  LoadModule alias_module modules/mod_alias.so
  
  ## モジュール(unixd-module)のロード時のみ適用
  <IfModule unixd_module>
    User apache   // プロセス実行ユーザー
    Group apache  // プロセス実行グループ
  </IfModule>
  
  ## サーバー管理者のメールアドレス
  ServerAdmin makoto@example.com
  
  ## ホスト名
  ServerName vm12.example.com
  
  ## ディレクトリ(/)に適用
  <Directory />
    AllowOverride none  // 外部設定ファイル(.ht*)の設定変更を無効
    Require all denied  // 全ホストを拒否 -> モジュール(authz_host_module)が必要
  </Directory>
  
  ## ドキュメントルート
  DocumentRoot "/usr/local/apache2/htdocs"
  
  ## ディレクトリ(/usr/local/apache2/htdocs)に適用
  <Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks  // オプション機能 -> Indexes, FollowSymLinks
    AllowOverride None              // 外部設定ファイル(.ht*)の設定変更を無効
    Require all granted             // 全ホストを許可 -> モジュール(authz_host_module)が必要
  </Directory>
  
  ## モジュール(dir-module)のロード時のみ適用
  <IfModule dir_module>
    DirectoryIndex index.html
  </IfModule>
  
  ## ファイル(.ht*)が存在する場合のみ適用
  <Files ".ht*">
    Require all denied
  </Files>
  
  ## エラーログ出力場所(ServerRoot + logs/error_log)
  ErrorLog "logs/error_log"
  
  ## ログレベル
  LogLevel warn
  
  ## モジュール(log_config_module)のロード時のみ適用
  <IfModule log_config_module>
    LogFormat "%h %l %u %t \"%r\" %>s %b" common  // ログフォーマット(common)を定義
    CustomLog "logs/access_log" common            // ログ出力場所(ServerRoot + logs/access_log)
  </IfModule>
  
  ## モジュール(alias_module)のロード時のみ適用
  <IfModule alias_module>
    ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
  </IfModule>
  
  ## ディレクトリ(/usr/local/apache2/cgi-bin)に適用
  <Directory "/usr/local/apache2/cgi-bin">
    AllowOverride None
    Options None
    Require all granted
  </Directory>
  
  ## モジュール(headers_module)のロード時のみ適用
  <IfModule headers_module>
    RequestHeader unset Proxy early
  </IfModule>
  
  ## モジュール(mime_module)のロード時のみ適用
  <IfModule mime_module>
    TypesConfig conf/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
  </IfModule>
  
  ## モジュール(proxy_html_module)のロード時のみ適用
  <IfModule proxy_html_module>
    Include conf/extra/proxy-html.conf
  </IfModule>
  
  ## モジュール(ssl_module)のロード時のみ適用
  <IfModule ssl_module>
    SSLRandomSeed startup builtin
    SSLRandomSeed connect builtin
  </IfModule>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl configtest (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  Syntax OK
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/htdocs/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl start (Apacheを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep httpd | grep -v grep (Apacheのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  root      2497  0.0  0.1  70520  1984 ?        Ss   14:16   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2498  0.0  0.1  70520  1484 ?        S    14:16   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2499  0.0  0.1  70520  1484 ?        S    14:16   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2500  0.0  0.1  70520  1484 ?        S    14:16   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2501  0.0  0.1  70520  1484 ?        S    14:16   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2502  0.0  0.2  70520  2228 ?        S    14:16   0:00 /usr/local/apache2/bin/httpd -k start
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl localhost:80 (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl stop (Apacheを停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep httpd | grep -v grep (Apacheのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[09]
  設定ファイル(httpd.conf) - 02 (複数サイト)
  
[内容]
  ## 作業内容
    設定ファイル(httpd.conf)で様々なサイト構築パターンを試してみる
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /usr/local/apache2
      | -- /conf
              | -- httpd.conf                 // Main-Config
              | -- /extra                     // Extra-Config
                      | -- httpd-vhosts.conf  // VirtualHost
      | -- /htdocs                     // DocumentRoot
              | -- site1               // Site1
                      | -- index.html  // HTML1
              | -- site2               // Site2
                      | -- index.html  // HTML2
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 一般ユーザー(makoto)にsudo付与では制御コマンドが失敗するため
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/conf/httpd.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## トップディレクトリ
  ServerRoot "/usr/local/apache2"
  
  ## リスニング対象のポート番号
  Listen 80
  
  ## ロードするモジュール一覧
  LoadModule authn_file_module modules/mod_authn_file.so
  LoadModule authn_core_module modules/mod_authn_core.so
  LoadModule authz_host_module modules/mod_authz_host.so
  LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
  LoadModule authz_user_module modules/mod_authz_user.so
  LoadModule authz_core_module modules/mod_authz_core.so
  LoadModule access_compat_module modules/mod_access_compat.so
  LoadModule auth_basic_module modules/mod_auth_basic.so
  LoadModule reqtimeout_module modules/mod_reqtimeout.so
  LoadModule filter_module modules/mod_filter.so
  LoadModule mime_module modules/mod_mime.so
  LoadModule log_config_module modules/mod_log_config.so
  LoadModule env_module modules/mod_env.so
  LoadModule headers_module modules/mod_headers.so
  LoadModule setenvif_module modules/mod_setenvif.so
  LoadModule version_module modules/mod_version.so
  LoadModule unixd_module modules/mod_unixd.so
  LoadModule status_module modules/mod_status.so
  LoadModule autoindex_module modules/mod_autoindex.so
  LoadModule dir_module modules/mod_dir.so
  LoadModule alias_module modules/mod_alias.so
  
  ## モジュール(unixd-module)のロード時のみ適用
  <IfModule unixd_module>
    User apache
    Group apache
  </IfModule>
  
  ## サーバー管理者のメールアドレス
  ## ServerAdmin makoto@example.com -> httpd-vhosts.conf に移動
  
  ## ホスト名
  ServerName vm12.example.com
  
  ## ディレクトリ(/)に適用
  <Directory />
    AllowOverride none
    Require all denied
  </Directory>
  
  ## ドキュメントルート
  ## DocumentRoot "/usr/local/apache2/htdocs" -> httpd-vhosts.conf に移動
  
  ## ディレクトリ(/usr/local/apache2/htdocs)に適用
  <Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
  </Directory>
  
  ## モジュール(dir-module)のロード時のみ適用
  <IfModule dir_module>
    DirectoryIndex index.html
  </IfModule>
  
  ## ファイル(.ht*)が存在する場合のみ適用
  <Files ".ht*">
    Require all denied
  </Files>
  
  ## エラーログ出力場所(ServerRoot + logs/error_log)
  ## ErrorLog "logs/error_log" -> httpd-vhosts.conf に移動
  
  ## ログレベル
  LogLevel warn
  
  ## モジュール(log_config_module)のロード時のみ適用
  <IfModule log_config_module>
    LogFormat "%h %l %u %t \"%r\" %>s %b" common
    ## CustomLog "logs/access_log" common -> httpd-vhosts.conf に移動
  </IfModule>
  
  ## モジュール(alias_module)のロード時のみ適用
  <IfModule alias_module>
    ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
  </IfModule>
  
  ## ディレクトリ(/usr/local/apache2/cgi-bin)に適用
  <Directory "/usr/local/apache2/cgi-bin">
    AllowOverride None
    Options None
    Require all granted
  </Directory>
  
  ## モジュール(headers_module)のロード時のみ適用
  <IfModule headers_module>
    RequestHeader unset Proxy early
  </IfModule>
  
  ## モジュール(mime_module)のロード時のみ適用
  <IfModule mime_module>
    TypesConfig conf/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
  </IfModule>
  
  ## モジュール(proxy_html_module)のロード時のみ適用
  <IfModule proxy_html_module>
    Include conf/extra/proxy-html.conf
  </IfModule>
  
  ## モジュール(ssl_module)のロード時のみ適用
  <IfModule ssl_module>
    SSLRandomSeed startup builtin
    SSLRandomSeed connect builtin
  </IfModule>
  
  ## 追加設定ファイル
  IncludeOptional  conf/extra/httpd-vhosts.conf
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf/extra
  vm12# cp -p httpd-vhosts.conf httpd-vhosts.conf.org (設定ファイルのバックアップ)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf/extra
  vm12# vi httpd-vhosts.conf (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  <VirtualHost *:80>
    ServerName site1.example.com
    ServerAdmin site1@example.com
    DocumentRoot "/usr/local/apache2/htdocs/site1"
    CustomLog "logs/site1_access_log" common
    ErrorLog "logs/site1_error_log"
  </VirtualHost>
  
  <VirtualHost *:80>
    ServerName site2.example.com
    ServerAdmin site2@example.com
    DocumentRoot "/usr/local/apache2/htdocs/site2"
    CustomLog "logs/site2_access_log" common
    ErrorLog "logs/site2_error_log"
  </VirtualHost>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/hosts (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
  ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
  192.168.122.11 vm11
  192.168.122.12 vm12 site1.example.com site2.example.com (修正)
  192.168.122.13 vm13
  192.168.122.14 vm14
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/htdocs
  vm12# mkdir site1 site2
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/htdocs
  vm12# echo "<html><body><h1>サイト1</h1></body></html>" > site1/index.html
  vm12# echo "<html><body><h1>サイト2</h1></body></html>" > site2/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl configtest (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  Syntax OK
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl start (Apacheを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep httpd | grep -v grep (Apacheのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  root      2669  0.0  0.2  70520  2072 ?        Ss   16:02   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2670  0.0  0.1  70520  1512 ?        S    16:02   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2671  0.0  0.1  70520  1512 ?        S    16:02   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2672  0.0  0.1  70520  1512 ?        S    16:02   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2673  0.0  0.1  70520  1512 ?        S    16:02   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2674  0.0  0.1  70520  1512 ?        S    16:02   0:00 /usr/local/apache2/bin/httpd -k start
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://site1.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト1</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://site2.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト2</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl stop (Apacheを停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep httpd | grep -v grep (Apacheのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[10]
  設定ファイル(httpd.conf) - 03 (ルート認証局)
  
[内容]
  ## 作業内容
    設定ファイル(httpd.conf)で様々なサイト構築パターンを試してみる
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /opt/pki
      | -- /config
              | -- openssl-RootCA.cnf  // 設定ファイル
      | -- /RootCA
              | -- /certs          // 検証用の証明書
              | -- /crl            // 失効リスト
              | -- /newcerts       // ルート認証局が発行した証明書
              | -- /private        // ルート認証局の秘密鍵
              | -- serial          // シリアル番号
              | -- crlnum          // CRL番号
              | -- index.txt       // ルート認証局の管理データベース
              | -- RootCaReq.pem   // ルート認証局の証明書署名要求
              | -- RootCaCert.pem  // ルート認証局のデジタル証明書
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 一般ユーザー(makoto)にsudo付与では制御コマンドが失敗するため
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/conf/httpd.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## トップディレクトリ
  ServerRoot "/usr/local/apache2"
  
  ## リスニング対象のポート番号
  Listen 80
  
  ## ロードするモジュール一覧
  LoadModule authn_file_module modules/mod_authn_file.so
  LoadModule authn_core_module modules/mod_authn_core.so
  LoadModule authz_host_module modules/mod_authz_host.so
  LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
  LoadModule authz_user_module modules/mod_authz_user.so
  LoadModule authz_core_module modules/mod_authz_core.so
  LoadModule access_compat_module modules/mod_access_compat.so
  LoadModule auth_basic_module modules/mod_auth_basic.so
  LoadModule reqtimeout_module modules/mod_reqtimeout.so
  LoadModule filter_module modules/mod_filter.so
  LoadModule mime_module modules/mod_mime.so
  LoadModule log_config_module modules/mod_log_config.so
  LoadModule env_module modules/mod_env.so
  LoadModule headers_module modules/mod_headers.so
  LoadModule setenvif_module modules/mod_setenvif.so
  LoadModule version_module modules/mod_version.so
  LoadModule unixd_module modules/mod_unixd.so
  LoadModule status_module modules/mod_status.so
  LoadModule autoindex_module modules/mod_autoindex.so
  LoadModule dir_module modules/mod_dir.so
  LoadModule alias_module modules/mod_alias.so
  
  ## モジュール(unixd-module)のロード時のみ適用
  <IfModule unixd_module>
    User apache
    Group apache
  </IfModule>
  
  ## サーバー管理者のメールアドレス
  ## ServerAdmin makoto@example.com -> httpd-vhosts.conf に移動
  
  ## ホスト名
  ServerName vm12.example.com
  
  ## ディレクトリ(/)に適用
  <Directory />
    AllowOverride none
    Require all denied
  </Directory>
  
  ## ドキュメントルート
  ## DocumentRoot "/usr/local/apache2/htdocs" -> httpd-vhosts.conf に移動
  
  ## ディレクトリ(/usr/local/apache2/htdocs)に適用
  <Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
  </Directory>
  
  ## モジュール(dir-module)のロード時のみ適用
  <IfModule dir_module>
    DirectoryIndex index.html
  </IfModule>
  
  ## ファイル(.ht*)が存在する場合のみ適用
  <Files ".ht*">
    Require all denied
  </Files>
  
  ## エラーログ出力場所(ServerRoot + logs/error_log)
  ## ErrorLog "logs/error_log" -> httpd-vhosts.conf に移動
  
  ## ログレベル
  LogLevel warn
  
  ## モジュール(log_config_module)のロード時のみ適用
  <IfModule log_config_module>
    LogFormat "%h %l %u %t \"%r\" %>s %b" common
    ## CustomLog "logs/access_log" common -> httpd-vhosts.conf に移動
  </IfModule>
  
  ## モジュール(alias_module)のロード時のみ適用
  <IfModule alias_module>
    ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
  </IfModule>
  
  ## ディレクトリ(/usr/local/apache2/cgi-bin)に適用
  <Directory "/usr/local/apache2/cgi-bin">
    AllowOverride None
    Options None
    Require all granted
  </Directory>
  
  ## モジュール(headers_module)のロード時のみ適用
  <IfModule headers_module>
    RequestHeader unset Proxy early
  </IfModule>
  
  ## モジュール(mime_module)のロード時のみ適用
  <IfModule mime_module>
    TypesConfig conf/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
  </IfModule>
  
  ## モジュール(proxy_html_module)のロード時のみ適用
  <IfModule proxy_html_module>
    Include conf/extra/proxy-html.conf
  </IfModule>
  
  ## モジュール(ssl_module)のロード時のみ適用
  <IfModule ssl_module>
    SSLRandomSeed startup builtin
    SSLRandomSeed connect builtin
  </IfModule>
  
  ## 追加設定ファイル
  IncludeOptional  conf/extra/httpd-vhosts.conf
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf/extra
  vm12# cp -p httpd-vhosts.conf httpd-vhosts.conf.org (設定ファイルのバックアップ)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf/extra
  vm12# vi httpd-vhosts.conf (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  <VirtualHost *:80>
    ServerName site1.example.com
    ServerAdmin site1@example.com
    DocumentRoot "/usr/local/apache2/htdocs/site1"
    CustomLog "logs/site1_access_log" common
    ErrorLog "logs/site1_error_log"
  </VirtualHost>
  
  <VirtualHost *:80>
    ServerName site2.example.com
    ServerAdmin site2@example.com
    DocumentRoot "/usr/local/apache2/htdocs/site2"
    CustomLog "logs/site2_access_log" common
    ErrorLog "logs/site2_error_log"
  </VirtualHost>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/hosts (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
  ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
  192.168.122.11 vm11
  192.168.122.12 vm12 site1.example.com site2.example.com (修正)
  192.168.122.13 vm13
  192.168.122.14 vm14
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/htdocs
  vm12# mkdir site1 site2
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/htdocs
  vm12# echo "<html><body><h1>サイト1</h1></body></html>" > site1/index.html
  vm12# echo "<html><body><h1>サイト2</h1></body></html>" > site2/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl configtest (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  Syntax OK
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl start (Apacheを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep httpd | grep -v grep (Apacheのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  root      2669  0.0  0.2  70520  2072 ?        Ss   16:02   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2670  0.0  0.1  70520  1512 ?        S    16:02   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2671  0.0  0.1  70520  1512 ?        S    16:02   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2672  0.0  0.1  70520  1512 ?        S    16:02   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2673  0.0  0.1  70520  1512 ?        S    16:02   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2674  0.0  0.1  70520  1512 ?        S    16:02   0:00 /usr/local/apache2/bin/httpd -k start
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://site1.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト1</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://site2.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト2</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl stop (Apacheを停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep httpd | grep -v grep (Apacheのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================

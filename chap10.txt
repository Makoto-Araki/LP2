================================================================================
[01] ソースから構築 - 01 (APR)
[02] ソースから構築 - 02 (APR-Util)
[03] ソースから構築 - 03 (PCRE)
[04] ソースから構築 - 04 (OPENSSL)
[05] ソースから構築 - 05 (NGHTTP2)
[06] ソースから構築 - 06 (Apache)
[07] 制御コマンド
[08] 設定ファイル(httpd.conf) - 01 (単独サイト)
[09] 設定ファイル(httpd.conf) - 02 (複数サイト)
[10] 設定ファイル(httpd.conf) - 03 (ルート認証局)
[11] //
================================================================================
[01]
  ソースから構築 - 01 (APR)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install wget gcc expat-devel (パッケージ追加)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://www.apache.org/dist/apr/apr-1.7.0.tar.gz (ソース取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://www.apache.org/dist/apr/apr-1.7.0.tar.gz.sha256 (チェックサム取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo sha256sum -c apr-1.7.0.tar.gz.sha256 (チェックサム確認)
  
  コマンドの実行結果
  --------------------------------------------------
  apr-1.7.0.tar.gz: 完了
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf apr-1.7.0.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-1.7.0
  vm12$ sudo ./configure --prefix=/usr/local/apr-1.7.0 (Makefile生成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-1.7.0
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-1.7.0
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[02]
  ソースから構築 - 02 (APR-Util)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://dlcdn.apache.org//apr/apr-util-1.6.1.tar.gz (ソース取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://www.apache.org/dist/apr/apr-util-1.6.1.tar.gz.sha256 (チェックサム取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo sha256sum -c apr-util-1.6.1.tar.gz.sha256 (チェックサム確認)
  
  コマンドの実行結果
  --------------------------------------------------
  apr-util-1.6.1.tar.gz: 完了
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf apr-util-1.6.1.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-util-1.6.1
  vm12$ sudo ./configure --prefix=/usr/local/apr-util-1.6.1 --with-apr=/usr/local/apr-1.7.0 (Makefile生成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-util-1.6.1
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-util-1.6.1
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[03]
  ソースから構築 - 03 (PCRE)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install gcc-c++ (パッケージ追加)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src (ソース取得)
  vm12$ sudo wget --no-check-certificate https://sourceforge.net/projects/pcre/files/pcre/8.45/pcre-8.45.tar.gz
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf pcre-8.45.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/pcre-8.45
  vm12$ sudo ./configure --prefix=/usr/local/pcre-8.45 (Makefile生成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/pcre-8.45
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/pcre-8.45
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[04]
  ソースから構築 - 04 (OPENSSL)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install perl (パッケージ追加)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://www.openssl.org/source/openssl-1.1.0h.tar.gz (ソース取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf openssl-1.1.0h.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/openssl-1.1.0h
  vm12$ sudo ./config --openssldir=/usr/local/openssl-1.1.0 (Makefile生成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/openssl-1.1.0h
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/openssl-1.1.0h
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[05]
  ソースから構築 - 05 (NGHTTP2)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd /usr/local/src (ソース取得)
  vm12$ sudo wget --no-check-certificate https://github.com/nghttp2/nghttp2/releases/download/v1.31.0/nghttp2-1.31.0.tar.gz
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf nghttp2-1.31.0.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/nghttp2-1.31.0 (Makefile生成)
  vm12$ sudo env OPENSSL_CFLAGS="-I/usr/local/openssl/include" OPENSSL_LIBS="-L/usr/local/openssl/lib -lssl -lcrypto" ./configure
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/nghttp2-1.31.0
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/nghttp2-1.31.0
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[06]
  ソースから構築 - 06 (Apache)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://dlcdn.apache.org//httpd/httpd-2.4.52.tar.gz (ソース取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://downloads.apache.org/httpd/httpd-2.4.52.tar.gz.sha256 (チェックサム取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo sha256sum -c httpd-2.4.52.tar.gz.sha256 (チェックサム確認)
  
  コマンドの実行結果
  --------------------------------------------------
  httpd-2.4.52.tar.gz: 完了
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf httpd-2.4.52.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/httpd-2.4.52
  vm12$ sudo cat INSTALL (INSTALL確認)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> インストール概要を確認、以降は概要に従い作業する
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/httpd-2.4.52
  vm12$ (Makefile生成)
    sudo ./configure
    --prefix=/usr/local/apache2
    --with-apr=/usr/local/apr-1.7.0            // APR
    --with-apr-util=/usr/local/apr-util-1.6.1  // APR-Util
    --with-pcre=/usr/local/pcre-8.45           // PCRE
    --with-ssl=/usr/local/openssl-1.1.0        // OPENSSL
    --with-mpm=prefork                         // PHP(prefork)
    --enable-http2            // HTTP2
    --enable-ssl              // SSL
    --enable-so               // APXS
    --enable-mods-shared=all  // Dynamic Modules
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/httpd-2.4.52
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/httpd-2.4.52
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo useradd -d /tmp -s /sbin/nologin apache (実行用ユーザー追加)
  
  コマンドの実行結果
  --------------------------------------------------
  useradd: 警告: ホームディレクトリが既に存在します。
  skel ディレクトリからのコピーは行いません。
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo passwd apache (パスワード更新)
  
  コマンドの実行結果
  --------------------------------------------------
  ユーザー apache のパスワードを変更。
  新しいパスワード: (パスワード入力)
  新しいパスワードを再入力してください: (パスワード入力)
  passwd: すべての認証トークンが正しく更新できました。
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo chown -R apache:apache /usr/local/apache2 (所有者とグループの変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo vi /etc/bashrc (シェルの設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  (末尾に追加) -> PATH=$PATH:/usr/local/apache2/bin
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ source /etc/bashrc (シェルの設定ファイルを読み込み)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ which apachectl (コマンドのパス開通を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  /usr/local/apache2/bin/apachectl
  --------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo vi /usr/lib/systemd/system/httpd.service (自動起動のためサービスファイルを作成)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #[Unit]
  #Description=Apache httpd daemon
  #
  #[Service]
  #Type=forking
  #ExecStart=/usr/local/apache2/bin/apachectl -k start
  #
  #[Install]
  #WantedBy=multi-user.target
  #--------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo systemctl daemon-reload (サービスファイルをシステムに通知)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #(省略) -> 出力なし
  #--------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo systemctl enable httpd (サービスの自動起動)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #Created symlink from /etc/systemd/system/multi-user.target.wants/httpd.service to /usr/lib/systemd/system/httpd.service.
  #--------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo systemctl start httpd (サービスの起動)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #(省略) -> 出力なし
  #--------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo systemctl status httpd (サービスの状態)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #● httpd.service - Apache httpd daemon
  #   Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled; vendor preset: disabled)
  #   Active: active (running) since 日 2022-01-16 19:00:28 JST; 45s ago
  #  Process: 3384 ExecStart=/usr/local/apache2/bin/apachectl -k start (code=exited, status=0/SUCCESS)
  # Main PID: 3387 (httpd)
  #   CGroup: /system.slice/httpd.service
  #           ├─3387 /usr/local/apache2/bin/httpd -k start
  #           ├─3388 /usr/local/apache2/bin/httpd -k start
  #           ├─3389 /usr/local/apache2/bin/httpd -k start
  #           ├─3390 /usr/local/apache2/bin/httpd -k start
  #           ├─3391 /usr/local/apache2/bin/httpd -k start
  #           └─3392 /usr/local/apache2/bin/httpd -k start
  #
  #1月 16 19:00:28 vm12 systemd[1]      : Starting Apache httpd daemon...
  #1月 16 19:00:28 vm12 apachectl[3384] : AH00558: httpd: Could not reliably d...e
  #1月 16 19:00:28 vm12 systemd[1]      : Started Apache httpd daemon.
  #Hint: Some lines were ellipsized, use -l to show in full.
  #--------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo systemctl stop httpd (サービスの停止)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #(省略) -> 出力なし
  #--------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[07]
  制御コマンド
  
[内容]
  ## 作業内容
    制御コマンド(apachectl)で「Apache」の制御を行う
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド(apachectl)
    apachectl start       // Apacheを起動する
    apachectl stop        // Apacheを停止する
    apachectl restart     // Apacheを再起動する
    apachectl graceful    // Apacheを安全に再起動する
    apachectl reload      // Apacheの設定ファイルを再読込する
    apachectl configtest  // Apacheの設定ファイルの構文チェック
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 一般ユーザー(makoto)にsudo付与では制御コマンドが失敗するため
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/conf/httpd.conf (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  (修正前) #ServerName www.example.com:80 -> ServerNameが未設定の場合は制御コマンドが失敗するため修正
  (修正後)  ServerName www.example.com:80
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl start (Apacheを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep httpd | grep -v grep (Apacheのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  root      2399  0.0  0.1  70520  1988 ?        Ss   13:37   0:00 /usr/local/apache2/bin/httpd -k start
  daemon    2400  0.0  0.1  70520  1488 ?        S    13:37   0:00 /usr/local/apache2/bin/httpd -k start
  daemon    2401  0.0  0.2  70520  2228 ?        S    13:37   0:00 /usr/local/apache2/bin/httpd -k start
  daemon    2402  0.0  0.1  70520  1488 ?        S    13:37   0:00 /usr/local/apache2/bin/httpd -k start
  daemon    2403  0.0  0.1  70520  1488 ?        S    13:37   0:00 /usr/local/apache2/bin/httpd -k start
  daemon    2404  0.0  0.1  70520  1488 ?        S    13:37   0:00 /usr/local/apache2/bin/httpd -k start
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl localhost:80 (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>It works!</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl stop (Apacheを停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep httpd | grep -v grep (Apacheのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------

  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[08]
  設定ファイル(httpd.conf) - 01 (単独サイト)
  
[内容]
  ## 作業内容
    設定ファイル(httpd.conf)で様々なサイト構築パターンを試してみる
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /usr/local/apache2         // ServerRoot
      | -- /conf
              | -- httpd.conf  // Main-Config
              | -- /extra      // Extra-Config
      | -- /htdocs             // DocumentRoot
              | -- index.html  // HTML
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 一般ユーザー(makoto)にsudo付与では制御コマンドが失敗するため
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf
  vm12# cp -p httpd.conf httpd.conf.org (設定ファイルのバックアップ)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/conf/httpd.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## トップディレクトリ
  ServerRoot "/usr/local/apache2"
  
  ## リスニング対象のポート番号
  Listen 80
  
  ## ロードするモジュール一覧
  LoadModule authn_file_module modules/mod_authn_file.so
  LoadModule authn_core_module modules/mod_authn_core.so
  LoadModule authz_host_module modules/mod_authz_host.so
  LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
  LoadModule authz_user_module modules/mod_authz_user.so
  LoadModule authz_core_module modules/mod_authz_core.so
  LoadModule access_compat_module modules/mod_access_compat.so
  LoadModule auth_basic_module modules/mod_auth_basic.so
  LoadModule reqtimeout_module modules/mod_reqtimeout.so
  LoadModule filter_module modules/mod_filter.so
  LoadModule mime_module modules/mod_mime.so
  LoadModule log_config_module modules/mod_log_config.so
  LoadModule env_module modules/mod_env.so
  LoadModule headers_module modules/mod_headers.so
  LoadModule setenvif_module modules/mod_setenvif.so
  LoadModule version_module modules/mod_version.so
  LoadModule unixd_module modules/mod_unixd.so
  LoadModule status_module modules/mod_status.so
  LoadModule autoindex_module modules/mod_autoindex.so
  LoadModule dir_module modules/mod_dir.so
  LoadModule alias_module modules/mod_alias.so
  
  ## モジュール(unixd-module)のロード時のみ適用
  <IfModule unixd_module>
    User apache   // プロセス実行ユーザー
    Group apache  // プロセス実行グループ
  </IfModule>
  
  ## サーバー管理者のメールアドレス
  ServerAdmin makoto@example.com
  
  ## ホスト名
  ServerName vm12.example.com
  
  ## ディレクトリ(/)に適用
  <Directory />
    AllowOverride none  // 外部設定ファイル(.ht*)の設定変更を無効
    Require all denied  // 全ホストを拒否 -> モジュール(authz_host_module)が必要
  </Directory>
  
  ## ドキュメントルート
  DocumentRoot "/usr/local/apache2/htdocs"
  
  ## ディレクトリ(/usr/local/apache2/htdocs)に適用
  <Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks  // オプション機能 -> Indexes, FollowSymLinks
    AllowOverride None              // 外部設定ファイル(.ht*)の設定変更を無効
    Require all granted             // 全ホストを許可 -> モジュール(authz_host_module)が必要
  </Directory>
  
  ## モジュール(dir-module)のロード時のみ適用
  <IfModule dir_module>
    DirectoryIndex index.html
  </IfModule>
  
  ## ファイル(.ht*)が存在する場合のみ適用
  <Files ".ht*">
    Require all denied
  </Files>
  
  ## エラーログ出力場所(ServerRoot + logs/error_log)
  ErrorLog "logs/error_log"
  
  ## ログレベル
  LogLevel warn
  
  ## モジュール(log_config_module)のロード時のみ適用
  <IfModule log_config_module>
    LogFormat "%h %l %u %t \"%r\" %>s %b" common  // ログフォーマット(common)を定義
    CustomLog "logs/access_log" common            // ログ出力場所(ServerRoot + logs/access_log)
  </IfModule>
  
  ## モジュール(alias_module)のロード時のみ適用
  <IfModule alias_module>
    ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
  </IfModule>
  
  ## ディレクトリ(/usr/local/apache2/cgi-bin)に適用
  <Directory "/usr/local/apache2/cgi-bin">
    AllowOverride None
    Options None
    Require all granted
  </Directory>
  
  ## モジュール(headers_module)のロード時のみ適用
  <IfModule headers_module>
    RequestHeader unset Proxy early
  </IfModule>
  
  ## モジュール(mime_module)のロード時のみ適用
  <IfModule mime_module>
    TypesConfig conf/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
  </IfModule>
  
  ## モジュール(proxy_html_module)のロード時のみ適用
  <IfModule proxy_html_module>
    Include conf/extra/proxy-html.conf
  </IfModule>
  
  ## モジュール(ssl_module)のロード時のみ適用
  <IfModule ssl_module>
    SSLRandomSeed startup builtin
    SSLRandomSeed connect builtin
  </IfModule>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl configtest (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  Syntax OK
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/htdocs/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl start (Apacheを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep httpd | grep -v grep (Apacheのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  root      2497  0.0  0.1  70520  1984 ?        Ss   14:16   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2498  0.0  0.1  70520  1484 ?        S    14:16   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2499  0.0  0.1  70520  1484 ?        S    14:16   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2500  0.0  0.1  70520  1484 ?        S    14:16   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2501  0.0  0.1  70520  1484 ?        S    14:16   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2502  0.0  0.2  70520  2228 ?        S    14:16   0:00 /usr/local/apache2/bin/httpd -k start
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://localhost:80 (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl stop (Apacheを停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep httpd | grep -v grep (Apacheのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[09]
  設定ファイル(httpd.conf) - 02 (複数サイト)
  
[内容]
  ## 作業内容
    設定ファイル(httpd.conf)で様々なサイト構築パターンを試してみる
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /usr/local/apache2
      | -- /conf
              | -- httpd.conf                 // Main-Config
              | -- /extra                     // Extra-Config
                      | -- httpd-vhosts.conf  // VirtualHost
      | -- /htdocs
              | -- site1               // DocumentRoot1
                      | -- index.html  // HTML1
              | -- site2               // DocumentRoot2
                      | -- index.html  // HTML2
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 一般ユーザー(makoto)にsudo付与では制御コマンドが失敗するため
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/conf/httpd.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## トップディレクトリ
  ServerRoot "/usr/local/apache2"
  
  ## リスニング対象のポート番号
  Listen 80
  
  ## ロードするモジュール一覧
  LoadModule authn_file_module modules/mod_authn_file.so
  LoadModule authn_core_module modules/mod_authn_core.so
  LoadModule authz_host_module modules/mod_authz_host.so
  LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
  LoadModule authz_user_module modules/mod_authz_user.so
  LoadModule authz_core_module modules/mod_authz_core.so
  LoadModule access_compat_module modules/mod_access_compat.so
  LoadModule auth_basic_module modules/mod_auth_basic.so
  LoadModule reqtimeout_module modules/mod_reqtimeout.so
  LoadModule filter_module modules/mod_filter.so
  LoadModule mime_module modules/mod_mime.so
  LoadModule log_config_module modules/mod_log_config.so
  LoadModule env_module modules/mod_env.so
  LoadModule headers_module modules/mod_headers.so
  LoadModule setenvif_module modules/mod_setenvif.so
  LoadModule version_module modules/mod_version.so
  LoadModule unixd_module modules/mod_unixd.so
  LoadModule status_module modules/mod_status.so
  LoadModule autoindex_module modules/mod_autoindex.so
  LoadModule dir_module modules/mod_dir.so
  LoadModule alias_module modules/mod_alias.so
  
  ## モジュール(unixd-module)のロード時のみ適用
  <IfModule unixd_module>
    User apache
    Group apache
  </IfModule>
  
  ## サーバー管理者のメールアドレス
  ## ServerAdmin makoto@example.com -> httpd-vhosts.conf に移動
  
  ## ホスト名
  ServerName vm12.example.com
  
  ## ディレクトリ(/)に適用
  <Directory />
    AllowOverride none
    Require all denied
  </Directory>
  
  ## ドキュメントルート
  ## DocumentRoot "/usr/local/apache2/htdocs" -> httpd-vhosts.conf に移動
  
  ## ディレクトリ(/usr/local/apache2/htdocs)に適用
  <Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
  </Directory>
  
  ## モジュール(dir-module)のロード時のみ適用
  <IfModule dir_module>
    DirectoryIndex index.html
  </IfModule>
  
  ## ファイル(.ht*)が存在する場合のみ適用
  <Files ".ht*">
    Require all denied
  </Files>
  
  ## エラーログ出力場所(ServerRoot + logs/error_log)
  ## ErrorLog "logs/error_log" -> httpd-vhosts.conf に移動
  
  ## ログレベル
  LogLevel warn
  
  ## モジュール(log_config_module)のロード時のみ適用
  <IfModule log_config_module>
    LogFormat "%h %l %u %t \"%r\" %>s %b" common
    ## CustomLog "logs/access_log" common -> httpd-vhosts.conf に移動
  </IfModule>
  
  ## モジュール(alias_module)のロード時のみ適用
  <IfModule alias_module>
    ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
  </IfModule>
  
  ## ディレクトリ(/usr/local/apache2/cgi-bin)に適用
  <Directory "/usr/local/apache2/cgi-bin">
    AllowOverride None
    Options None
    Require all granted
  </Directory>
  
  ## モジュール(headers_module)のロード時のみ適用
  <IfModule headers_module>
    RequestHeader unset Proxy early
  </IfModule>
  
  ## モジュール(mime_module)のロード時のみ適用
  <IfModule mime_module>
    TypesConfig conf/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
  </IfModule>
  
  ## モジュール(proxy_html_module)のロード時のみ適用
  <IfModule proxy_html_module>
    Include conf/extra/proxy-html.conf
  </IfModule>
  
  ## モジュール(ssl_module)のロード時のみ適用
  <IfModule ssl_module>
    SSLRandomSeed startup builtin
    SSLRandomSeed connect builtin
  </IfModule>
  
  ## 追加設定ファイル
  IncludeOptional  conf/extra/httpd-vhosts.conf
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf/extra
  vm12# cp -p httpd-vhosts.conf httpd-vhosts.conf.org (設定ファイルのバックアップ)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf/extra
  vm12# vi httpd-vhosts.conf (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  <VirtualHost *:80>
    ServerName site1.example.com
    ServerAdmin site1@example.com
    DocumentRoot "/usr/local/apache2/htdocs/site1"
    CustomLog "logs/site1_access_log" common
    ErrorLog "logs/site1_error_log"
  </VirtualHost>
  
  <VirtualHost *:80>
    ServerName site2.example.com
    ServerAdmin site2@example.com
    DocumentRoot "/usr/local/apache2/htdocs/site2"
    CustomLog "logs/site2_access_log" common
    ErrorLog "logs/site2_error_log"
  </VirtualHost>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/hosts (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
  ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
  192.168.122.11 vm11
  192.168.122.12 vm12 site1.example.com site2.example.com (修正)
  192.168.122.13 vm13
  192.168.122.14 vm14
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/htdocs
  vm12# mkdir site1 site2
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/htdocs
  vm12# echo "<html><body><h1>サイト1</h1></body></html>" > site1/index.html
  vm12# echo "<html><body><h1>サイト2</h1></body></html>" > site2/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl configtest (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  Syntax OK
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl start (Apacheを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep httpd | grep -v grep (Apacheのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  root      2669  0.0  0.2  70520  2072 ?        Ss   16:02   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2670  0.0  0.1  70520  1512 ?        S    16:02   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2671  0.0  0.1  70520  1512 ?        S    16:02   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2672  0.0  0.1  70520  1512 ?        S    16:02   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2673  0.0  0.1  70520  1512 ?        S    16:02   0:00 /usr/local/apache2/bin/httpd -k start
  apache    2674  0.0  0.1  70520  1512 ?        S    16:02   0:00 /usr/local/apache2/bin/httpd -k start
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://site1.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト1</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://site2.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト2</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl stop (Apacheを停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep httpd | grep -v grep (Apacheのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[10]
  設定ファイル(httpd.conf) - 03 (ルート認証局)
  
[内容]
  ## 作業内容
    ルート認証局を作成、自己認証する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /opt/pki
      | -- /config
              | -- openssl-RootCA.cnf  // 設定ファイル
      | -- /RootCA
              | -- /certs          // 検証用の証明書
              | -- /crl            // 失効リスト
              | -- /newcerts       // ルート認証局が発行した証明書
              | -- /private        // ルート認証局の秘密鍵
              | -- serial          // シリアル番号
              | -- crlnum          // CRL番号
              | -- index.txt       // ルート認証局の管理データベース
              | -- RootCaReq.pem   // ルート認証局の証明書署名要求
              | -- RootCaCert.pem  // ルート認証局のデジタル証明書
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 一般ユーザー(makoto)にsudo付与では制御コマンドが失敗するため
  --------------------------------------------------
  
  vm12# cd /opt
  vm12# mkdir -p pki/config (ディレクトリ作成)
  vm12# mkdir -p pki/RootCA (ディレクトリ作成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /opt/pki/RootCA
  vm12# mkdir certs crl newcerts private (ディレクトリ作成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /opt/pki/config
  vm12# vi openssl-RootCA.cnf (設定ファイルの作成)
  
  コマンドの実行結果
  --------------------------------------------------
  [ ca ]
    default_ca = CA_default  # セクション「CA_default」を参照
  
  [ CA_default ]
    dir = /opt/pki/RootCA
    certs = $dir/certs
    crl_dir = $dir/crl
    database = $dir/index.txt
    new_certs_dir = $dir/newcerts
    serial = $dir/serial
    crlnumber = $dir/crlnum
    crl = $dir/crl.pem
    RANDFILE = $dir/.rand
    name_opt = CA_default
    cert_opt = CA_default
    default_days = 365
    default_crl_days = 30
    default_bits = 2048
    default_md = sha256
    preserve = no
    policy = policy_match  # セクション「policy_match」を参照
  
  [ policy_match ]
    countryName = match
    stateOrProvinceName = match
    organizationName = match
    organizationalUnitName = optional
    commonName = supplied
    emailAddress = optional
  
  [ v3_ca ]
    subjectKeyIdentifier = hash
    authorityKeyIdentifier = keyid:always,issuer
    basicConstraints = CA:true      # CAフラグ
    keyUsage = cRLSign,keyCertSign  # 鍵用途(CRL署名、鍵署名)
  --------------------------------------------------
  
  vm12# cd /opt/pki/RootCA
  vm12# echo "01" > serial (ファイル作成)
  vm12# echo "00" > crlnum (ファイル作成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /opt/pki/RootCA
  vm12# touch index.txt (データベース作成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /opt/pki/RootCA
  vm12# (ルート認証局の秘密鍵を生成)
    openssl genrsa                              // コマンド
    -out /opt/pki/RootCA/private/RootCaKey.pem  // 秘密鍵ファイル
    -aes256                                     // 暗号化アルゴリズム
    -passout pass:ma0122ma                      // 秘密鍵のパスフレーズ
    2048                                        // 鍵長
  
  コマンドの実行結果
  --------------------------------------------------
  openssl: error while loading shared libraries: libssl.so.1.1: cannot open shared object file: No such file or directory
  --------------------------------------------------
  
  vm12# cd /opt/pki/RootCA
  vm12# ldd $(which openssl) (共有ライブラリ調査)
  
  コマンドの実行結果
  --------------------------------------------------
  linux-vdso.so.1 =>  (0x00007ffe87bea000)
  libssl.so.1.1 => not found     // 参照失敗
  libcrypto.so.1.1 => not found  // 参照失敗
  libdl.so.2 => /lib64/libdl.so.2 (0x00007f55067e5000)
  libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f55065c9000)
  libc.so.6 => /lib64/libc.so.6 (0x00007f55061fb000)
  /lib64/ld-linux-x86-64.so.2 (0x00007f55069e9000)
  --------------------------------------------------
  
  vm12# cd /opt/pki/RootCA
  vm12# find / -name libssl.so.1.1 (共有ライブラリ検索)
  
  コマンドの実行結果
  --------------------------------------------------
  /usr/local/lib64/libssl.so.1.1 -> 共有ライブラリ検索リストに追加
  /usr/local/src/openssl-1.1.0h/libssl.so.1.1
  --------------------------------------------------
  
  vm12# cd /opt/pki/RootCA
  vm12# find / -name libcrypto.so.1.1 (共有ライブラリ検索)
  
  コマンドの実行結果
  --------------------------------------------------
  /usr/local/lib64/libcrypto.so.1.1 -> 共有ライブラリ検索リストに追加
  /usr/local/src/openssl-1.1.0h/libcrypto.so.1.1
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/ld.so.conf (共有ライブラリ検索リストを修正)
  
  コマンドの実行結果
  --------------------------------------------------
  /usr/local/lib64/ -> 末尾に追加
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ldconfig (共有ライブラリ検索キャッシュを更新)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /opt/pki/RootCA
  vm12# (ルート認証局の秘密鍵を生成)
    openssl genrsa                              // コマンド
    -out /opt/pki/RootCA/private/RootCaKey.pem  // 秘密鍵ファイル
    -aes256                                     // 暗号化アルゴリズム
    -passout pass:ma0122ma                      // 秘密鍵のパスフレーズ
    2048                                        // 鍵長
  
  コマンドの実行結果
  --------------------------------------------------
  Generating RSA private key, 2048 bit long modulus ...
  --------------------------------------------------
  
  vm12# cd /opt/pki/RootCA
  vm12# (証明書署名要求(CSR)を作成)
    openssl req                                 // コマンド
    -new                                        // 証明書署名要求(CSR)生成
    -key /opt/pki/RootCA/private/RootCaKey.pem  // 秘密鍵ファイル
    -out /opt/pki/RootCA/RootCaReq.pem          // 証明書署名要求(CSR)
    -passin pass:ma0122ma                       // 秘密鍵のパスフレーズ
    -subj "/C=JP/ST=Saitama/L=Tokorozawa/O=example.com/CN=$RootCA.example.com"  // 認証局の情報
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /opt/pki/RootCA
  vm12# (証明書署名要求(CSR)を自己署名・デジタル証明書を作成)
    openssl ca                                  // コマンド
    -config /opt/pki/config/openssl-RootCA.cnf  // 設定ファイル
    -batch                                      // 対話形式は使用しない
    -in /opt/pki/RootCA/RootCaReq.pem           // 証明書署名要求(CSR)
    -out /opt/pki/RootCA/RootCaCert.pem         // デジタル証明書
    -keyfile /opt/pki/RootCA/private/RootCaKey.pem  // 秘密鍵
    -selfsign                                   // 自己署名
    -passin pass:ma0122ma                       // 秘密鍵のパスフレーズ
    -extensions v3_ca                           // 設定ファイルの拡張セクションもロード
  
  コマンドの実行結果
  --------------------------------------------------
  Using configuration from /opt/pki/config/openssl-RootCA.cnf
  Can't open /opt/pki/RootCA/index.txt.attr for reading, No such file or directory
  140032378943296:error:02001002:system library:fopen:No such file or directory:crypto/bio/bss_file.c:74:...
  140032378943296:error:2006D080:BIO routines:BIO_new_file:no such file:crypto/bio/bss_file.c:81:
  Check that the request matches the signature
  Signature ok
  Certificate Details:
    Serial Number: 1 (0x1)
    Validity
      Not Before: Jan 17 10:33:29 2022 GMT
      Not After : Jan 17 10:33:29 2023 GMT
    Subject:
      countryName         = JP
      stateOrProvinceName = Saitama
      organizationName    = example.com
      commonName          = .example.com
    X509v3 extensions:
      X509v3 Subject Key Identifier: 
        99:54:4C:2C:33:A3:DA:58:54:64:9F:F7:3A:66:DB:48:28:81:E4:6E
      X509v3 Authority Key Identifier: 
        keyid:99:54:4C:2C:33:A3:DA:58:54:64:9F:F7:3A:66:DB:48:28:81:E4:6E
      X509v3 Basic Constraints: 
        CA:TRUE
      X509v3 Key Usage: 
        Certificate Sign, CRL Sign
  Certificate is to be certified until Jan 17 10:33:29 2023 GMT (365 days)
  Write out database with 1 new entries
  Data Base Updated
  --------------------------------------------------
  
  vm12# cd /opt/pki/RootCA
  vm12# openssl x509 -in RootCaCert.pem -text -noout (デジタル証明書の内容確認)
  
  コマンドの実行結果
  --------------------------------------------------
  Certificate:
    Data:
      Version: 3 (0x2)
      Serial Number: 1 (0x1)
    Signature Algorithm: sha256WithRSAEncryption
      Issuer: C = JP, ST = Saitama, O = example.com, CN = .example.com
      Validity
        Not Before: Jan 17 10:33:29 2022 GMT
        Not After : Jan 17 10:33:29 2023 GMT
      Subject: C = JP, ST = Saitama, O = example.com, CN = .example.com
      Subject Public Key Info:
        Public Key Algorithm: rsaEncryption
          Public-Key: (2048 bit)
          Modulus:
            00:c3:17:14:a6:e3:49:d0:ee:5c:87:1a:40:a7:5d:
            88:82:f2:a7:fb:7d:f8:21:d0:df:57:57:1d:47:cf:
            f2:80:22:38:46:13:c8:b4:04:73:d5:71:fc:34:db:
            98:63:fa:00:98:11:7a:d0:da:82:14:04:f3:ee:c2:
            c5:cb:5d:c7:e0:9b:7e:ea:bf:4d:52:a9:d1:9f:43:
            5a:80:19:67:b0:d4:5e:3b:9f:bc:5b:69:ed:00:61:
            42:83:3e:51:ce:50:c6:bc:c3:28:a4:7a:17:26:98:
            e0:1e:68:f4:04:88:47:a8:ad:c1:a6:4a:0e:d5:8b:
            23:ad:1d:60:0c:4f:fd:cc:8c:92:7f:af:a6:d1:75:
            55:00:4f:81:76:ff:b8:e0:77:5f:c4:15:1a:55:d8:
            c7:7d:66:44:1a:db:87:7c:63:ff:9a:87:13:6d:f1:
            fc:fd:c8:51:78:f8:a1:01:d7:73:69:8c:14:55:d5:
            0a:e2:c7:ab:22:1f:9c:7c:b7:b0:64:82:11:f9:cb:
            e5:96:94:f5:f7:f4:3e:02:22:2b:8f:b1:00:50:0d:
            47:48:c5:55:03:ae:47:60:e6:71:41:1e:c0:eb:c2:
            21:44:ef:3f:bb:fc:1f:62:42:d5:8b:98:88:6a:f3:
            5d:fd:7d:45:3d:b6:63:9e:75:6c:99:22:1b:3e:97:
            dc:87
          Exponent: 65537 (0x10001)
        X509v3 extensions:
          X509v3 Subject Key Identifier: 
            99:54:4C:2C:33:A3:DA:58:54:64:9F:F7:3A:66:DB:48:28:81:E4:6E
          X509v3 Authority Key Identifier: 
            keyid:99:54:4C:2C:33:A3:DA:58:54:64:9F:F7:3A:66:DB:48:28:81:E4:6E
          X509v3 Basic Constraints: 
            CA:TRUE
          X509v3 Key Usage: 
            Certificate Sign, CRL Sign
    Signature Algorithm: sha256WithRSAEncryption
      62:75:21:75:f7:ba:50:c4:1d:99:95:56:9a:c9:a9:af:7b:18:
      1c:e1:0b:45:12:b8:d9:cf:39:0a:c2:b2:45:18:25:78:45:81:
      38:74:53:b3:f9:7e:4a:98:d0:5f:2f:3c:73:77:82:ed:a1:f9:
      4f:27:54:36:84:c2:55:b8:c5:12:41:80:36:64:a4:c6:59:09:
      11:9c:b5:d2:4d:1e:a7:1b:8c:87:5b:df:51:02:b3:a4:a2:e3:
      a4:b3:3d:03:d7:0c:9e:31:51:08:65:86:65:85:09:66:51:20:
      23:1e:7b:e0:ae:ca:6b:be:86:5d:96:42:78:f2:b1:16:ea:77:
      ad:3f:e7:fe:a1:ed:06:63:05:69:07:b8:ac:e4:0d:0f:32:38:
      72:2d:61:42:9c:97:ff:5a:ef:fa:07:01:e7:52:91:09:2d:bb:
      db:b9:a1:03:08:28:69:81:b9:87:20:a6:47:3e:21:60:d7:17:
      a9:c4:cb:85:8f:82:f6:f4:5b:9c:ac:ad:91:b9:48:be:7a:af:
      b6:8e:2a:14:c4:b9:b2:36:90:12:36:82:50:cc:29:07:ac:c5:
      46:7f:e2:87:85:8a:fa:4e:5f:1e:b6:40:b6:c0:83:d3:60:ca:
      7c:33:02:88:08:c1:3e:08:84:85:37:16:e3:42:f2:24:dc:25:
      d7:f8:5a:e7
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================

================================================================================
[001] httpd - 基本設定
[002] httpd - サーバ情報の取得 - 01
[003] httpd - サーバ情報の取得 - 02
[004] httpd - アクセスログ
[005] httpd - エラーログ
[006] httpd - プログラム実行 - CGI
[007] httpd - リダイレクト
[008] httpd - バージョン情報
[009] httpd - 各ユーザーのホームディレクトリ公開
[010] httpd - アクセス制御
[011] httpd - 外部設定ファイル - 01
[012] httpd - 外部設定ファイル - 02
[013] httpd - 基本認証
[014] httpd - ダイジェスト認証
[015] httpd - ホストベースのアクセス制御 - 01
[016] httpd - ホストベースのアクセス制御 - 02
[017] httpd - バーチャルホスト
[018] httpd - SSL/TLS - 01
[019] httpd - SSL/TLS - 02
[020] httpd - SSL/TLS - 03
[021] httpd - ソフトウェア停止
[022] nginx - 基本設定
[023] nginx - アクセスログ
[024] nginx - エラーログ
[025] nginx - リダイレクト
[026] nginx - バージョン情報
[027] nginx - 各ユーザーのホームディレクトリ公開
[028] nginx - アクセス制御
[029] nginx - 基本認証
[030] nginx - ホストベースのアクセス制御
[031] nginx - バーチャルホスト
[01] ソースから構築 - 01 (APR)
[02] ソースから構築 - 02 (APR-Util)
[03] ソースから構築 - 03 (PCRE)
[04] ソースから構築 - 04 (OPENSSL)
[05] ソースから構築 - 05 (NGHTTP2)
[06] ソースから構築 - 06 (Apache)
[07] 制御コマンド(Apache)
[08] 設定ファイル(httpd.conf) - 01 (単独サイト)
[09] 設定ファイル(httpd.conf) - 02 (複数サイト)
[10] 設定ファイル(httpd.conf) - 03 (認証局)
[11] 設定ファイル(httpd.conf) - 04 (スクリプト)
[12] 設定ファイル(httpd.conf) - 05 (単独サイトのHTTPS化)
[13] 設定ファイル(httpd.conf) - 06 (複数サイトのHTTPS化)
[X1] 設定ファイル(httpd.conf) - 07 (基本認証)
[X2] 設定ファイル(httpd.conf) - 08 (ダイジェスト認証)
[X3] 設定ファイル(httpd.conf) - 09 (ホストベースのアクセス制御)
[14] ソースから構築(Nginx)
[15] 制御コマンド(Nginx)
[16] 設定ファイル(nginx.conf) - 01 (単独サイト)
[17] 設定ファイル(nginx.conf) - 02 (複数サイト)
[18] 設定ファイル(nginx.conf) - 03 (単独サイトのHTTPS化)
[19] 設定ファイル(nginx.conf) - 04 (複数サイトのHTTPS化)
[20] 設定ファイル(nginx.conf) - 05 (リバースプロキシ)
[21] ソースから構築(Squid)
[22] 制御コマンド(Squid)
[23] 設定ファイル(squid.conf) - 01 (サイトのフィルタリング)
================================================================================
[001]
  httpd - 基本設定
  
[内容]
  ## 作業内容
    基本設定
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Mon Jun 19 11:46:58 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo firewall-cmd --list-all
    
    コマンドの実行結果
    --------------------------------------------------
    public
      target: default
      icmp-block-inversion: no
      interfaces: 
      sources: 
      services: cockpit dhcpv6-client dns http https iscsi-target ssh  // http, https を確認
      ports: 12865/tcp 12866/tcp
      protocols: 
      forward: no
      masquerade: no
      forward-ports: 
      source-ports: 
      icmp-blocks: 
      rich rules: 
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo cp -p /etc/httpd/conf/httpd.conf /etc/httpd/conf/httpd.conf.org -> 設定ファイルのバックアップ
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/etc/httpd"           // ルートディレクトリ
    Listen 80                         // 受付ポート
    Include conf.modules.d/*.conf     // モジュールロード => /etc/httpd/conf.modules.d/*.conf
    User apache                       // 実行ユーザー
    Group apache                      // 実行グループ
    ServerAdmin makoto@localhost      // 管理者メール
    ServerName www.avswa.com:80       // FQDN
    DocumentRoot "/var/www/html"      // ドキュメントルート
    ErrorLog "logs/error_log"         // エラーログ => /etc/httpd/logs/error_log
    LogLevel warn                     // ログレベル
    AddDefaultCharset UTF-8           // デフォルト文字コード
    ErrorDocument 404 /missing.html   // エラー画面 => /var/www/html/missing.html
    EnableSendfile on                 // 不明
    AccessFileName .htaccess          // 設定上書ファイル
    IncludeOptional conf.d/*.conf     // 追加設定
    
    <Directory />
      AllowOverride none              // 設定の上書不可
      Require all denied              // 全ホストがアクセス不可
    </Directory>
    
    <Directory "/var/www">
      AllowOverride None              // 設定の上書不可
      Require all denied              // 全ホストがアクセス不可
    </Directory>
    
    <Directory "/var/www/html">
      AllowOverride None              // 設定の上書不可
      Require all granted             // 全ホストがアクセス可能
      Options Indexes FollowSymLinks  // オプション有効 => DirectoryIndex
    </Directory>
    
    <Directory "/var/www/cgi-bin">
      AllowOverride None              // 設定の上書不可
      Require all granted             // 全ホストがアクセス可能
      Options None                    // 全オプション無効
    </Directory>
    
    <IfModule dir_module>
      DirectoryIndex index.html
    </IfModule>
    
    <IfModule alias_module>
      ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
    </IfModule>
    
    <Files ".ht*">
      Require all denied
    </Files>
    
    <IfModule mime_magic_module>
      MIMEMagicFile conf/magic
    </IfModule>
    
    <IfModule log_config_module>
      LogFormat "%h %l %u %t \"%r\" %>s %b" common
      CustomLog "logs/access_log" common
    </IfModule>
    
    <IfModule mime_module>
      TypesConfig /etc/mime.types
      AddType application/x-compress .Z
      AddType application/x-gzip .gz .tgz
      AddType text/html .shtml
      AddOutputFilter INCLUDES .shtml
    </IfModule>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl configtest
    
    コマンドの実行結果
    --------------------------------------------------
    Syntax OK
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /var/www/html/index.html
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>単独サイト</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /var/www/html/missing.html
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>エラー画面</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo systemctl enable httpd
    
    コマンドの実行結果
    --------------------------------------------------
    Created symlink /etc/systemd/system/multi-user.target.wants/httpd.service → /usr/lib/systemd/system/httpd.service.
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo systemctl start httpd
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>単独サイト</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/aaa.html -> 存在しないファイル
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>エラー画面</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[002]
  httpd - サーバ情報の取得 - 01
  
[内容]
  ## 作業内容
    サーバ情報の取得 - 01
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Tue Jun 20 08:31:58 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ httpd -M | grep status -> モジュール確認
    
    コマンドの実行結果
    --------------------------------------------------
    status_module (shared) -> DSO
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/etc/httpd"
    Listen 80
    Include conf.modules.d/*.conf
    User apache
    Group apache
    ServerAdmin makoto@localhost
    ServerName www.avswa.com:80
    DocumentRoot "/var/www/html"
    ErrorLog "logs/error_log"
    LogLevel warn
    AddDefaultCharset UTF-8
    ErrorDocument 404 /missing.html
    EnableSendfile on
    AccessFileName .htaccess
    IncludeOptional conf.d/*.conf
    
    <Directory />
      AllowOverride none
      Require all denied
    </Directory>
    
    <Directory "/var/www">
      AllowOverride None
      Require all denied
    </Directory>
    
    <Directory "/var/www/html">
      AllowOverride None
      Require all granted
      Options Indexes FollowSymLinks
    </Directory>
    
    <Directory "/var/www/cgi-bin">
      AllowOverride None
      Require all granted
      Options None
    </Directory>
    
    <IfModule dir_module>
      DirectoryIndex index.html
    </IfModule>
    
    <IfModule alias_module>
      ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
    </IfModule>
    
    <Files ".ht*">
      Require all denied
    </Files>
    
    <Location /server-status>   // 追加
      SetHandler server-status  // 追加
    </Location>                 // 追加

    <IfModule mime_magic_module>
      MIMEMagicFile conf/magic
    </IfModule>
    
    <IfModule log_config_module>
      LogFormat "%h %l %u %t \"%r\" %>s %b" common
      CustomLog "logs/access_log" common
    </IfModule>
    
    <IfModule mime_module>
      TypesConfig /etc/mime.types
      AddType application/x-compress .Z
      AddType application/x-gzip .gz .tgz
      AddType text/html .shtml
      AddOutputFilter INCLUDES .shtml
    </IfModule>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl configtest
    
    コマンドの実行結果
    --------------------------------------------------
    Syntax OK
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ http://vm11.avswa.com/server-status -> ホスト側のブラウザから閲覧
    
    コマンドの実行結果
    --------------------------------------------------
    (省略)
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[003]
  httpd - サーバ情報の取得 - 02
  
[内容]
  ## 作業内容
    サーバ情報の取得 - 02
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Tue Jun 20 09:19:18 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ httpd -M | grep info -> モジュール確認
    
    コマンドの実行結果
    --------------------------------------------------
    info_module (shared) -> DSO
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/etc/httpd"
    Listen 80
    Include conf.modules.d/*.conf
    User apache
    Group apache
    ServerAdmin makoto@localhost
    ServerName www.avswa.com:80
    DocumentRoot "/var/www/html"
    ErrorLog "logs/error_log"
    LogLevel warn
    AddDefaultCharset UTF-8
    ErrorDocument 404 /missing.html
    EnableSendfile on
    AccessFileName .htaccess
    IncludeOptional conf.d/*.conf
    
    <Directory />
      AllowOverride none
      Require all denied
    </Directory>
    
    <Directory "/var/www">
      AllowOverride None
      Require all denied
    </Directory>
    
    <Directory "/var/www/html">
      AllowOverride None
      Require all granted
      Options Indexes FollowSymLinks
    </Directory>
    
    <Directory "/var/www/cgi-bin">
      AllowOverride None
      Require all granted
      Options None
    </Directory>
    
    <IfModule dir_module>
      DirectoryIndex index.html
    </IfModule>
    
    <IfModule alias_module>
      ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
    </IfModule>
    
    <Files ".ht*">
      Require all denied
    </Files>
    
    <Location /server-status>
      SetHandler server-status
    </Location>
    
    <Location /server-info>   // 追加
      SetHandler server-info  // 追加
    </Location>               // 追加
    
    <IfModule mime_magic_module>
      MIMEMagicFile conf/magic
    </IfModule>
    
    <IfModule log_config_module>
      LogFormat "%h %l %u %t \"%r\" %>s %b" common
      CustomLog "logs/access_log" common
    </IfModule>
    
    <IfModule mime_module>
      TypesConfig /etc/mime.types
      AddType application/x-compress .Z
      AddType application/x-gzip .gz .tgz
      AddType text/html .shtml
      AddOutputFilter INCLUDES .shtml
    </IfModule>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl configtest
    
    コマンドの実行結果
    --------------------------------------------------
    Syntax OK
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ http://vm11.avswa.com/server-info -> ホスト側のブラウザから閲覧
    
    コマンドの実行結果
    --------------------------------------------------
    (省略)
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[004]
  httpd - アクセスログ
  
[内容]
  ## 作業内容
    アクセスログ
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Tue Jun 20 10:10:52 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/etc/httpd"
    …
    <IfModule log_config_module>
      LogFormat "%h %l %u %t \"%r\" %>s %b" common
      CustomLog "logs/access_log" common
    </IfModule>
    …
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ httpd -M | grep log_config -> モジュール確認
    
    コマンドの実行結果
    --------------------------------------------------
    log_config_module (shared) -> DSO
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>単独サイト</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>単独サイト</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo cat /etc/httpd/logs/access_log | tail -n 2
    
    コマンドの実行結果
    --------------------------------------------------
    ::1 - - [20/Jun/2023:10:32:39 +0900] "GET / HTTP/1.1" 200 51
    ::1 - - [20/Jun/2023:10:33:39 +0900] "GET / HTTP/1.1" 200 51
    
    %h  => ::1                           // リモートホスト
    %l  => -                             // リモートログ名
    %u  => -                             // ユーザー名
    %t  => [20/Jun/2023:10:32:39 +0900]  // 処理時刻
    %r  => "GET / HTTP/1.1"              // リクエストヘッダ
    %>s => 200                           // ステータスコード
    %b  => 51                            // バイト数
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[005]
  httpd - エラーログ
  
[内容]
  ## 作業内容
    エラーログ
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Tue Jun 20 10:32:10 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/etc/httpd"
    ErrorLog "logs/error_log"
    LogLevel warn
    …
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo cat /etc/httpd/logs/error_log | tail
    
    コマンドの実行結果
    --------------------------------------------------
    [Tue Jun 20 09:29:58.990807 2023] [mpm_event:notice] [pid 828:tid 140015928953152] AH00493: SIGUSR1 received.  Doing graceful restart
    [Tue Jun 20 09:29:59.104822 2023] [lbmethod_heartbeat:notice] [pid 828:tid 140015928953152] AH02282: No slotmem from mod_heartmonitor
    [Tue Jun 20 09:29:59.106023 2023] [http2:warn] [pid 828:tid 140015928953152] AH02951: mod_ssl does not seem to be enabled
    [Tue Jun 20 09:29:59.107999 2023] [mpm_event:notice] [pid 828:tid 140015928953152] AH00489: Apache/2.4.37 (rocky) configured -- resuming normal operations
    [Tue Jun 20 09:29:59.108040 2023] [core:notice] [pid 828:tid 140015928953152] AH00094: Command line: '/usr/sbin/httpd -D FOREGROUND'
    [Tue Jun 20 09:50:07.068113 2023] [mpm_event:notice] [pid 828:tid 140015928953152] AH00493: SIGUSR1 received.  Doing graceful restart
    [Tue Jun 20 09:50:07.233972 2023] [lbmethod_heartbeat:notice] [pid 828:tid 140015928953152] AH02282: No slotmem from mod_heartmonitor
    [Tue Jun 20 09:50:07.234949 2023] [http2:warn] [pid 828:tid 140015928953152] AH02951: mod_ssl does not seem to be enabled
    [Tue Jun 20 09:50:07.247644 2023] [mpm_event:notice] [pid 828:tid 140015928953152] AH00489: Apache/2.4.37 (rocky) configured -- resuming normal operations
    [Tue Jun 20 09:50:07.247687 2023] [core:notice] [pid 828:tid 140015928953152] AH00094: Command line: '/usr/sbin/httpd -D FOREGROUND'
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[006]
  httpd - プログラム実行 - CGI
  
[内容]
  ## 作業内容
    プログラム実行 - CGI
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Tue Jun 20 08:14:53 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    …
    <IfModule alias_module>
      ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
    </IfModule>
    …
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ httpd -M | grep alias -> モジュール確認
    
    コマンドの実行結果
    --------------------------------------------------
    alias_module (shared) -> DSO
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ which perl
    
    コマンドの実行結果
    --------------------------------------------------
    /usr/bin/perl
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /var/www/cgi-bin/file1.cgi -> CGI
    
    コマンドの実行結果
    --------------------------------------------------
    #!/usr/bin/perl
    
    print <<EOF;
    Content-type: text/html
    
    <html><body><h1>Hello World</h1></body></html>
    EOF
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo chown apache:apache /var/www/cgi-bin/file1.cgi
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo chmod 700 /var/www/cgi-bin/file1.cgi
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/cgi-bin/file1.cgi
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>Hello World</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[007]
  httpd - リダイレクト
  
[内容]
  ## 作業内容
    リダイレクト
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Tue Jun 20 10:51:08 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/etc/httpd"
    Listen 80
    Include conf.modules.d/*.conf
    User apache
    Group apache
    ServerAdmin makoto@localhost
    ServerName www.avswa.com:80
    DocumentRoot "/var/www/html"
    ErrorLog "logs/error_log"
    LogLevel warn
    Redirect / http://localhost/work1.html  // 追加
    AddDefaultCharset UTF-8
    ErrorDocument 404 /missing.html
    EnableSendfile on
    AccessFileName .htaccess
    IncludeOptional conf.d/*.conf
    
    <Directory />
      AllowOverride none
      Require all denied
    </Directory>
    
    <Directory "/var/www">
      AllowOverride None
      Require all denied
    </Directory>
    
    <Directory "/var/www/html">
      AllowOverride None
      Require all granted
      Options Indexes FollowSymLinks
    </Directory>
    
    <Directory "/var/www/cgi-bin">
      AllowOverride None
      Require all granted
      Options None
    </Directory>
    
    <IfModule dir_module>
      DirectoryIndex index.html
    </IfModule>
    
    <IfModule alias_module>
      ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
    </IfModule>
    
    <Files ".ht*">
      Require all denied
    </Files>
    
    <Location /server-status>
      SetHandler server-status
    </Location>
    
    <Location /server-info>
      SetHandler server-info
    </Location>
    
    <IfModule mime_magic_module>
      MIMEMagicFile conf/magic
    </IfModule>
    
    <IfModule log_config_module>
      LogFormat "%h %l %u %t \"%r\" %>s %b" common
      CustomLog "logs/access_log" common
    </IfModule>
    
    <IfModule mime_module>
      TypesConfig /etc/mime.types
      AddType application/x-compress .Z
      AddType application/x-gzip .gz .tgz
      AddType text/html .shtml
      AddOutputFilter INCLUDES .shtml
    </IfModule>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /var/www/html/work1.html
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>Work1</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/
    
    コマンドの実行結果
    --------------------------------------------------
    <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
    <html>
    <head>
    <title>302 Found</title>  // デフォルトではステータス(302)を返す模様
    </head>
    <body>
    <h1>Found</h1>
    <p>The document has moved <a href="http://localhost/work1.html">here</a></p>
    </body>
    </html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    Redirect / http://localhost/work1.html  // 削除
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo rm /var/www/html/work1.html
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[008]
  httpd - バージョン情報
  
[内容]
  ## 作業内容
    バージョン情報
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Tue Jun 20 12:21:23 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl -I http://localhost/
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/etc/httpd"
    Listen 80
    Include conf.modules.d/*.conf
    User apache
    Group apache
    ServerAdmin makoto@localhost
    ServerName www.avswa.com:80
    DocumentRoot "/var/www/html"
    ErrorLog "logs/error_log"
    LogLevel warn
    ServerTokens Prod  // 追加
    AddDefaultCharset UTF-8
    ErrorDocument 404 /missing.html
    EnableSendfile on
    AccessFileName .htaccess
    IncludeOptional conf.d/*.conf
    
    <Directory />
      AllowOverride none
      Require all denied
    </Directory>
    
    <Directory "/var/www">
      AllowOverride None
      Require all denied
    </Directory>
    
    <Directory "/var/www/html">
      AllowOverride None
      Require all granted
      Options Indexes FollowSymLinks
    </Directory>
    
    <Directory "/var/www/cgi-bin">
      AllowOverride None
      Require all granted
      Options None
    </Directory>
    
    <IfModule dir_module>
      DirectoryIndex index.html
    </IfModule>
    
    <IfModule alias_module>
      ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
    </IfModule>
    
    <Files ".ht*">
      Require all denied
    </Files>
    
    <Location /server-status>
      SetHandler server-status
    </Location>
    
    <Location /server-info>
      SetHandler server-info
    </Location>
    
    <IfModule mime_magic_module>
      MIMEMagicFile conf/magic
    </IfModule>
    
    <IfModule log_config_module>
      LogFormat "%h %l %u %t \"%r\" %>s %b" common
      CustomLog "logs/access_log" common
    </IfModule>
    
    <IfModule mime_module>
      TypesConfig /etc/mime.types
      AddType application/x-compress .Z
      AddType application/x-gzip .gz .tgz
      AddType text/html .shtml
      AddOutputFilter INCLUDES .shtml
    </IfModule>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl configtest
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl -I http://localhost/
    
    コマンドの実行結果
    --------------------------------------------------
    //
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[009]
  httpd - 各ユーザーのホームディレクトリ公開
  
[内容]
  ## 作業内容
    各ユーザーのホームディレクトリ公開
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Tue Jun 20 12:52:24 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo ls -lh /etc/httpd/conf.d
    
    コマンドの実行結果
    --------------------------------------------------
    -rw-r--r-- 1 root root  400  5月 18 01:28 README
    -rw-r--r-- 1 root root 2.9K  5月 18 01:28 autoindex.conf
    -rw-r--r-- 1 root root 1.3K  5月 18 01:26 userdir.conf
    -rw-r--r-- 1 root root  574  5月 18 01:26 welcome.conf
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo cat /etc/httpd/conf.d/userdir.conf | grep -vE '^#|^.*#'
    
    コマンドの実行結果
    --------------------------------------------------
    <IfModule mod_userdir.c>
      UserDir disabled  // ホームディレクトリを公開しない
    </IfModule>
    
    <Directory "/home/*/public_html">
      AllowOverride FileInfo AuthConfig Limit Indexes
      Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec
      Require method GET POST OPTIONS
    </Directory>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ httpd -M | grep userdir
    
    コマンドの実行結果
    --------------------------------------------------
    userdir_module (shared) -> DSO
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo mkdir /etc/skel/public_html -> スケルトンにディレクトリ追加
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo useradd user1
    vm11$ sudo useradd user2
    vm11$ sudo useradd user3
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ echo 'user1' | sudo passwd --stdin user1 1>/dev/null
    vm11$ echo 'user2' | sudo passwd --stdin user2 1>/dev/null
    vm11$ echo 'user3' | sudo passwd --stdin user3 1>/dev/null
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo chmod 711 /home/user1
    vm11$ sudo chmod 711 /home/user2
    vm11$ sudo chmod 711 /home/user3
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo chmod 755 /home/user1/public_html
    vm11$ sudo chmod 755 /home/user2/public_html
    vm11$ sudo chmod 755 /home/user3/public_html
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ su -c "echo '<html><body><h1>User1</h1></body></html>' >> ~user1/public_html/index.html" user1
    vm11$ su -c "echo '<html><body><h1>User2</h1></body></html>' >> ~user2/public_html/index.html" user2
    vm11$ su -c "echo '<html><body><h1>User3</h1></body></html>' >> ~user3/public_html/index.html" user3
    
    コマンドの実行結果
    --------------------------------------------------
    パスワード: (各ユーザーのパスワード入力)
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf.d/userdir.conf
    
    コマンドの実行結果
    --------------------------------------------------
    <IfModule mod_userdir.c>
      UserDir public_html  // 修正 : disable => public_html
    </IfModule>
    
    <Directory "/home/*/public_html">
      AllowOverride All  // 修正 : FileInfo AuthConfig Limit Indexes => All
      Options MultiViews Indexes SymLinksIfOwnerMatch IncludesNoExec
      Require method GET POST OPTIONS
    </Directory>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ getenforce
    
    コマンドの実行結果
    --------------------------------------------------
    Enforcing
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo setenforce 0 -> SELinux無効
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ su -c 'curl http://localhost/~user1/' user1
    vm11$ su -c 'curl http://localhost/~user2/' user2
    vm11$ su -c 'curl http://localhost/~user3/' user3
    
    コマンドの実行結果
    --------------------------------------------------
    // user1
    パスワード: (パスワード入力)
    <html><body><h1>User1</h1></body></html>

    // user2
    パスワード: (パスワード入力)
    <html><body><h1>User2</h1></body></html>
    
    // user3
    パスワード: (パスワード入力)
    <html><body><h1>User3</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/~user1/
    vm11$ curl http://localhost/~user2/
    vm11$ curl http://localhost/~user3/
    
    コマンドの実行結果
    --------------------------------------------------
    // user1
    <html><body><h1>User1</h1></body></html>
    
    // user2
    <html><body><h1>User2</h1></body></html>
    
    // user3
    <html><body><h1>User3</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[010]
  httpd - アクセス制御
  
[内容]
  ## 作業内容
    アクセス制御
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Wed Jun 21 11:50:47 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/etc/httpd"
    Listen 80
    Include conf.modules.d/*.conf
    User apache
    Group apache
    ServerAdmin makoto@localhost
    ServerName www.avswa.com:80
    DocumentRoot "/var/www/html"
    ErrorLog "logs/error_log"
    LogLevel warn
    ServerTokens Prod
    AddDefaultCharset UTF-8
    ErrorDocument 404 /missing.html
    EnableSendfile on
    AccessFileName .htaccess
    IncludeOptional conf.d/*.conf
    
    <Directory />
      AllowOverride none
      Require all denied
    </Directory>
    
    <Directory "/var/www">
      AllowOverride None
      Require all denied
    </Directory>
    
    <Directory "/var/www/html">
      AllowOverride None
      Require all granted
      Options Indexes FollowSymLinks
    </Directory>
    
    <Directory "/var/www/html/dirA">  // 追加
      AllowOverride None              // 追加
      Require all granted             // 追加 => 全ホストをアクセス可
      Options Indexes                 // 追加
    </Directory>                      // 追加
    
    <Directory "/var/www/cgi-bin">
      AllowOverride None
      Require all granted
      Options None
    </Directory>
    
    <IfModule dir_module>
      DirectoryIndex index.html
    </IfModule>
    
    <IfModule alias_module>
      ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
    </IfModule>
    
    <Files ".ht*">
      Require all denied
    </Files>
    
    <Location /server-status>
      SetHandler server-status
      AllowOverride None              // 追加
      Require all denied              // 追加 => 全ホストをアクセス不可
    </Location>
    
    <Location /server-info>
      SetHandler server-info
      AllowOverride None              // 追加
      Require all denied              // 追加 => 全ホストをアクセス不可
    </Location>
    
    <IfModule mime_magic_module>
      MIMEMagicFile conf/magic
    </IfModule>
    
    <IfModule log_config_module>
      LogFormat "%h %l %u %t \"%r\" %>s %b" common
      CustomLog "logs/access_log" common
    </IfModule>
    
    <IfModule mime_module>
      TypesConfig /etc/mime.types
      AddType application/x-compress .Z
      AddType application/x-gzip .gz .tgz
      AddType text/html .shtml
      AddOutputFilter INCLUDES .shtml
    </IfModule>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo mkdir /var/www/html/dirA
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /var/www/html/dirA/index.html
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>dirA</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/dirA/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>dirA</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/etc/httpd"
    Listen 80
    Include conf.modules.d/*.conf
    User apache
    Group apache
    ServerAdmin makoto@localhost
    ServerName www.avswa.com:80
    DocumentRoot "/var/www/html"
    ErrorLog "logs/error_log"
    LogLevel warn
    ServerTokens Prod
    AddDefaultCharset UTF-8
    ErrorDocument 404 /missing.html
    EnableSendfile on
    AccessFileName .htaccess
    IncludeOptional conf.d/*.conf
    
    <Directory />
      AllowOverride none
      Require all denied
    </Directory>
    
    <Directory "/var/www">
      AllowOverride None
      Require all denied
    </Directory>
    
    <Directory "/var/www/html">
      AllowOverride None
      Require all granted
      Options Indexes FollowSymLinks
    </Directory>
    
    <Directory "/var/www/html/dirA">
      AllowOverride None
      Require all denied  // 修正 => 全ホストをアクセス不可
      Options Indexes
    </Directory>
    
    <Directory "/var/www/cgi-bin">
      AllowOverride None
      Require all granted
      Options None
    </Directory>
    
    <IfModule dir_module>
      DirectoryIndex index.html
    </IfModule>
    
    <IfModule alias_module>
      ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
    </IfModule>
    
    <Files ".ht*">
      Require all denied
    </Files>
    
    <Location /server-status>
      SetHandler server-status
      AllowOverride None
      Require all denied
    </Location>
    
    <Location /server-info>
      SetHandler server-info
      AllowOverride None
      Require all denied
    </Location>
    
    <IfModule mime_magic_module>
      MIMEMagicFile conf/magic
    </IfModule>
    
    <IfModule log_config_module>
      LogFormat "%h %l %u %t \"%r\" %>s %b" common
      CustomLog "logs/access_log" common
    </IfModule>
    
    <IfModule mime_module>
      TypesConfig /etc/mime.types
      AddType application/x-compress .Z
      AddType application/x-gzip .gz .tgz
      AddType text/html .shtml
      AddOutputFilter INCLUDES .shtml
    </IfModule>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/dirA/ -> アクセス不可
    
    コマンドの実行結果
    --------------------------------------------------
    <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
    <html>
    <head>
    <title>403 Forbidden</title>
    </head>
    <body>
    <h1>Forbidden</h1>
    <p>You don't have permission to access this resource.</p>
    </body>
    </html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[011]
  httpd - 外部設定ファイル - 01
  
[内容]
  ## 作業内容
    外部設定ファイル - 01
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Wed Jun 21 13:02:11 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/etc/httpd"
    Listen 80
    Include conf.modules.d/*.conf
    User apache
    Group apache
    ServerAdmin makoto@localhost
    ServerName www.avswa.com:80
    DocumentRoot "/var/www/html"
    ErrorLog "logs/error_log"
    LogLevel warn
    ServerTokens Prod
    AddDefaultCharset UTF-8
    ErrorDocument 404 /missing.html
    EnableSendfile on
    AccessFileName .htaccess
    IncludeOptional conf.d/*.conf
    
    <Directory />
      AllowOverride none
      Require all denied
    </Directory>
    
    <Directory "/var/www">
      AllowOverride None
      Require all denied
    </Directory>
    
    <Directory "/var/www/html">
      AllowOverride None
      Require all granted
      Options Indexes FollowSymLinks
    </Directory>
    
    <Directory "/var/www/html/dirA">
      AllowOverride All  // 修正 : None -> All (.htaccess の全設定を有効)
      Require all denied
      Options Indexes
    </Directory>
    
    <Directory "/var/www/cgi-bin">
      AllowOverride None
      Require all granted
      Options None
    </Directory>
    
    <IfModule dir_module>
      DirectoryIndex index.html
    </IfModule>
    
    <IfModule alias_module>
      ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
    </IfModule>
    
    <Files ".ht*">
      Require all denied
    </Files>
    
    <Location /server-status>
      SetHandler server-status
      AllowOverride None
      Require all denied
    </Location>
    
    <Location /server-info>
      SetHandler server-info
      AllowOverride None
      Require all denied
    </Location>
    
    <IfModule mime_magic_module>
      MIMEMagicFile conf/magic
    </IfModule>
    
    <IfModule log_config_module>
      LogFormat "%h %l %u %t \"%r\" %>s %b" common
      CustomLog "logs/access_log" common
    </IfModule>
    
    <IfModule mime_module>
      TypesConfig /etc/mime.types
      AddType application/x-compress .Z
      AddType application/x-gzip .gz .tgz
      AddType text/html .shtml
      AddOutputFilter INCLUDES .shtml
    </IfModule>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/dirA/
    
    コマンドの実行結果
    --------------------------------------------------
    <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
    <html>
    <head>
    <title>403 Forbidden</title>
    </head>
    <body>
    <h1>Forbidden</h1>
    <p>You don't have permission to access this resource.</p>
    </body>
    </html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /var/www/html/dirA/.htaccess
    
    コマンドの実行結果
    --------------------------------------------------
    Require all granted  // 全ホストをアクセス可能にする
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/dirA/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>dirA</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[012]
  httpd - 外部設定ファイル - 02
  
[内容]
  ## 作業内容
    外部設定ファイル - 02
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Wed Jun 21 17:47:15 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/etc/httpd"
    Listen 80
    Include conf.modules.d/*.conf
    User apache
    Group apache
    ServerAdmin makoto@localhost
    ServerName www.avswa.com:80
    DocumentRoot "/var/www/html"
    ErrorLog "logs/error_log"
    LogLevel warn
    ServerTokens Prod
    AddDefaultCharset UTF-8
    ErrorDocument 404 /missing.html
    EnableSendfile on
    AccessFileName .htaccess
    IncludeOptional conf.d/*.conf
    
    <Directory />
      AllowOverride none
      Require all denied
    </Directory>
    
    <Directory "/var/www">
      AllowOverride None
      Require all denied
    </Directory>
    
    <Directory "/var/www/html">
      AllowOverride None
      Require all granted
      Options Indexes FollowSymLinks
    </Directory>
    
    <Directory "/var/www/html/dirA">
      AllowOverride All  // 確認 :  All (.htaccess の全設定を有効)
      Require all denied
      Options Indexes
    </Directory>
    
    <Directory "/var/www/cgi-bin">
      AllowOverride None
      Require all granted
      Options None
    </Directory>
    
    <IfModule dir_module>
      DirectoryIndex index.html
    </IfModule>
    
    <IfModule alias_module>
      ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
    </IfModule>
    
    <Files ".ht*">
      Require all denied
    </Files>
    
    <Location /server-status>
      SetHandler server-status
      AllowOverride None
      Require all denied
    </Location>
    
    <Location /server-info>
      SetHandler server-info
      AllowOverride None
      Require all denied
    </Location>
    
    <IfModule mime_magic_module>
      MIMEMagicFile conf/magic
    </IfModule>
    
    <IfModule log_config_module>
      LogFormat "%h %l %u %t \"%r\" %>s %b" common
      CustomLog "logs/access_log" common
    </IfModule>
    
    <IfModule mime_module>
      TypesConfig /etc/mime.types
      AddType application/x-compress .Z
      AddType application/x-gzip .gz .tgz
      AddType text/html .shtml
      AddOutputFilter INCLUDES .shtml
    </IfModule>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /var/www/html/dirA/.htaccess
    
    コマンドの実行結果
    --------------------------------------------------
    Require all granted
    Options +ExecCGI            // 追加 : CGI実行可能
    AddHandler cgi-script .cgi  // 追加
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /var/www/html/dirA/file1.cgi
    
    コマンドの実行結果
    --------------------------------------------------
    #!/usr/bin/perl
    
    print <<EOF;
    Content-type: text/html
    
    <html><body><h1>Hello World</h1></body></html>
    EOF
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo chmod 755 /var/www/html/dirA/file1.cgi
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/dirA/file1.cgi
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>Hello World</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[013]
  httpd - 基本認証
  
[内容]
  ## 作業内容
    基本認証
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Thu Jun 22 13:47:04 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ httpd -M | grep auth_basic -> モジュール確認
    
    コマンドの実行結果
    --------------------------------------------------
    auth_basic_module (shared) -> DSO
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/etc/httpd"
    Listen 80
    Include conf.modules.d/*.conf
    User apache
    Group apache
    ServerAdmin makoto@localhost
    ServerName www.avswa.com:80
    DocumentRoot "/var/www/html"
    ErrorLog "logs/error_log"
    LogLevel warn
    ServerTokens Prod
    AddDefaultCharset UTF-8
    ErrorDocument 404 /missing.html
    EnableSendfile on
    AccessFileName .htaccess
    IncludeOptional conf.d/*.conf
    
    <Directory />
      AllowOverride none
      Require all denied
    </Directory>
    
    <Directory "/var/www">
      AllowOverride None
      Require all denied
    </Directory>
    
    <Directory "/var/www/html">
      AllowOverride None
      Require all granted
      Options Indexes FollowSymLinks
    </Directory>
    
    <Directory "/var/www/html/dirA">
      AllowOverride All
      Require all denied
      Options Indexes
    </Directory>
    
    <Directory "/var/www/html/dirB">         // 追加
      AuthType basic                         // 追加
      AuthName "Enter user and pass"         // 追加
      AuthUserFile /etc/httpd/conf/htpasswd  // 追加
      AllowOverride All                      // 追加
      Require valid-user                     // 追加
      Options Indexes                        // 追加
    </Directory>                             // 追加
    
    <Directory "/var/www/cgi-bin">
      AllowOverride None
      Require all granted
      Options None
    </Directory>
    
    <IfModule dir_module>
      DirectoryIndex index.html
    </IfModule>
    
    <IfModule alias_module>
      ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
    </IfModule>
    
    <Files ".ht*">
      Require all denied
    </Files>
    
    <Location /server-status>
      SetHandler server-status
      AllowOverride None
      Require all denied
    </Location>
    
    <Location /server-info>
      SetHandler server-info
      AllowOverride None
      Require all denied
    </Location>
    
    <IfModule mime_magic_module>
      MIMEMagicFile conf/magic
    </IfModule>
    
    <IfModule log_config_module>
      LogFormat "%h %l %u %t \"%r\" %>s %b" common
      CustomLog "logs/access_log" common
    </IfModule>
    
    <IfModule mime_module>
      TypesConfig /etc/mime.types
      AddType application/x-compress .Z
      AddType application/x-gzip .gz .tgz
      AddType text/html .shtml
      AddOutputFilter INCLUDES .shtml
    </IfModule>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo htpasswd -c /etc/httpd/conf/htpasswd user1 -> 新規作成
    vm11$ sudo htpasswd /etc/httpd/conf/htpasswd user2    -> 追記
    vm11$ sudo htpasswd /etc/httpd/conf/htpasswd user3    -> 追記
    
    コマンドの実行結果
    --------------------------------------------------
    // user1
    New password: (user1)
    Re-type new password: (user1)
    Adding password for user user1
    
    // user2
    New password: (user2)
    Re-type new password: (user2)
    Adding password for user user2
    
    // user3
    New password: (user3)
    Re-type new password: (user3)
    Adding password for user user3
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo cat /etc/httpd/conf/htpasswd
    
    コマンドの実行結果
    --------------------------------------------------
    user1:$apr1$Yj0PGaD5$i9rn8DYqtjrKmFvqzf0Ar.
    user2:$apr1$VkwgSRiP$OMjvy3mTjk3KS1W0hIkJV/
    user3:$apr1$lfCeU3jb$cjq.gOW3KQsFsEF6/IqWE.
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo mkdir /var/www/html/dirB
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo chmod 777 /var/www/html/dirB
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /var/www/html/dirB/index.html
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>dirB</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl configtest
    
    コマンドの実行結果
    --------------------------------------------------
    Syntax OK
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl -u user1:user1 http://localhost/dirB/ -> 基本認証でアクセス
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>dirB</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[014]
  httpd - ダイジェスト認証
  
[内容]
  ## 作業内容
    ダイジェスト認証
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Fri Jun 23 04:05:33 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ httpd -M | grep auth_digest -> モジュール確認
    
    コマンドの実行結果
    --------------------------------------------------
    auth_digest_module (shared) -> DSO
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/etc/httpd"
    Listen 80
    Include conf.modules.d/*.conf
    User apache
    Group apache
    ServerAdmin makoto@localhost
    ServerName www.avswa.com:80
    DocumentRoot "/var/www/html"
    ErrorLog "logs/error_log"
    LogLevel warn
    ServerTokens Prod
    AddDefaultCharset UTF-8
    ErrorDocument 404 /missing.html
    EnableSendfile on
    AccessFileName .htaccess
    IncludeOptional conf.d/*.conf
    
    <Directory />
      AllowOverride none
      Require all denied
    </Directory>
    
    <Directory "/var/www">
      AllowOverride None
      Require all denied
    </Directory>
    
    <Directory "/var/www/html">
      AllowOverride None
      Require all granted
      Options Indexes FollowSymLinks
    </Directory>
    
    <Directory "/var/www/html/dirA">
      AllowOverride All
      Require all denied
      Options Indexes
    </Directory>
    
    <Directory "/var/www/html/dirB">
      AuthType basic
      AuthName "Enter user and pass"
      AuthUserFile /etc/httpd/conf/htpasswd
      AllowOverride All
      Require valid-user
      Options Indexes
    </Directory>
    
    <Directory "/var/www/html/dirC">         // 追加
      AuthType digest                        // 追加
      AuthName "dirC"                        // 追加
      AuthUserFile /etc/httpd/conf/htdigest  // 追加
      AllowOverride All                      // 追加
      Require valid-user                     // 追加
      Options Indexes                        // 追加
    </Directory>                             // 追加
    
    <Directory "/var/www/cgi-bin">
      AllowOverride None
      Require all granted
      Options None
    </Directory>
    
    <IfModule dir_module>
      DirectoryIndex index.html
    </IfModule>
    
    <IfModule alias_module>
      ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
    </IfModule>
    
    <Files ".ht*">
      Require all denied
    </Files>
    
    <Location /server-status>
      SetHandler server-status
      AllowOverride None
      Require all denied
    </Location>
    
    <Location /server-info>
      SetHandler server-info
      AllowOverride None
      Require all denied
    </Location>
    
    <IfModule mime_magic_module>
      MIMEMagicFile conf/magic
    </IfModule>
    
    <IfModule log_config_module>
      LogFormat "%h %l %u %t \"%r\" %>s %b" common
      CustomLog "logs/access_log" common
    </IfModule>
    
    <IfModule mime_module>
      TypesConfig /etc/mime.types
      AddType application/x-compress .Z
      AddType application/x-gzip .gz .tgz
      AddType text/html .shtml
      AddOutputFilter INCLUDES .shtml
    </IfModule>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo htdigest -c /etc/httpd/conf/htdigest dirC user1 -> 新規作成
    vm11$ sudo htdigest /etc/httpd/conf/htdigest dirC user2    -> 追記
    vm11$ sudo htdigest /etc/httpd/conf/htdigest dirC user3    -> 追記
    
    コマンドの実行結果
    --------------------------------------------------
    // user1
    Adding password for user1 in realm dirC.
    New password: (user1)
    Re-type new password: (user1)
    
    // user2
    Adding user user2 in realm dirC
    New password: (user2)
    Re-type new password: (user2)
    
    // user3
    Adding user user3 in realm dirC
    New password: (user3)
    Re-type new password: (user3)
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo cat /etc/httpd/conf/htdigest
    
    コマンドの実行結果
    --------------------------------------------------
    user1:dirC:ee1168f854a34d087005f11bae88c9de
    user2:dirC:705e2348df687a8b438bde472ba0efca
    user3:dirC:dcb3cf47b3969fd8c251ba383f47b966
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo mkdir /var/www/html/dirC
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo chmod 777 /var/www/html/dirC
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /var/www/html/dirC/index.html
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>dirC</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl configtest
    
    コマンドの実行結果
    --------------------------------------------------
    Syntax OK
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl --digest -u user1:user1 http://localhost/dirC/ -> ダイジェスト認証でアクセス
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>dirC</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[015]
  httpd - ホストベースのアクセス制御 - 01
  
[内容]
  ## 作業内容
    ホストベースのアクセス制御 - 01
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Fri Jun 23 04:48:21 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ httpd -M | grep access_compat -> モジュール確認
    
    コマンドの実行結果
    --------------------------------------------------
    access_compat_module (shared) -> DSO
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/etc/httpd"
    Listen 80
    Include conf.modules.d/*.conf
    User apache
    Group apache
    ServerAdmin makoto@localhost
    ServerName www.avswa.com:80
    DocumentRoot "/var/www/html"
    ErrorLog "logs/error_log"
    LogLevel warn
    ServerTokens Prod
    AddDefaultCharset UTF-8
    ErrorDocument 404 /missing.html
    EnableSendfile on
    AccessFileName .htaccess
    IncludeOptional conf.d/*.conf
    
    <Directory />
      AllowOverride none
      Require all denied
    </Directory>
    
    <Directory "/var/www">
      AllowOverride None
      Require all denied
    </Directory>
    
    <Directory "/var/www/html">
      AllowOverride None
      Require all granted
      Options Indexes FollowSymLinks
    </Directory>
    
    <Directory "/var/www/html/dirA">
      AllowOverride All
      Require all denied
      Options Indexes
    </Directory>
    
    <Directory "/var/www/html/dirB">
      AuthType basic
      AuthName "Enter user and pass"
      AuthUserFile /etc/httpd/conf/htpasswd
      AllowOverride All
      Require valid-user
      Options Indexes
    </Directory>
    
    <Directory "/var/www/html/dirC">
      AuthType digest
      AuthName "dirC"
      AuthUserFile /etc/httpd/conf/htdigest
      AllowOverride All
      Require valid-user
      Options Indexes
    </Directory>
    
    <Directory "/var/www/html/dirD">  // 追加
      AllowOverride All               // 追加
      Order allow,deny                // 追加
      Allow from all                  // 追加
      Deny from 192.168.122.12/32     // 追加
      Options Indexes                 // 追加
    </Directory>                      // 追加
    
    <Directory "/var/www/cgi-bin">
      AllowOverride None
      Require all granted
      Options None
    </Directory>
    
    <IfModule dir_module>
      DirectoryIndex index.html
    </IfModule>
    
    <IfModule alias_module>
      ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
    </IfModule>
    
    <Files ".ht*">
      Require all denied
    </Files>
    
    <Location /server-status>
      SetHandler server-status
      AllowOverride None
      Require all denied
    </Location>
    
    <Location /server-info>
      SetHandler server-info
      AllowOverride None
      Require all denied
    </Location>
    
    <IfModule mime_magic_module>
      MIMEMagicFile conf/magic
    </IfModule>
    
    <IfModule log_config_module>
      LogFormat "%h %l %u %t \"%r\" %>s %b" common
      CustomLog "logs/access_log" common
    </IfModule>
    
    <IfModule mime_module>
      TypesConfig /etc/mime.types
      AddType application/x-compress .Z
      AddType application/x-gzip .gz .tgz
      AddType text/html .shtml
      AddOutputFilter INCLUDES .shtml
    </IfModule>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo mkdir /var/www/html/dirD
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo chmod 777 /var/www/html/dirD
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /var/www/html/dirD/index.html
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>dirD</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl configtest
    
    コマンドの実行結果
    --------------------------------------------------
    Syntax OK
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/dirD/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>dirD</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  $ cd $HOME
  $ ssh vm12 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Sat Jun 17 17:42:56 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm12$ cd $HOME
    vm12$ curl http://vm11.avswa.com/dirD/
    
    コマンドの実行結果
    --------------------------------------------------
    <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
    <html>
    <head>
    <title>403 Forbidden</title>
    </head>
    <body>
    <h1>Forbidden</h1>
    <p>You don't have permission to access this resource.</p>
    </body>
    </html>
    --------------------------------------------------
    
    vm12$ cd $HOME
    vm12$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[016]
  httpd - ホストベースのアクセス制御 - 02
  
[内容]
  ## 作業内容
    ホストベースのアクセス制御 - 02
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Fri Jun 23 05:06:42 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ httpd -M | grep authz_host -> モジュール確認
    
    コマンドの実行結果
    --------------------------------------------------
    authz_host_module (shared) -> DSO
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/etc/httpd"
    Listen 80
    Include conf.modules.d/*.conf
    User apache
    Group apache
    ServerAdmin makoto@localhost
    ServerName www.avswa.com:80
    DocumentRoot "/var/www/html"
    ErrorLog "logs/error_log"
    LogLevel warn
    ServerTokens Prod
    AddDefaultCharset UTF-8
    ErrorDocument 404 /missing.html
    EnableSendfile on
    AccessFileName .htaccess
    IncludeOptional conf.d/*.conf
    
    <Directory />
      AllowOverride none
      Require all denied
    </Directory>
    
    <Directory "/var/www">
      AllowOverride None
      Require all denied
    </Directory>
    
    <Directory "/var/www/html">
      AllowOverride None
      Require all granted
      Options Indexes FollowSymLinks
    </Directory>
    
    <Directory "/var/www/html/dirA">
      AllowOverride All
      Require all denied
      Options Indexes
    </Directory>
    
    <Directory "/var/www/html/dirB">
      AuthType basic
      AuthName "Enter user and pass"
      AuthUserFile /etc/httpd/conf/htpasswd
      AllowOverride All
      Require valid-user
      Options Indexes
    </Directory>
    
    <Directory "/var/www/html/dirC">
      AuthType digest
      AuthName "dirC"
      AuthUserFile /etc/httpd/conf/htdigest
      AllowOverride All
      Require valid-user
      Options Indexes
    </Directory>
    
    <Directory "/var/www/html/dirD">
      AllowOverride All
      Order allow,deny
      Allow from all
      Deny from 192.168.122.12/32
      Options Indexes
    </Directory>
    
    <Directory "/var/www/html/dirE">  // 追加
      AllowOverride All               // 追加
      Require all denied              // 追加
      Require ip 192.168.122.12       // 追加
      Options Indexes                 // 追加
    </Directory>                      // 追加
    
    <Directory "/var/www/cgi-bin">
      AllowOverride None
      Require all granted
      Options None
    </Directory>
    
    <IfModule dir_module>
      DirectoryIndex index.html
    </IfModule>
    
    <IfModule alias_module>
      ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
    </IfModule>
    
    <Files ".ht*">
      Require all denied
    </Files>
    
    <Location /server-status>
      SetHandler server-status
      AllowOverride None
      Require all denied
    </Location>
    
    <Location /server-info>
      SetHandler server-info
      AllowOverride None
      Require all denied
    </Location>
    
    <IfModule mime_magic_module>
      MIMEMagicFile conf/magic
    </IfModule>
    
    <IfModule log_config_module>
      LogFormat "%h %l %u %t \"%r\" %>s %b" common
      CustomLog "logs/access_log" common
    </IfModule>
    
    <IfModule mime_module>
      TypesConfig /etc/mime.types
      AddType application/x-compress .Z
      AddType application/x-gzip .gz .tgz
      AddType text/html .shtml
      AddOutputFilter INCLUDES .shtml
    </IfModule>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo mkdir /var/www/html/dirE
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo chmod 777 /var/www/html/dirE
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /var/www/html/dirE/index.html
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>dirE</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl configtest
    
    コマンドの実行結果
    --------------------------------------------------
    Syntax OK
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/dirE/
    
    コマンドの実行結果
    --------------------------------------------------
    <!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 2.0//EN">
    <html>
    <head>
    <title>403 Forbidden</title>
    </head>
    <body>
    <h1>Forbidden</h1>
    <p>You don't have permission to access this resource.</p>
    </body>
    </html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  $ cd $HOME
  $ ssh vm12 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Fri Jun 23 05:20:39 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm12$ cd $HOME
    vm12$ curl http://vm11.avswa.com/dirE/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>dirE</h1></body></html>
    --------------------------------------------------
    
    vm12$ cd $HOME
    vm12$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[017]
  httpd - バーチャルホスト
  
[内容]
  ## 作業内容
    名前ベースのバーチャルホスト
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Fri Jun 23 05:21:40 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ httpd -M | grep dir -> モジュール確認
    
    コマンドの実行結果
    --------------------------------------------------
    dir_module (shared) -> DSO
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ httpd -M | grep alias -> モジュール確認
    
    コマンドの実行結果
    --------------------------------------------------
    alias_module (shared) -> DSO
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ httpd -M | grep mime_magic -> モジュール確認
    
    コマンドの実行結果
    --------------------------------------------------
    mime_magic_module (shared) -> DSO
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ httpd -M | grep log_config -> モジュール確認
    
    コマンドの実行結果
    --------------------------------------------------
    log_config_module (shared) -> DSO
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ httpd -M | grep mime_module -> モジュール確認
    
    コマンドの実行結果
    --------------------------------------------------
    mime_module (shared) -> DSO
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf -> 設定ファイルを一新する
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/etc/httpd"
    Listen 80
    Include conf.modules.d/*.conf
    User apache
    Group apache
    ServerAdmin makoto@localhost                    // 削除
    ServerName www.avswa.com:80
    DocumentRoot "/var/www/html"                    // 削除
    ErrorLog "logs/error_log"                       // 削除
    LogLevel warn
    ServerTokens Prod
    AddDefaultCharset UTF-8
    ErrorDocument 404 /missing.html
    EnableSendfile on
    AccessFileName .htaccess
    IncludeOptional conf.d/*.conf
    DirectoryIndex index.html                       // 追加
    ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"       // 追加
    MIMEMagicFile conf/magic                        // 追加
    LogFormat "%h %l %u %t \"%r\" %>s %b" common    // 追加
    TypesConfig /etc/mime.types                     // 追加
    AddType application/x-compress .Z               // 追加
    AddType application/x-gzip .gz .tgz             // 追加
    AddType text/html .shtml                        // 追加
    AddOutputFilter INCLUDES .shtml                 // 追加
    
    <Directory />
      AllowOverride none
      Require all denied
    </Directory>
    
    <Directory "/var/www">
      AllowOverride None
      Require all denied
    </Directory>
    
    <VirtualHost *:80>                              // 追加
      ServerAdmin makoto@localhost                  // 追加
      ServerName site1.avswa.com:80                 // 追加
      DocumentRoot "/var/www/site1"                 // 追加
      ErrorLog "logs/site1_err_log"                 // 追加
      CustomLog "logs/site1_log" common             // 追加
    </VirtualHost>                                  // 追加
    
    <VirtualHost *:80>                              // 追加
      ServerAdmin makoto@localhost                  // 追加
      ServerName site2.avswa.com:80                 // 追加
      DocumentRoot "/var/www/site2"                 // 追加
      ErrorLog "logs/site2_err_log"                 // 追加
      CustomLog "logs/site2_log" common             // 追加
    </VirtualHost>                                  // 追加
    
    <Directory "/var/www/site1">                    // 追加
      AllowOverride None                            // 追加
      Require all granted                           // 追加
      Options Indexes FollowSymLinks                // 追加
    </Directory>                                    // 追加
    
    <Directory "/var/www/site2">                    // 追加
      AllowOverride None                            // 追加
      Require all granted                           // 追加
      Options Indexes FollowSymLinks                // 追加
    </Directory>                                    // 追加
    
    <Directory "/var/www/html">                     // 削除
      AllowOverride None                            // 削除
      Require all granted                           // 削除
      Options Indexes FollowSymLinks                // 削除
    </Directory>                                    // 削除
    
    <Directory "/var/www/html/dirA">                // 削除
      AllowOverride All                             // 削除
      Require all denied                            // 削除
      Options Indexes                               // 削除
    </Directory>                                    // 削除
    
    <Directory "/var/www/html/dirB">                // 削除
      AuthType basic                                // 削除
      AuthName "Enter user and pass"                // 削除
      AuthUserFile /etc/httpd/conf/htpasswd         // 削除
      AllowOverride All                             // 削除
      Require valid-user                            // 削除
      Options Indexes                               // 削除
    </Directory>                                    // 削除
    
    <Directory "/var/www/html/dirC">                // 削除
      AuthType digest                               // 削除
      AuthName "dirC"                               // 削除
      AuthUserFile /etc/httpd/conf/htdigest         // 削除
      AllowOverride All                             // 削除
      Require valid-user                            // 削除
      Options Indexes                               // 削除
    </Directory>                                    // 削除
    
    <Directory "/var/www/html/dirD">                // 削除
      AllowOverride All                             // 削除
      Order allow,deny                              // 削除
      Allow from all                                // 削除
      Deny from 192.168.122.12/32                   // 削除
      Options Indexes                               // 削除
    </Directory>                                    // 削除
    
    <Directory "/var/www/html/dirE">                // 削除
      AllowOverride All                             // 削除
      Require all denied                            // 削除
      Require ip 192.168.122.12                     // 削除
      Options Indexes                               // 削除
    </Directory>                                    // 削除
    
    <Directory "/var/www/cgi-bin">
      AllowOverride None
      Require all granted
      Options None
    </Directory>
    
    <IfModule dir_module>                           // 削除
      DirectoryIndex index.html                     // 削除
    </IfModule>                                     // 削除
    
    <IfModule alias_module>                         // 削除
      ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"     // 削除
    </IfModule>                                     // 削除
    
    <Files ".ht*">
      Require all denied
    </Files>
    
    <Location /server-status>
      SetHandler server-status
      AllowOverride None
      Require all denied
    </Location>
    
    <Location /server-info>
      SetHandler server-info
      AllowOverride None
      Require all denied
    </Location>
    
    <IfModule mime_magic_module>                    // 削除
      MIMEMagicFile conf/magic                      // 削除
    </IfModule>                                     // 削除
    
    <IfModule log_config_module>                    // 削除
      LogFormat "%h %l %u %t \"%r\" %>s %b" common  // 削除
      CustomLog "logs/access_log" common            // 削除
    </IfModule>                                     // 削除
    
    <IfModule mime_module>                          // 削除
      TypesConfig /etc/mime.types                   // 削除
      AddType application/x-compress .Z             // 削除
      AddType application/x-gzip .gz .tgz           // 削除
      AddType text/html .shtml                      // 削除
      AddOutputFilter INCLUDES .shtml               // 削除
    </IfModule>                                     // 削除
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo mkdir /var/www/site1
    vm11$ sudo mkdir /var/www/site2
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo chmod 777 /var/www/site1
    vm11$ sudo chmod 777 /var/www/site2
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /var/www/site1/index.html
    vm11$ sudo vi /var/www/site2/index.html
    
    コマンドの実行結果
    --------------------------------------------------
    // site1
    <html><body><h1>Site1</h1></body></html>
    
    // site2
    <html><body><h1>Site2</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl configtest
    
    コマンドの実行結果
    --------------------------------------------------
    Syntax OK
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/hosts
    
    コマンドの実行結果
    --------------------------------------------------
    127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
    ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
    192.168.122.11 vm11 site1.avswa.com site2.avswa.com  // 修正
    192.168.122.12 vm12
    192.168.122.13 vm13
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://site1.avswa.com/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>Site1</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://site2.avswa.com/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>Site2</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo ls -lh /etc/httpd/logs/
    
    コマンドの実行結果
    --------------------------------------------------
    -rw-r--r--. 1 root root 11K  6月 23 05:38 access_log
    -rw-r--r--. 1 root root 53K  6月 23 12:40 error_log
    -rw-r--r--. 1 root root   0  6月 23 12:40 site1_err_log  // エラーログ => データなし
    -rw-r--r--. 1 root root 133  6月 23 12:44 site1_log      // アクセスログ
    -rw-r--r--. 1 root root   0  6月 23 12:40 site2_err_log  // エラーログ => データなし
    -rw-r--r--. 1 root root  72  6月 23 12:44 site2_log      // アクセスログ
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo cat /etc/httpd/logs/site1_log -> アクセスログ
    
    コマンドの実行結果
    --------------------------------------------------
    192.168.122.11 - - [23/Jun/2023:12:44:22 +0900] "GET / HTTP/1.1" 200 41
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo cat /etc/httpd/logs/site2_log -> アクセスログ
    
    コマンドの実行結果
    --------------------------------------------------
    192.168.122.11 - - [23/Jun/2023:12:44:26 +0900] "GET / HTTP/1.1" 200 41
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[018]
  httpd - SSL/TLS - 01
  
[内容]
  ## 作業内容
    認証局作成、自己認証する
  
  ## ディレクトリ構成
    /opt/pki
      |-- /config
            |-- openssl-siteCA.cnf  // 設定ファイル
      |-- /siteCA
            |-- /certs          // 検証用の証明書
            |-- /crl            // 失効リスト
            |-- /newcerts       // 認証局発行の証明書
            |-- /private        // 認証局の秘密鍵
            |-- serial          // シリアル番号
            |-- crlnum          // CRL
            |-- index.txt       // 認証局の管理データベース
            |-- siteCaReq.pem   // 認証局の証明書署名要求
            |-- siteCaCert.pem  // 認証局のデジタル証明書
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Fri Jun 23 16:47:38 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo mkdir -p /opt/pki/config
    vm11$ sudo mkdir -p /opt/pki/siteCA
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo mkdir -p /opt/pki/siteCA/certs
    vm11$ sudo mkdir -p /opt/pki/siteCA/crl
    vm11$ sudo mkdir -p /opt/pki/siteCA/newcerts
    vm11$ sudo mkdir -p /opt/pki/siteCA/private
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /opt/pki/config/openssl-siteCA.cnf -> 設定ファイルの作成
    
    コマンドの実行結果
    --------------------------------------------------
    [ ca ]
      default_ca = CA_default  // セクション「CA_default」を参照
    
    [ CA_default ]
      dir = /opt/pki/siteCA
      certs = $dir/certs
      crl_dir = $dir/crl
      database = $dir/index.txt
      new_certs_dir = $dir/newcerts
      serial = $dir/serial
      crlnumber = $dir/crlnum
      crl = $dir/crl.pem
      RANDFILE = $dir/.rand
      name_opt = CA_default
      cert_opt = CA_default
      default_days = 365
      default_crl_days = 30
      default_bits = 2048
      default_md = sha256
      preserve = no
      policy = policy_match  // セクション「policy_match」を参照
    
    [ policy_match ]
      countryName = match
      stateOrProvinceName = match
      organizationName = match
      organizationalUnitName = optional
      commonName = supplied
      emailAddress = optional
    
    [ v3_ca ]
      subjectKeyIdentifier = hash
      authorityKeyIdentifier = keyid:always,issuer
      basicConstraints = CA:true      // CAフラグ
      keyUsage = cRLSign,keyCertSign  // 鍵用途(CRL署名、鍵署名)
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo touch /opt/pki/siteCA/serial
    vm11$ sudo touch /opt/pki/siteCA/crlnum
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ su - root
    vm11# echo "01" >> /opt/pki/siteCA/serial
    vm11# echo "00" >> /opt/pki/siteCA/crlnum
    vm11# exit

    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo touch /opt/pki/siteCA/index.txt -> データベース作成
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo openssl genrsa                         // 認証局の秘密鍵を生成
        > -out /opt/pki/siteCA/private/siteCaKey.pem  // 秘密鍵ファイル
        > -aes256                                     // 暗号化アルゴリズム
        > -passout pass:ma0122ma                      // 秘密鍵のパスフレーズ
        > 2048                                        // 鍵長
    
    コマンドの実行結果
    --------------------------------------------------
    Generating RSA private key, 2048 bit long modulus …
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo openssl req                            // 証明書署名要求(CSR)を作成
        > -new                                        // 新規作成
        > -key /opt/pki/siteCA/private/siteCaKey.pem  // 秘密鍵ファイル
        > -out /opt/pki/siteCA/siteCaReq.pem          // 証明書署名要求(CSR)
        > -passin pass:ma0122ma                       // 秘密鍵のパスフレーズ
        > -subj "/C=JP/ST=Saitama/L=Tokorozawa/O=avswa.com/CN=$siteCA.avswa.com"  // 認証局の情報
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm12$ sudo openssl ca                             // 証明書署名要求(CSR)を自己署名・サーバー証明書を作成
        > -config /opt/pki/config/openssl-siteCA.cnf  // 設定ファイル
        > -batch                                      // 対話形式は使用しない
        > -in /opt/pki/siteCA/siteCaReq.pem           // 証明書署名要求(CSR)
        > -out /opt/pki/siteCA/siteCaCert.pem         // サーバー証明書
        > -keyfile /opt/pki/siteCA/private/siteCaKey.pem  // 秘密鍵ファイル
        > -selfsign                                   // 自己署名
        > -passin pass:ma0122ma                       // 秘密鍵のパスフレーズ
        > -extensions v3_ca                           // 設定ファイルの拡張セクションもロード
    
    コマンドの実行結果
    --------------------------------------------------
    Using configuration from /opt/pki/config/openssl-siteCA.cnf
    Check that the request matches the signature
    Signature ok
    Certificate Details:
        Serial Number: 1 (0x1)
        Validity
            Not Before: Jun 26 04:19:41 2023 GMT
            Not After : Jun 25 04:19:41 2024 GMT
        Subject:
            countryName         = JP
            stateOrProvinceName = Saitama
            organizationName    = avswa.com
            commonName          = .avswa.com
        X509v3 extensions:
            X509v3 Subject Key Identifier: 
                67:55:D1:BE:13:72:ED:15:D6:2C:66:BE:74:F4:2B:F0:ED:94:3A:58
            X509v3 Authority Key Identifier: 
                keyid:67:55:D1:BE:13:72:ED:15:D6:2C:66:BE:74:F4:2B:F0:ED:94:3A:58
            X509v3 Basic Constraints: 
                CA:TRUE
            X509v3 Key Usage: 
                Certificate Sign, CRL Sign
    Certificate is to be certified until Jun 25 04:19:41 2024 GMT (365 days)
    Write out database with 1 new entries
    Data Base Updated
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo openssl x509                           // サーバー証明書の内容確認
        > -in /opt/pki/siteCA/siteCaCert.pem          // サーバー証明書
        > -text                                       // テキスト出力
        > -noout                                      // 出力ファイルなし
    
    コマンドの実行結果
    --------------------------------------------------
    Certificate:
        Data:
            Version: 3 (0x2)
            Serial Number: 1 (0x1)
            Signature Algorithm: sha256WithRSAEncryption
            Issuer: C = JP, ST = Saitama, O = avswa.com, CN = .avswa.com
            Validity
                Not Before: Jun 26 04:19:41 2023 GMT
                Not After : Jun 25 04:19:41 2024 GMT
            Subject: C = JP, ST = Saitama, O = avswa.com, CN = .avswa.com
            Subject Public Key Info:
                Public Key Algorithm: rsaEncryption
                    RSA Public-Key: (2048 bit)
                    Modulus:
                    …
                    Exponent: 65537 (0x10001)
            X509v3 extensions:
                X509v3 Subject Key Identifier: 
                    67:55:D1:BE:13:72:ED:15:D6:2C:66:BE:74:F4:2B:F0:ED:94:3A:58
                X509v3 Authority Key Identifier: 
                    keyid:67:55:D1:BE:13:72:ED:15:D6:2C:66:BE:74:F4:2B:F0:ED:94:3A:58
                X509v3 Basic Constraints: 
                    CA:TRUE
                X509v3 Key Usage: 
                    Certificate Sign, CRL Sign
        Signature Algorithm: sha256WithRSAEncryption
        …
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ cat /opt/pki/siteCA/index.txt -> データベース
    
    コマンドの実行結果
    --------------------------------------------------
    V 240625041941Z 01 unknown /C=JP/ST=Saitama/O=avswa.com/CN=.avswa.com
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ cat /opt/pki/siteCA/serial -> シリアル番号
    
    コマンドの実行結果
    --------------------------------------------------
    02 -> 次に使用される番号の模様
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[019]
  httpd - SSL/TLS - 02
  
[内容]
  ## 作業内容
    認証局で各サイトの署名を行いサーバー証明書を作成
  
  ## ディレクトリ構成
    /opt/pki
      |-- /config
            |-- openssl-site.cnf  // 設定ファイル => 作成対象
      |-- /siteCA
            |-- …
            |-- /private          // 認証局の秘密鍵
            |-- siteCaCert.pem    // 認証局のサーバー証明書
      |-- /site
            |-- site1.csr         // サイト(site1)の証明書署名要求(CSR)
            |-- site1.crt         // サイト(site1)のサーバー証明書
            |-- site2.csr         // サイト(site2)の証明書署名要求(CSR)
            |-- site2.crt         // サイト(site2)のサーバー証明書
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Mon Jun 26 13:02:57 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo mkdir -p /opt/pki/site
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /opt/pki/config/openssl-site.cnf -> 設定ファイルの作成
    
    コマンドの実行結果
    --------------------------------------------------
    [ ca ]
      default_ca = CA_default  // セクション「CA_default」を参照
    
    [ CA_default ]
      dir = /opt/pki/siteCA
      certs = $dir/certs
      crl_dir = $dir/crl
      database = $dir/index.txt
      new_certs_dir = $dir/newcerts
      serial = $dir/serial
      crlnumber = $dir/crlnum
      crl = $dir/crl.pem
      RANDFILE = $dir/.rand
      name_opt = CA_default
      cert_opt = CA_default
      default_days = 365
      default_crl_days = 30
      default_bits = 2048
      default_md = sha256
      preserve = no
      policy = policy_match  // セクション「policy_match」を参照
    
    [ policy_match ]
      countryName = match
      stateOrProvinceName = match
      organizationName = match
      organizationalUnitName = optional
      commonName = supplied
      emailAddress = optional
    
    [ v3_ca ]
      subjectKeyIdentifier = hash
      authorityKeyIdentifier = keyid:always,issuer
      basicConstraints = CA:false                                   // CAフラグ
      keyUsage = nonRepudiation, digitalSignature, keyEncipherment  // 鍵用途(デジタル署名、鍵暗号化)
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo openssl genrsa                             // サイト(site1)の秘密鍵を作成
        > -out /opt/pki/site/site1.key                    // 秘密鍵ファイル
        > -aes256                                         // 暗号化アルゴリズム
        > -passout pass:ma0122ma                          // 秘密鍵のパスフレーズ
        > 2048                                            // 鍵長
    
    コマンドの実行結果
    --------------------------------------------------
    Generating RSA private key, 2048 bit long modulus …
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo openssl genrsa                             // サイト(site2)の秘密鍵を作成
        > -out /opt/pki/site/site2.key                    // 秘密鍵ファイル
        > -aes256                                         // 暗号化アルゴリズム
        > -passout pass:ma0122ma                          // 秘密鍵のパスフレーズ
        > 2048                                            // 鍵長
    
    コマンドの実行結果
    --------------------------------------------------
    Generating RSA private key, 2048 bit long modulus …
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo openssl req                                // サイト(site1)の証明書署名要求(CSR)を作成
        > -new                                            // 新規作成
        > -key /opt/pki/site/site1.key                    // 秘密鍵ファイル
        > -out /opt/pki/site/site1.csr                    // 証明書署名要求(CSR)
        > -passin pass:ma0122ma                           // 秘密鍵のパスフレーズ
        > -subj "/C=JP/ST=Saitama/L=Tokorozawa/O=avswa.com/CN=site1.avswa.com"  // サイト情報
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo openssl req                                // サイト(site2)の証明書署名要求(CSR)を作成
        > -new                                            // 新規作成
        > -key /opt/pki/site/site2.key                    // 秘密鍵ファイル
        > -out /opt/pki/site/site2.csr                    // 証明書署名要求(CSR)
        > -passin pass:ma0122ma                           // 秘密鍵のパスフレーズ
        > -subj "/C=JP/ST=Saitama/L=Tokorozawa/O=avswa.com/CN=site2.avswa.com"  // サイト情報
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo openssl ca                                 // サイト(site1)を署名
        > -config /opt/pki/config/openssl-site.cnf        // 設定ファイル
        > -batch                                          // 対話形式は使用しない
        > -in /opt/pki/site/site1.csr                     // 証明書署名要求(CSR)
        > -out /opt/pki/site/site1.crt                    // サーバー証明書
        > -keyfile /opt/pki/siteCA/private/siteCaKey.pem  // 秘密鍵ファイル(CA)
        > -cert /opt/pki/siteCA/siteCaCert.pem            // サーバー証明書(CA)
        > -passin pass:ma0122ma                           // 秘密鍵のパスフレーズ
        > -extensions v3_ca                               // 設定ファイルの拡張セクションもロード
    
    コマンドの実行結果
    --------------------------------------------------
    Using configuration from /opt/pki/config/openssl-site.cnf
    Check that the request matches the signature
    Signature ok
    Certificate Details:
        Serial Number: 2 (0x2)
        Validity
            Not Before: Jun 26 04:56:34 2023 GMT
            Not After : Jun 25 04:56:34 2024 GMT
        Subject:
            countryName         = JP
            stateOrProvinceName = Saitama
            organizationName    = avswa.com
            commonName          = site1.avswa.com
        X509v3 extensions:
            X509v3 Subject Key Identifier: 
                C1:F8:7D:CC:69:99:88:BA:5E:23:C1:D8:A6:39:C4:34:9D:6F:36:73
            X509v3 Authority Key Identifier: 
                keyid:67:55:D1:BE:13:72:ED:15:D6:2C:66:BE:74:F4:2B:F0:ED:94:3A:58
            X509v3 Basic Constraints: 
                CA:FALSE
            X509v3 Key Usage: 
                Digital Signature, Non Repudiation, Key Encipherment
    Certificate is to be certified until Jun 25 04:56:34 2024 GMT (365 days)
    Write out database with 1 new entries
    Data Base Updated
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo openssl ca                                 // サイト(site2)を署名
        > -config /opt/pki/config/openssl-site.cnf        // 設定ファイル
        > -batch                                          // 対話形式は使用しない
        > -in /opt/pki/site/site2.csr                     // 証明書署名要求(CSR)
        > -out /opt/pki/site/site2.crt                    // サーバー証明書
        > -keyfile /opt/pki/siteCA/private/siteCaKey.pem  // 秘密鍵ファイル(CA)
        > -cert /opt/pki/siteCA/siteCaCert.pem            // サーバー証明書(CA)
        > -passin pass:ma0122ma                           // 秘密鍵のパスフレーズ
        > -extensions v3_ca                               // 設定ファイルの拡張セクションもロード
    
    コマンドの実行結果
    --------------------------------------------------
    Using configuration from /opt/pki/config/openssl-site.cnf
    Check that the request matches the signature
    Signature ok
    Certificate Details:
        Serial Number: 3 (0x3)
        Validity
            Not Before: Jun 26 05:01:31 2023 GMT
            Not After : Jun 25 05:01:31 2024 GMT
        Subject:
            countryName         = JP
            stateOrProvinceName = Saitama
            organizationName    = avswa.com
            commonName          = site2.avswa.com
        X509v3 extensions:
            X509v3 Subject Key Identifier: 
                73:2E:1C:53:9D:26:C5:21:92:50:B5:7E:B5:DD:26:20:C7:B4:97:84
            X509v3 Authority Key Identifier: 
                keyid:67:55:D1:BE:13:72:ED:15:D6:2C:66:BE:74:F4:2B:F0:ED:94:3A:58
            X509v3 Basic Constraints: 
                CA:FALSE
            X509v3 Key Usage: 
                Digital Signature, Non Repudiation, Key Encipherment
    Certificate is to be certified until Jun 25 05:01:31 2024 GMT (365 days)
    Write out database with 1 new entries
    Data Base Updated
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[020]
  httpd - SSL/TLS - 03
  
[内容]
  ## 作業内容
    バーチャルホスト内の各サイトをHTTPS化
  
  ## ディレクトリ構成
    /opt/pki
      |-- /site
            |-- site1.key  // サイト(site1)の秘密鍵
            |-- site1.crt  // サイト(site1)のサーバー証明書
            |-- site2.key  // サイト(site2)の秘密鍵
            |-- site2.crt  // サイト(site2)のサーバー証明書
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Mon Jun 26 13:44:26 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ls -lh /opt/pki/site | grep -E 'site1|site2' -> サーバー証明書の確認
    
    コマンドの実行結果
    --------------------------------------------------
    -rw-r--r--. 1 root root 4.3K  6月 26 13:56 site1.crt
    -rw-r--r--. 1 root root 1001  6月 26 13:49 site1.csr
    -rw-------. 1 root root 1.8K  6月 26 13:47 site1.key
    -rw-r--r--. 1 root root 4.3K  6月 26 14:01 site2.crt
    -rw-r--r--. 1 root root 1001  6月 26 13:50 site2.csr
    -rw-------. 1 root root 1.8K  6月 26 13:48 site2.key
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ httpd -M | grep ssl -> モジュール確認
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なしのためインストールが必要
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo dnf -y install mod_ssl
    
    コマンドの実行結果
    --------------------------------------------------
    (省略)
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf/httpd.conf
    
    コマンドの実行結果
    --------------------------------------------------
    ServerRoot "/etc/httpd"
    Listen 80
    Include conf.modules.d/*.conf
    User apache
    Group apache
    ServerName www.avswa.com
    LogLevel warn
    ServerTokens Prod
    AddDefaultCharset UTF-8
    ErrorDocument 404 /missing.html
    EnableSendfile on
    AccessFileName .htaccess
    IncludeOptional conf.d/*.conf
    DirectoryIndex index.html
    ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"
    MIMEMagicFile conf/magic
    LogFormat "%h %l %u %t \"%r\" %>s %b" common
    TypesConfig /etc/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
    AddType text/html .shtml
    AddOutputFilter INCLUDES .shtml
    
    <Directory />
      AllowOverride none
      Require all denied
    </Directory>
    
    <Directory "/var/www">
      AllowOverride None
      Require all denied
    </Directory>
    
    <VirtualHost *:80>
      ServerAdmin makoto@localhost
      ServerName site1.avswa.com:80
      DocumentRoot "/var/www/site1"
      ErrorLog "logs/site1_err_log"
      CustomLog "logs/site1_log" common
    </VirtualHost>
    
    <VirtualHost *:80>
      ServerAdmin makoto@localhost
      ServerName site2.avswa.com:80
      DocumentRoot "/var/www/site2"
      ErrorLog "logs/site2_err_log"
      CustomLog "logs/site2_log" common
    </VirtualHost>
    
    <Directory "/var/www/site1">
      AllowOverride None
      Require all granted
      Options Indexes FollowSymLinks
    </Directory>
    
    <Directory "/var/www/site2">
      AllowOverride None
      Require all granted
      Options Indexes FollowSymLinks
    </Directory>
    
    <Directory "/var/www/cgi-bin">
      AllowOverride None
      Require all granted
      Options None
    </Directory>
    
    <Files ".ht*">
      Require all denied
    </Files>
    
    <Location /server-status>
      SetHandler server-status
      AllowOverride None
      Require all denied
    </Location>
    
    <Location /server-info>
      SetHandler server-info
      AllowOverride None
      Require all denied
    </Location>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/httpd/conf.d/ssl.conf -> 設定ファイルの修正
    
    コマンドの実行結果
    --------------------------------------------------
    Listen 443
    
    SSLRandomSeed startup builtin                        // 不明
    SSLRandomSeed connect builtin                        // 不明
    SSLCipherSuite HIGH:MEDIUM:!MD5:!RC4:!3DES           // 暗号化の優先順位
    SSLProxyCipherSuite HIGH:MEDIUM:!MD5:!RC4:!3DES      // 暗号化の優先順位(プロキシ接続)
    SSLHonorCipherOrder on                               // 低負荷の暗号化を自動選択
    SSLProtocol all -SSLv3                               // サポートプロトコル
    SSLProxyProtocol all -SSLv3                          // サポートプロトコル(プロキシ接続)
    SSLPassPhraseDialog exec:/etc/ssl/certs/pass_ssl.sh  // 秘密鍵パスフレーズ入力時の入力方式
    
    <FilesMatch "\.(cgi|shtml|phtml|php)$">
      SSLOptions +StdEnvVars  // SSL/TLS関連の環境変数をCGI/SSIで使用可能
    </FilesMatch>
    
    <Directory "/usr/local/apache2/cgi-bin">
      SSLOptions +StdEnvVars  // SSL/TLS関連の環境変数をCGI/SSIで使用可能
    </Directory>
    
    <VirtualHost *:443>
      ServerName site1.avswa.com:443
      ServerAdmin makoto@localost
      DocumentRoot "/var/www/site1"
      ErrorLog "logs/site1_err_log"
      CustomLog "logs/site1_log" common
      SSLEngine on
      SSLCertificateFile "/opt/pki/site/site1.crt"
      SSLCertificateKeyFile "/opt/pki/site/site1.key"
    </VirtualHost>
    
    <VirtualHost *:443>
      ServerName site2.avswa.com:443
      ServerAdmin makoto@localhost
      DocumentRoot "/var/www/site2"
      ErrorLog "logs/site2_err_log"
      CustomLog "logs/site2_log" common
      SSLEngine on
      SSLCertificateFile "/opt/pki/site/site2.crt"
      SSLCertificateKeyFile "/opt/pki/site/site2.key"
    </VirtualHost>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/ssl/certs/pass_ssl.sh -> スクリプト作成
    
    コマンドの実行結果
    --------------------------------------------------
    #!/bin/bash
    
    case $1 in
      site1.avswa.com:443)
        echo 'ma0122ma';;
      site2.avswa.com:443)
        echo 'ma0122ma';;
    esac
    
    exit 0
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo chmod 755 /etc/ssl/certs/pass_ssl.sh -> モジュール確認
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ httpd -M | grep ssl -> モジュール確認
    
    コマンドの実行結果
    --------------------------------------------------
    ssl_module (shared) -> DSO
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ getenforce
    
    コマンドの実行結果
    --------------------------------------------------
    Enforcing
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo setenforce 0
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl configtest 
    
    コマンドの実行結果
    --------------------------------------------------
    Syntax OK
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo apachectl graceful -> 安全に再起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://site1.avswa.com/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>Site1</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://site2.avswa.com/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>Site2</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl --cacert /opt/pki/siteCA/siteCaCert.pem https://site1.avswa.com/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>Site1</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl --cacert /opt/pki/siteCA/siteCaCert.pem https://site2.avswa.com/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>Site2</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[021]
  httpd - ソフトウェア停止
  
[内容]
  ## 作業内容
    ソフトウェア停止
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Mon Jun 26 15:55:17 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo systemctl stop httpd
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo systemctl disable httpd
    
    コマンドの実行結果
    --------------------------------------------------
    Removed /etc/systemd/system/multi-user.target.wants/httpd.service.
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[022]
  nginx - 基本設定
  
[内容]
  ## 作業内容
    基本設定
  
  ## コマンド(nginx)
    nginx            // Nginxを起動する
    nginx -s stop    // Nginxを停止する
    nginx -s quit    // Nginxを安全に停止する
    nginx -s reload  // Nginxの設定ファイルを読み込む
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Tue Jun 27 12:50:44 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ps aux | grep nginx | grep -v grep
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> ソフトウェアが起動していない
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -> ソフトウェア起動
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ ps aux | grep nginx | grep -v grep
    
    コマンドの実行結果
    --------------------------------------------------
    root   3378  0.0  0.1  103424  2168 ?  Ss   13:07   0:00  nginx: master process nginx  // マスタープロセス
    nginx  3379  0.0  0.5  124740  7984 ?  S    13:07   0:00  nginx: worker process        // ワーカープロセス
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ http://vm11.avswa.com/ -> ホスト側のブラウザから閲覧
    
    コマンドの実行結果
    --------------------------------------------------
    (ウェルカムページが表示)
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -s quit -> 安全に停止
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo cp -p /etc/nginx/nginx.conf /etc/nginx/nginx.conf.org -> 設定ファイルのバックアップ
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/nginx.conf
    
    コマンドの実行結果
    --------------------------------------------------
    user nginx;
    worker_processes 1;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid;
    include /usr/share/nginx/modules/*.conf;
    
    ## Events Modules
    events {
      worker_connections 1024;
    }
    
    ## HTTP Server
    http {
      include mime.types;
      default_type application/octet-stream;
      sendfile on;
      keepalive_timeout 65;
      log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/access.log main;
      
      server {
        listen 80;                             // Port 80
        server_name vm11.avswa.com;            // Hostname
        error_page 404 /404.html;              // Error 404 => http://vm11.avswa.com/404.html => /etc/nginx/html/404.html
        error_page 500 502 503 504 /50x.html;  // Error 50x => http://vm11.avswa.com/50x.html => /etc/nginx/html/50x.html
        
        location / {                           // Location 
          root /etc/nginx/html;                // http://vm11.avswa.com/ => /etc/nginx/html/
          index index.html index.htm;
        }
        
        location = /404.html {                 // Location http://vm11.avswa.com/404.html
          root /etc/nginx/html;                // DocumentRoot => /etc/nginx/html
        }
        
        location = /50x.html {                 // Location http://vm11.avswa.com/50x.html
          root /etc/nginx/html;                // DocumentRoot => /etc/nginx/html
        }
      }
    }
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -t
    
    コマンドの実行結果
    --------------------------------------------------
    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/nginx.conf test is successful
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo mkdir -p /etc/nginx/html
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/html/index.html
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>単独サイト</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/html/404.html
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>Error-404</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/html/50x.html
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>Error-50x</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo systemctl enable nginx
    
    コマンドの実行結果
    --------------------------------------------------
    Created symlink /etc/systemd/system/multi-user.target.wants/nginx.service → /usr/lib/systemd/system/nginx.service.
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo systemctl start nginx
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>単独サイト</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/aaa.html -> 存在しないファイル
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>Error-404</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[023]
  nginx - アクセスログ
  
[内容]
  ## 作業内容
    アクセスログ
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Tue Jun 27 16:01:22 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/nginx.conf
    
    コマンドの実行結果
    --------------------------------------------------
    …
    http {
      …
      log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/access.log main;
      …
    }
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>単独サイト</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>単独サイト</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo cat /var/log/nginx/access.log | tail -n 2
    
    コマンドの実行結果
    --------------------------------------------------
    127.0.0.1 - - [27/Jun/2023:16:30:34 +0900] "GET / HTTP/1.1" 200 51 "-" "curl/7.61.1" "-"
    127.0.0.1 - - [27/Jun/2023:16:30:36 +0900] "GET / HTTP/1.1" 200 51 "-" "curl/7.61.1" "-"
    
    $remote_addr            => 127.0.0.1
    $remote_user            => -
    [$time_local]           => [27/Jun/2023:16:30:34 +0900]
    "$request"              => "GET / HTTP/1.1"
    $status                 => 200
    $body_bytes_sent        => 51
    "$http_referer"         => "-"
    "$http_user_agent"      => "curl/7.61.1"
    "$http_x_forwarded_for" => "-"
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[024]
  nginx - エラーログ
  
[内容]
  ## 作業内容
    エラーログ
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Tue Jun 27 16:30:10 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/nginx.conf
    
    コマンドの実行結果
    --------------------------------------------------
    …
    error_log /var/log/nginx/error.log;
    …
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo cat /var/log/nginx/error.log | tail
    
    コマンドの実行結果
    --------------------------------------------------
    2023/06/27 15:10:04 [error] 3570#0: *14 open() "/etc/nginx/html/501.html" failed (2: No such file or directory), client: 192.168.122.11, server: vm11.avswa.com, request: "GET /501.html HTTP/1.1", host: "vm11.avswa.com"
    2023/06/27 15:10:43 [error] 3570#0: *15 open() "/etc/nginx/html/aaa.html" failed (2: No such file or directory), client: 192.168.122.1, server: vm11.avswa.com, request: "GET /aaa.html HTTP/1.1", host: "vm11.avswa.com"
    2023/06/27 15:35:35 [error] 3621#0: *18 open() "/etc/nginx/html/aaa.html" failed (2: No such file or directory), client: 127.0.0.1, server: vm11.avswa.com, request: "GET /aaa.html HTTP/1.1", host: "localhost"
    2023/06/27 15:38:33 [error] 3621#0: *19 open() "/etc/nginx/html/aaa.html" failed (2: No such file or directory), client: 127.0.0.1, server: vm11.avswa.com, request: "GET /aaa.html HTTP/1.1", host: "localhost"
    2023/06/27 15:38:51 [error] 3621#0: *21 open() "/etc/nginx/html/aaa.html" failed (2: No such file or directory), client: 127.0.0.1, server: vm11.avswa.com, request: "GET /aaa.html HTTP/1.1", host: "localhost"
    2023/06/27 16:24:33 [error] 3759#0: *26 open() "/etc/nginx/html/aaa.html" failed (2: No such file or directory), client: 127.0.0.1, server: vm11.avswa.com, request: "GET /aaa.html HTTP/1.1", host: "localhost"
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[025]
  nginx - リダイレクト
  
[内容]
  ## 作業内容
    リダイレクト
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Tue Jun 27 17:24:50 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/nginx.conf
    
    コマンドの実行結果
    --------------------------------------------------
    user nginx;
    worker_processes 1;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid;
    include /usr/share/nginx/modules/*.conf;
    
    ## Events Modules
    events {
      worker_connections 1024;
    }
    
    ## HTTP Server
    http {
      include mime.types;
      default_type application/octet-stream;
      sendfile on;
      keepalive_timeout 65;
      log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/access.log main;
      
      server {
        listen 80;
        server_name vm11.avswa.com;
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        rewrite ^/index.html$ work1.html redirect;  // 追加 : http://vm11.avswa.com/index.html => http://vm11.avswa.com/work1.html
        
        location / {
          root /etc/nginx/html;
          index index.html index.htm;
        }
        
        location = /404.html {
          root /etc/nginx/html;
        }
        
        location = /50x.html {
          root /etc/nginx/html;
        }
      }
    }
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/html/work1.html
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>Work1</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -t
    
    コマンドの実行結果
    --------------------------------------------------
    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/nginx.conf test is successful
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -s reload -> 設定を再ロード
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/index.html
    
    コマンドの実行結果
    --------------------------------------------------
    <html>
    <head>
    <title>302 Found</title>
    </head>
    <body bgcolor="white">
    <center><h1>302 Found</h1></center>  // デフォルトではステータス(302)を返す模様
    <hr>
    <center>nginx/1.14.1</center>
    </body>
    </html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/nginx.conf
    
    コマンドの実行結果
    --------------------------------------------------
    …
      server {
        …
        rewrite ^/index.html$ work1.html redirect;  // 削除
        …
      }
    …
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo rm /etc/nginx/html/work1.html
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -s reload -> 設定を再ロード
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[026]
  nginx - バージョン情報
  
[内容]
  ## 作業内容
    バージョン情報
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Tue Jun 27 20:34:24 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl -I http://localhost/
    
    コマンドの実行結果
    --------------------------------------------------
    HTTP/1.1 200 OK
    Server: nginx/1.14.1  // バージョン情報が見えてしまう
    Date: Tue, 27 Jun 2023 12:02:40 GMT
    Content-Type: text/html
    Content-Length: 51
    Last-Modified: Tue, 27 Jun 2023 05:54:02 GMT
    Connection: keep-alive
    ETag: "649a797a-33"
    Accept-Ranges: bytes
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/nginx.conf
    
    コマンドの実行結果
    --------------------------------------------------
    user nginx;
    worker_processes 1;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid;
    include /usr/share/nginx/modules/*.conf;
    
    ## Events Modules
    events {
      worker_connections 1024;
    }
    
    ## HTTP Server
    http {
      include mime.types;
      default_type application/octet-stream;
      sendfile on;
      keepalive_timeout 65;
      log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/access.log main;
      server_tokens off;  // 追加
      
      server {
        listen 80;
        server_name vm11.avswa.com;
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location / {
          root /etc/nginx/html;
          index index.html index.htm;
        }
        
        location = /404.html {
          root /etc/nginx/html;
        }
        
        location = /50x.html {
          root /etc/nginx/html;
        }
      }
    }
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -t
    
    コマンドの実行結果
    --------------------------------------------------
    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/nginx.conf test is successful
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -s reload -> 設定を再ロード
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl -I http://localhost/
    
    コマンドの実行結果
    --------------------------------------------------
    HTTP/1.1 200 OK
    Server: nginx  // バージョン情報が見えなくなった
    Date: Tue, 27 Jun 2023 12:04:29 GMT
    Content-Type: text/html
    Content-Length: 51
    Last-Modified: Tue, 27 Jun 2023 05:54:02 GMT
    Connection: keep-alive
    ETag: "649a797a-33"
    Accept-Ranges: bytes
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[027]
  nginx - 各ユーザーのホームディレクトリ公開
  
[内容]
  ## 作業内容
    各ユーザーのホームディレクトリ公開
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Tue Jun 27 21:01:23 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/nginx.conf
    
    コマンドの実行結果
    --------------------------------------------------
    user nginx;
    worker_processes 1;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid;
    include /usr/share/nginx/modules/*.conf;
    
    ## Events Modules
    events {
      worker_connections 1024;
    }
    
    ## HTTP Server
    http {
      include mime.types;
      default_type application/octet-stream;
      sendfile on;
      keepalive_timeout 65;
      log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/access.log main;
      server_tokens off;
      
      server {
        listen 80;
        server_name vm11.avswa.com;
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location / {
          root /etc/nginx/html;
          index index.html index.htm;
        }
        
        location ~ ^/~(.+?)(/.*)?$ {     // 追加
          alias /home/$1/public_html$2;  // 追加
          index index.html index.htm;    // 追加
          autoindex on;                  // 追加
        }                                // 追加
        
        location = /404.html {
          root /etc/nginx/html;
        }
        
        location = /50x.html {
          root /etc/nginx/html;
        }
      }
    }
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -t
    
    コマンドの実行結果
    --------------------------------------------------
    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/nginx.conf test is successful
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -s reload -> 設定を再ロード
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ getenforce
    
    コマンドの実行結果
    --------------------------------------------------
    Enforcing
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo setenforce 0 -> SELinux無効
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ su -c 'curl http://localhost/~user1/' user1
    vm11$ su -c 'curl http://localhost/~user2/' user2
    vm11$ su -c 'curl http://localhost/~user3/' user3
    
    コマンドの実行結果
    --------------------------------------------------
    // user1
    パスワード: (パスワード入力)
    <html><body><h1>User1</h1></body></html>
    
    // user2
    パスワード: (パスワード入力)
    <html><body><h1>User2</h1></body></html>
    
    // user3
    パスワード: (パスワード入力)
    <html><body><h1>User3</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/~user1/
    vm11$ curl http://localhost/~user2/
    vm11$ curl http://localhost/~user3/
    
    コマンドの実行結果
    --------------------------------------------------
    // user1
    <html><body><h1>User1</h1></body></html>
    
    // user2
    <html><body><h1>User2</h1></body></html>
    
    // user3
    <html><body><h1>User3</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[028]
  nginx - アクセス制御
  
[内容]
  ## 作業内容
    アクセス制御
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Thu Jun 29 01:34:50 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/nginx.conf
    
    コマンドの実行結果
    --------------------------------------------------
    user nginx;
    worker_processes 1;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid;
    include /usr/share/nginx/modules/*.conf;
    
    ## Events Modules
    events {
      worker_connections 1024;
    }
    
    ## HTTP Server
    http {
      include mime.types;
      default_type application/octet-stream;
      sendfile on;
      keepalive_timeout 65;
      log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/access.log main;
      server_tokens off;
      
      server {
        listen 80;
        server_name vm11.avswa.com;
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location / {
          root /etc/nginx/html;
          index index.html index.htm;
        }
        
        location /dirA {               // 追加
          alias /etc/nginx/html/dirA;  // 追加
          index index.html index.htm;  // 追加
          allow all;                   // 追加 => 全アドレスがアクセス可
        }                              // 追加
        
        location ~ ^/~(.+?)(/.*)?$ {
          alias /home/$1/public_html$2;
          index index.html index.htm;
          autoindex on;
        }
        
        location = /404.html {
          root /etc/nginx/html;
        }
        
        location = /50x.html {
          root /etc/nginx/html;
        }
      }
    }
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo mkdir /etc/nginx/html/dirA
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/html/dirA/index.html
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>dirA</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -t
    
    コマンドの実行結果
    --------------------------------------------------
    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/nginx.conf test is successful
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -s reload -> 設定を再ロード
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/dirA/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>dirA</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/nginx.conf
    
    コマンドの実行結果
    --------------------------------------------------
    user nginx;
    worker_processes 1;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid;
    include /usr/share/nginx/modules/*.conf;
    
    ## Events Modules
    events {
      worker_connections 1024;
    }
    
    ## HTTP Server
    http {
      include mime.types;
      default_type application/octet-stream;
      sendfile on;
      keepalive_timeout 65;
      log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/access.log main;
      server_tokens off;
      
      server {
        listen 80;
        server_name vm11.avswa.com;
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location / {
          root /etc/nginx/html;
          index index.html index.htm;
        }
        
        location /dirA {
          alias /etc/nginx/html/dirA;
          index index.html index.htm;
          deny all;  // 修正 => 全アドレスをアクセス不可
        }
        
        location ~ ^/~(.+?)(/.*)?$ {
          alias /home/$1/public_html$2;
          index index.html index.htm;
          autoindex on;
        }
        
        location = /404.html {
          root /etc/nginx/html;
        }
        
        location = /50x.html {
          root /etc/nginx/html;
        }
      }
    }
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -t
    
    コマンドの実行結果
    --------------------------------------------------
    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/nginx.conf test is successful
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -s reload -> 設定を再ロード
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/dirA/ -> アクセス不可
    
    コマンドの実行結果
    --------------------------------------------------
    <html>
    <head>
    <title>403 Forbidden</title>
    </head>
    <body bgcolor="white">
    <center><h1>403 Forbidden</h1></center>
    <hr>
    <center>nginx</center>
    </body>
    </html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[029]
  nginx - 基本認証
  
[内容]
  ## 作業内容
    基本認証
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Thu Jun 29 03:11:12 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/nginx.conf
    
    コマンドの実行結果
    --------------------------------------------------
    user nginx;
    worker_processes 1;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid;
    include /usr/share/nginx/modules/*.conf;
    
    ## Events Modules
    events {
      worker_connections 1024;
    }
    
    ## HTTP Server
    http {
      include mime.types;
      default_type application/octet-stream;
      sendfile on;
      keepalive_timeout 65;
      log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/access.log main;
      server_tokens off;
      
      server {
        listen 80;
        server_name vm11.avswa.com;
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location / {
          root /etc/nginx/html;
          index index.html index.htm;
        }
        
        location /dirA {
          alias /etc/nginx/html/dirA;
          index index.html index.htm;
          deny all;
        }
        
        location /dirB {                                  // 追加
          alias /etc/nginx/html/dirB;                     // 追加
          index index.html index.htm;                     // 追加
          auth_basic "Enter user and pass";               // 追加
          auth_basic_user_file /etc/httpd/conf/htpasswd;  // 追加
        }                                                 // 追加
        
        location ~ ^/~(.+?)(/.*)?$ {
          alias /home/$1/public_html$2;
          index index.html index.htm;
          autoindex on;
        }
        
        location = /404.html {
          root /etc/nginx/html;
        }
        
        location = /50x.html {
          root /etc/nginx/html;
        }
      }
    }
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo cat /etc/httpd/conf/htpasswd
    
    コマンドの実行結果
    --------------------------------------------------
    user1:$apr1$Yj0PGaD5$i9rn8DYqtjrKmFvqzf0Ar.
    user2:$apr1$VkwgSRiP$OMjvy3mTjk3KS1W0hIkJV/
    user3:$apr1$lfCeU3jb$cjq.gOW3KQsFsEF6/IqWE.
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo mkdir /etc/nginx/html/dirB
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo chmod 777 /etc/nginx/html/dirB
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/html/dirB/index.html
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>dirB</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -t
    
    コマンドの実行結果
    --------------------------------------------------
    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/nginx.conf test is successful
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -s reload -> 設定を再ロード
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl -u user1:user1 http://localhost/dirB/ -> 基本認証でアクセス
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>dirB</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[030]
  nginx - ホストベースのアクセス制御
  
[内容]
  ## 作業内容
    ホストベースのアクセス制御
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Thu Jun 29 04:11:58 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/nginx.conf
    
    コマンドの実行結果
    --------------------------------------------------
    user nginx;
    worker_processes 1;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid;
    include /usr/share/nginx/modules/*.conf;
    
    ## Events Modules
    events {
      worker_connections 1024;
    }
    
    ## HTTP Server
    http {
      include mime.types;
      default_type application/octet-stream;
      sendfile on;
      keepalive_timeout 65;
      log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/access.log main;
      server_tokens off;
      
      server {
        listen 80;
        server_name vm11.avswa.com;
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location / {
          root /etc/nginx/html;
          index index.html index.htm;
        }
        
        location /dirA {
          alias /etc/nginx/html/dirA;
          index index.html index.htm;
          deny all;
        }
        
        location /dirB {
          alias /etc/nginx/html/dirB;
          index index.html index.htm;
          auth_basic "Enter user and pass";
          auth_basic_user_file /etc/httpd/conf/htpasswd;
        }
        
        location /dirC {               // 追加
          alias /etc/nginx/html/dirC;  // 追加
          index index.html index.htm;  // 追加
          deny 192.168.122.12;         // 追加
        }                              // 追加
        
        location ~ ^/~(.+?)(/.*)?$ {
          alias /home/$1/public_html$2;
          index index.html index.htm;
          autoindex on;
        }
        
        location = /404.html {
          root /etc/nginx/html;
        }
        
        location = /50x.html {
          root /etc/nginx/html;
        }
      }
    }
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo mkdir /etc/nginx/html/dirC
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo chmod 777 /etc/nginx/html/dirC
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/html/dirC/index.html
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>dirC</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -t
    
    コマンドの実行結果
    --------------------------------------------------
    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/nginx.conf test is successful
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -s reload -> 設定を再ロード
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://localhost/dirC/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>dirC</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  $ cd $HOME
  $ ssh vm12 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Fri Jun 23 05:38:20 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm12$ cd $HOME
    vm12$ curl http://vm11.avswa.com/dirC/
    
    コマンドの実行結果
    --------------------------------------------------
    <html>
    <head>
    <title>403 Forbidden</title>
    </head>
    <body bgcolor="white">
    <center><h1>403 Forbidden</h1></center>
    <hr>
    <center>nginx</center>
    </body>
    </html>
    --------------------------------------------------
    
    vm12$ cd $HOME
    vm12$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[031]
  nginx - バーチャルホスト
  
[内容]
  ## 作業内容
    名前ベースのバーチャルホスト
  
[確認]
  $ cd $HOME
  $ ssh vm11 -> 公開鍵認証でSSH接続
  
  コマンドの実行結果
  --------------------------------------------------
  Last login: Thu Jun 29 04:47:29 2023 from 192.168.122.1
  --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/nginx.conf -> 設定ファイルを一新する
    
    コマンドの実行結果
    --------------------------------------------------
    user nginx;
    worker_processes 1;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid;
    include /usr/share/nginx/modules/*.conf;
    
    ## Events Modules
    events {
      worker_connections 1024;
    }
    
    ## HTTP Server
    http {
      include mime.types;
      default_type application/octet-stream;
      sendfile on;
      keepalive_timeout 65;
      log_format main '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/access.log main;
      server_tokens off;
      
      server {
        listen 80;
        server_name site1.avswa.com;
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location / {
          root /etc/nginx/html/site1;
          index index.html index.htm;
        }
        
        location = /404.html {
          root /etc/nginx/html;
        }
        
        location = /50x.html {
          root /etc/nginx/html;
        }
      }
      
      server {
        listen 80;
        server_name site2.avswa.com;
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location / {
          root /etc/nginx/html/site2;
          index index.html index.htm;
        }
        
        location = /404.html {
          root /etc/nginx/html;
        }
        
        location = /50x.html {
          root /etc/nginx/html;
        }
      }
    }
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo mkdir /etc/nginx/html/site1
    vm11$ sudo mkdir /etc/nginx/html/site2
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo chmod 777 /etc/nginx/html/site1
    vm11$ sudo chmod 777 /etc/nginx/html/site2
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/nginx/html/site1/index.html
    vm11$ sudo vi /etc/nginx/html/site2/index.html
    
    コマンドの実行結果
    --------------------------------------------------
    // site1
    <html><body><h1>Site1</h1></body></html>
    
    // site2
    <html><body><h1>Site2</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -t
    
    コマンドの実行結果
    --------------------------------------------------
    nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/nginx.conf test is successful
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo nginx -s reload -> 設定を再ロード
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo vi /etc/hosts
    
    コマンドの実行結果
    --------------------------------------------------
    127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
    ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
    192.168.122.11 vm11 site1.avswa.com site2.avswa.com  // 修正
    192.168.122.12 vm12
    192.168.122.13 vm13
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://site1.avswa.com/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>Site1</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ curl http://site2.avswa.com/
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>Site2</h1></body></html>
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo ls -lh /var/log/nginx
    
    コマンドの実行結果
    --------------------------------------------------
    -rw-r--r--. 1 root root  12K  6月 29 05:33 access.log
    -rw-r--r--. 1 root root 8.9K  6月 29 05:33 error.log
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ sudo tail /var/log/nginx/access.log -> アクセスログ
    
    コマンドの実行結果
    --------------------------------------------------
    192.168.122.11 - - [29/Jun/2023:05:33:34 +0900] "GET / HTTP/1.1" 200 41 "-" "curl/7.61.1" "-"
    192.168.122.11 - - [29/Jun/2023:05:33:39 +0900] "GET / HTTP/1.1" 200 41 "-" "curl/7.61.1" "-"
    --------------------------------------------------
    
    vm11$ cd $HOME
    vm11$ exit
    
    コマンドの実行結果
    --------------------------------------------------
    Connection to vm11 closed.
    --------------------------------------------------
    
  以下の確認に続く
  
================================================================================
[01]
  ソースから構築 - 01 (APR)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install wget gcc expat-devel (パッケージ追加)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://www.apache.org/dist/apr/apr-1.7.0.tar.gz (ソース取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://www.apache.org/dist/apr/apr-1.7.0.tar.gz.sha256 (チェックサム取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo sha256sum -c apr-1.7.0.tar.gz.sha256 (チェックサム確認)
  
  コマンドの実行結果
  --------------------------------------------------
  apr-1.7.0.tar.gz: 完了
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf apr-1.7.0.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-1.7.0
  vm12$ sudo ./configure --prefix=/usr/local/apr-1.7.0 (Makefile生成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-1.7.0
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-1.7.0
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[02]
  ソースから構築 - 02 (APR-Util)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://dlcdn.apache.org//apr/apr-util-1.6.1.tar.gz (ソース取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://www.apache.org/dist/apr/apr-util-1.6.1.tar.gz.sha256 (チェックサム取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo sha256sum -c apr-util-1.6.1.tar.gz.sha256 (チェックサム確認)
  
  コマンドの実行結果
  --------------------------------------------------
  apr-util-1.6.1.tar.gz: 完了
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf apr-util-1.6.1.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-util-1.6.1
  vm12$ sudo ./configure --prefix=/usr/local/apr-util-1.6.1 --with-apr=/usr/local/apr-1.7.0 (Makefile生成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-util-1.6.1
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/apr-util-1.6.1
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[03]
  ソースから構築 - 03 (PCRE)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install gcc-c++ (パッケージ追加)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src (ソース取得)
  vm12$ sudo wget --no-check-certificate https://sourceforge.net/projects/pcre/files/pcre/8.45/pcre-8.45.tar.gz
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf pcre-8.45.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/pcre-8.45
  vm12$ sudo ./configure --prefix=/usr/local/pcre-8.45 (Makefile生成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/pcre-8.45
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/pcre-8.45
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[04]
  ソースから構築 - 04 (OPENSSL)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install perl (パッケージ追加)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://www.openssl.org/source/openssl-1.1.0h.tar.gz (ソース取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf openssl-1.1.0h.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/openssl-1.1.0h
  vm12$ sudo ./config --openssldir=/usr/local/openssl-1.1.0 (Makefile生成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/openssl-1.1.0h
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/openssl-1.1.0h
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[05]
  ソースから構築 - 05 (NGHTTP2)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd /usr/local/src (ソース取得)
  vm12$ sudo wget --no-check-certificate https://github.com/nghttp2/nghttp2/releases/download/v1.31.0/nghttp2-1.31.0.tar.gz
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf nghttp2-1.31.0.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/nghttp2-1.31.0 (Makefile生成)
  vm12$ sudo env OPENSSL_CFLAGS="-I/usr/local/openssl/include" OPENSSL_LIBS="-L/usr/local/openssl/lib -lssl -lcrypto" ./configure
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/nghttp2-1.31.0
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/nghttp2-1.31.0
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[06]
  ソースから構築 - 06 (Apache)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://dlcdn.apache.org//httpd/httpd-2.4.52.tar.gz (ソース取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate https://downloads.apache.org/httpd/httpd-2.4.52.tar.gz.sha256 (チェックサム取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo sha256sum -c httpd-2.4.52.tar.gz.sha256 (チェックサム確認)
  
  コマンドの実行結果
  --------------------------------------------------
  httpd-2.4.52.tar.gz: 完了
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf httpd-2.4.52.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/httpd-2.4.52
  vm12$ sudo cat INSTALL (INSTALL確認)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> インストール概要を確認、以降は概要に従い作業する
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/httpd-2.4.52
  vm12$ (Makefile生成)
    sudo ./configure
    --prefix=/usr/local/apache2
    --with-apr=/usr/local/apr-1.7.0            // APR
    --with-apr-util=/usr/local/apr-util-1.6.1  // APR-Util
    --with-pcre=/usr/local/pcre-8.45           // PCRE
    --with-ssl=/usr/local/openssl-1.1.0        // OPENSSL
    --with-mpm=prefork                         // PHP(prefork)
    --enable-http2            // HTTP2
    --enable-ssl              // SSL
    --enable-so               // APXS
    --enable-mods-shared=all  // Dynamic Modules
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/httpd-2.4.52
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/httpd-2.4.52
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo useradd -d /tmp -s /sbin/nologin apache (実行用ユーザー追加)
  
  コマンドの実行結果
  --------------------------------------------------
  useradd: 警告: ホームディレクトリが既に存在します。
  skel ディレクトリからのコピーは行いません。
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo passwd apache (パスワード更新)
  
  コマンドの実行結果
  --------------------------------------------------
  ユーザー apache のパスワードを変更。
  新しいパスワード: (パスワード入力)
  新しいパスワードを再入力してください: (パスワード入力)
  passwd: すべての認証トークンが正しく更新できました。
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo chown -R apache:apache /usr/local/apache2 (所有者とグループの変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo vi /etc/bashrc (シェルの設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  (末尾に追加) -> PATH=$PATH:/usr/local/apache2/bin
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ source /etc/bashrc (シェルの設定ファイルを読み込み)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ which apachectl (コマンドのパス開通を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  /usr/local/apache2/bin/apachectl
  --------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo vi /usr/lib/systemd/system/httpd.service (自動起動のためサービスファイルを作成)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #[Unit]
  #Description=Apache httpd daemon
  #
  #[Service]
  #Type=forking
  #ExecStart=/usr/local/apache2/bin/apachectl -k start
  #ExecStop=/usr/local/apache2/bin/apachectl -k stop
  #
  #[Install]
  #WantedBy=multi-user.target
  #--------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo systemctl daemon-reload (サービスファイルをシステムに通知)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #(省略) -> 出力なし
  #--------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo systemctl enable httpd (サービスの自動起動)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #Created symlink from /etc/systemd/system/multi-user.target.wants/httpd.service to /usr/lib/systemd/system/httpd.service.
  #--------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo systemctl start httpd (サービスの起動)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #(省略) -> 出力なし
  #--------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo systemctl status httpd (サービスの状態)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #● httpd.service - Apache httpd daemon
  #   Loaded: loaded (/usr/lib/systemd/system/httpd.service; enabled; vendor preset: disabled)
  #   Active: active (running) since 日 2022-01-16 19:00:28 JST; 45s ago
  #  Process: 3384 ExecStart=/usr/local/apache2/bin/apachectl -k start (code=exited, status=0/SUCCESS)
  # Main PID: 3387 (httpd)
  #   CGroup: /system.slice/httpd.service
  #           ├─3387 /usr/local/apache2/bin/httpd -k start
  #           ├─3388 /usr/local/apache2/bin/httpd -k start
  #           ├─3389 /usr/local/apache2/bin/httpd -k start
  #           ├─3390 /usr/local/apache2/bin/httpd -k start
  #           ├─3391 /usr/local/apache2/bin/httpd -k start
  #           └─3392 /usr/local/apache2/bin/httpd -k start
  #
  #1月 16 19:00:28 vm12 systemd[1]      : Starting Apache httpd daemon…
  #1月 16 19:00:28 vm12 apachectl[3384] : AH00558: httpd: Could not reliably d…e
  #1月 16 19:00:28 vm12 systemd[1]      : Started Apache httpd daemon.
  #Hint: Some lines were ellipsized, use -l to show in full.
  #--------------------------------------------------
  
  #vm12$ cd $HOME
  #vm12$ sudo systemctl stop httpd (サービスの停止)
  #
  #コマンドの実行結果
  #--------------------------------------------------
  #(省略) -> 出力なし
  #--------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[07]
  制御コマンド(Apache)
  
[内容]
  ## 作業内容
    制御コマンド(apachectl)で「Apache」の制御を行う
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド(apachectl)
    apachectl start       // Apacheを起動する
    apachectl stop        // Apacheを停止する
    apachectl restart     // Apacheを再起動する
    apachectl graceful    // Apacheを安全に再起動する
    apachectl reload      // Apacheの設定ファイルを再読込する
    apachectl configtest  // Apacheの設定ファイルの構文チェック
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/conf/httpd.conf (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  (修正前) #ServerName www.example.com:80 -> ServerNameが未設定の場合は制御コマンドが失敗するため修正
  (修正後)  ServerName www.example.com:80
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl start (Apacheを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep httpd | grep -v grep (Apacheのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  root      2399  0.0  0.1  70520  1988 ?        Ss   13:37   0:00 /usr/local/apache2/bin/httpd -k start
  daemon    2400  0.0  0.1  70520  1488 ?        S    13:37   0:00 /usr/local/apache2/bin/httpd -k start
  daemon    2401  0.0  0.2  70520  2228 ?        S    13:37   0:00 /usr/local/apache2/bin/httpd -k start
  daemon    2402  0.0  0.1  70520  1488 ?        S    13:37   0:00 /usr/local/apache2/bin/httpd -k start
  daemon    2403  0.0  0.1  70520  1488 ?        S    13:37   0:00 /usr/local/apache2/bin/httpd -k start
  daemon    2404  0.0  0.1  70520  1488 ?        S    13:37   0:00 /usr/local/apache2/bin/httpd -k start
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl localhost:80 (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>It works!</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl stop (Apacheを停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep httpd | grep -v grep (Apacheのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------

  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[08]
  設定ファイル(httpd.conf) - 01 (単独サイト)
  
[内容]
  ## 作業内容
    設定ファイル(httpd.conf)で様々なサイト構築パターンを試してみる
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /usr/local/apache2         // ServerRoot
      | -- /conf               // Config-Directory
              | -- httpd.conf  // Main-Config
      | -- /htdocs             // DocumentRoot
              | -- index.html  // HTML
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf
  vm12# cp -p httpd.conf httpd.conf.org (設定ファイルのバックアップ)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/conf/httpd.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## ロードするモジュール一覧
  LoadModule authn_file_module modules/mod_authn_file.so
  LoadModule authn_core_module modules/mod_authn_core.so
  LoadModule authz_host_module modules/mod_authz_host.so
  LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
  LoadModule authz_user_module modules/mod_authz_user.so
  LoadModule authz_core_module modules/mod_authz_core.so
  LoadModule access_compat_module modules/mod_access_compat.so
  LoadModule auth_basic_module modules/mod_auth_basic.so
  LoadModule reqtimeout_module modules/mod_reqtimeout.so
  LoadModule filter_module modules/mod_filter.so
  LoadModule mime_module modules/mod_mime.so
  LoadModule log_config_module modules/mod_log_config.so
  LoadModule env_module modules/mod_env.so
  LoadModule headers_module modules/mod_headers.so
  LoadModule setenvif_module modules/mod_setenvif.so
  LoadModule version_module modules/mod_version.so
  LoadModule unixd_module modules/mod_unixd.so
  LoadModule status_module modules/mod_status.so
  LoadModule autoindex_module modules/mod_autoindex.so
  LoadModule dir_module modules/mod_dir.so
  LoadModule alias_module modules/mod_alias.so
  
  ## トップディレクトリ
  ServerRoot "/usr/local/apache2"
  
  ## リスニング対象のポート番号
  Listen 80
  
  ## 子プロセスの実行ユーザー
  User apache
  
  ## 子プロセスの実行グループ
  Group apache
  
  ## HTTPヘッダ内のバージョン表示
  ServerTokens prod
  
  ## サーバー管理者のメールアドレス
  ServerAdmin makoto@example.com
  
  ## ホスト名
  ServerName vm12.example.com
  
  ## 起動する子プロセス数
  StartServers 1
  
  ## 待機する子プロセス最小数
  MinSpareServers 1
  
  ## 待機する子プロセス最大数
  MaxSpareServers 5
  
  ## 生成される子プロセス数の上限
  ServerLimit 5
  
  ## 最大同時接続数
  MaxRequestWorkers 5
  
  ## 接続タイムアウト(秒)
  Timeout 10
  
  ## キープアライブ
  KeepAlive on
  
  ## キープアライブ上限リクエスト数
  MaxKeepAliveRequests 100
  
  ## キープアライブタイムアウト(秒)
  KeepAliveTimeout 10
  
  ## ディレクトリ(/)に適用
  <Directory />
    AllowOverride none
    Require all denied
  </Directory>
  
  ## ドキュメントルート
  DocumentRoot "/usr/local/apache2/htdocs"
  
  ## ディレクトリのインデックスとして返すファイル名
  DirectoryIndex index.html
  
  ## ディレクトリ(/usr/local/apache2/htdocs)に適用
  <Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
  </Directory>
  
  ## 外部設定ファイル
  AccessFileName .htaccess
  
  ## 外部設定ファイル(.htaccess)が存在する場合のみ適用
  <Files ".htaccess">
    Require all denied
  </Files>
  
  ## ログレベル
  LogLevel warn
  
  ## ログ書式(common)を定義
  LogFormat "%h %l %u %t \"%r\" %>s %b" common
  
  ## アクセスログ出力場所(ServerRoot + logs/access_log)
  CustomLog "logs/access_log" common
  
  ## エラーログ出力場所(ServerRoot + logs/error_log)
  ErrorLog "logs/error_log"
  
  ## CGI(http://(ServerName)/cgi-bin/sample.cgi -> /usr/local/apache2/cgi-bin/sample.cgi)
  ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
  
  ## ディレクトリ(/usr/local/apache2/cgi-bin)に適用
  <Directory "/usr/local/apache2/cgi-bin">
    Options None
    AllowOverride None
    Require all granted
  </Directory>
  
  ## リクエストヘッダ追加
  RequestHeader unset Proxy early
  
  ## モジュール(mime_module)のロード時のみ適用
  <IfModule mime_module>
    TypesConfig conf/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
  </IfModule>
  
  ## モジュール(ssl_module)のロード時のみ適用
  <IfModule ssl_module>
    SSLRandomSeed startup builtin
    SSLRandomSeed connect builtin
  </IfModule>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl configtest (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  Syntax OK
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/htdocs/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/hosts (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
  ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
  192.168.122.11 vm11
  192.168.122.12 vm12 vm12.example.com (修正)
  192.168.122.13 vm13
  192.168.122.14 vm14
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl start (Apacheを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://vm12.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl stop (Apacheを停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[09]
  設定ファイル(httpd.conf) - 02 (複数サイト)
  
[内容]
  ## 作業内容
    設定ファイル(httpd.conf)で様々なサイト構築パターンを試してみる
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /usr/local/apache2
      | -- /conf
              | -- httpd.conf                 // Main-Config
              | -- /extra                     // Extra-Config
                      | -- httpd-vhosts.conf  // VirtualHost
      | -- /htdocs
              | -- site1               // DocumentRoot1
                      | -- index.html  // HTML1
              | -- site2               // DocumentRoot2
                      | -- index.html  // HTML2
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/conf/httpd.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## ロードするモジュール一覧
  LoadModule authn_file_module modules/mod_authn_file.so
  LoadModule authn_core_module modules/mod_authn_core.so
  LoadModule authz_host_module modules/mod_authz_host.so
  LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
  LoadModule authz_user_module modules/mod_authz_user.so
  LoadModule authz_core_module modules/mod_authz_core.so
  LoadModule access_compat_module modules/mod_access_compat.so
  LoadModule auth_basic_module modules/mod_auth_basic.so
  LoadModule reqtimeout_module modules/mod_reqtimeout.so
  LoadModule filter_module modules/mod_filter.so
  LoadModule mime_module modules/mod_mime.so
  LoadModule log_config_module modules/mod_log_config.so
  LoadModule env_module modules/mod_env.so
  LoadModule headers_module modules/mod_headers.so
  LoadModule setenvif_module modules/mod_setenvif.so
  LoadModule version_module modules/mod_version.so
  LoadModule unixd_module modules/mod_unixd.so
  LoadModule status_module modules/mod_status.so
  LoadModule autoindex_module modules/mod_autoindex.so
  LoadModule dir_module modules/mod_dir.so
  LoadModule alias_module modules/mod_alias.so
  
  ## トップディレクトリ
  ServerRoot "/usr/local/apache2"
  
  ## リスニング対象のポート番号
  Listen 80
  
  ## 子プロセスの実行ユーザー
  User apache
  
  ## 子プロセスの実行グループ
  Group apache
  
  ## HTTPヘッダ内のバージョン表示
  ServerTokens prod
  
  ## サーバー管理者のメールアドレス
  ## ServerAdmin makoto@example.com -> httpd-vhosts.conf に移動
  
  ## ホスト名
  ServerName vm12.example.com
  
  ## 起動する子プロセス数
  StartServers 1
  
  ## 待機する子プロセス最小数
  MinSpareServers 1
  
  ## 待機する子プロセス最大数
  MaxSpareServers 5
  
  ## 生成される子プロセス数の上限
  ServerLimit 5
  
  ## 最大同時接続数
  MaxRequestWorkers 5
  
  ## 接続タイムアウト(秒)
  Timeout 10

  ## キープアライブ
  KeepAlive on

  ## キープアライブ上限リクエスト数
  MaxKeepAliveRequests 100
  
  ## キープアライブタイムアウト(秒)
  KeepAliveTimeout 10
  
  ## ディレクトリ(/)に適用
  <Directory />
    AllowOverride none
    Require all denied
  </Directory>
  
  ## ドキュメントルート
  ## DocumentRoot "/usr/local/apache2/htdocs" -> httpd-vhosts.conf に移動
  
  ## ディレクトリのインデックスとして返すファイル名
  DirectoryIndex index.html
  
  ## ディレクトリ(/usr/local/apache2/htdocs)に適用
  <Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
  </Directory>
  
  ## 外部設定ファイル
  AccessFileName .htaccess
  
  ## 外部設定ファイル(.htaccess)が存在する場合のみ適用
  <Files ".htaccess">
    Require all denied
  </Files>
  
  ## ログレベル
  LogLevel warn
  
  ## ログ書式(common)を定義
  LogFormat "%h %l %u %t \"%r\" %>s %b" common
  
  ## アクセスログ出力場所(ServerRoot + logs/access_log)
  CustomLog "logs/access_log" common
  
  ## エラーログ出力場所(ServerRoot + logs/error_log)
  ## ErrorLog "logs/error_log" -> httpd-vhosts.conf に移動
  
  ## CGI(http://(ServerName)/cgi-bin/sample.cgi -> /usr/local/apache2/cgi-bin/sample.cgi)
  ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
  
  ## ディレクトリ(/usr/local/apache2/cgi-bin)に適用
  <Directory "/usr/local/apache2/cgi-bin">
    Options None
    AllowOverride None
    Require all granted
  </Directory>
  
  ## リクエストヘッダ追加
  RequestHeader unset Proxy early
  
  ## モジュール(mime_module)のロード時のみ適用
  <IfModule mime_module>
    TypesConfig conf/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
  </IfModule>
  
  ## モジュール(ssl_module)のロード時のみ適用
  <IfModule ssl_module>
    SSLRandomSeed startup builtin
    SSLRandomSeed connect builtin
  </IfModule>
  
  ## 追加設定ファイル
  IncludeOptional  conf/extra/httpd-vhosts.conf
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf/extra
  vm12# cp -p httpd-vhosts.conf httpd-vhosts.conf.org (設定ファイルのバックアップ)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf/extra
  vm12# vi httpd-vhosts.conf (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  <VirtualHost *:80>
    ServerName site1.example.com
    ServerAdmin site1@example.com
    DocumentRoot "/usr/local/apache2/htdocs/site1"
    CustomLog "logs/site1_access_log" common
    ErrorLog "logs/site1_error_log"
  </VirtualHost>
  
  <VirtualHost *:80>
    ServerName site2.example.com
    ServerAdmin site2@example.com
    DocumentRoot "/usr/local/apache2/htdocs/site2"
    CustomLog "logs/site2_access_log" common
    ErrorLog "logs/site2_error_log"
  </VirtualHost>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/hosts (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
  ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
  192.168.122.11 vm11
  192.168.122.12 vm12 site1.example.com site2.example.com (修正)
  192.168.122.13 vm13
  192.168.122.14 vm14
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/htdocs
  vm12# mkdir site1 site2
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/htdocs
  vm12# echo "<html><body><h1>サイト1</h1></body></html>" > site1/index.html
  vm12# echo "<html><body><h1>サイト2</h1></body></html>" > site2/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl configtest (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  Syntax OK
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl start (Apacheを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://site1.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト1</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://site2.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト2</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl stop (Apacheを停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[10]
  設定ファイル(httpd.conf) - 03 (認証局)
  
[内容]
  ## 作業内容
    認証局を作成、自己認証する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /opt/pki
      | -- /config
              | -- openssl-SiteCA.cnf  // 設定ファイル
      | -- /SiteCA
              | -- /certs          // 検証用の証明書
              | -- /crl            // 失効リスト
              | -- /newcerts       // 認証局が発行した証明書
              | -- /private        // 認証局の秘密鍵
              | -- serial          // シリアル番号
              | -- crlnum          // CRL番号
              | -- index.txt       // 認証局の管理データベース
              | -- SiteCaReq.pem   // 認証局の証明書署名要求
              | -- SiteCaCert.pem  // 認証局のデジタル証明書
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd /opt
  vm12# mkdir -p pki/config (ディレクトリ作成)
  vm12# mkdir -p pki/SiteCA (ディレクトリ作成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /opt/pki/SiteCA
  vm12# mkdir certs crl newcerts private (ディレクトリ作成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /opt/pki/config
  vm12# vi openssl-SiteCA.cnf (設定ファイルの作成)
  
  コマンドの実行結果
  --------------------------------------------------
  [ ca ]
    default_ca = CA_default  # セクション「CA_default」を参照
  
  [ CA_default ]
    dir = /opt/pki/SiteCA
    certs = $dir/certs
    crl_dir = $dir/crl
    database = $dir/index.txt
    new_certs_dir = $dir/newcerts
    serial = $dir/serial
    crlnumber = $dir/crlnum
    crl = $dir/crl.pem
    RANDFILE = $dir/.rand
    name_opt = CA_default
    cert_opt = CA_default
    default_days = 365
    default_crl_days = 30
    default_bits = 2048
    default_md = sha256
    preserve = no
    policy = policy_match  # セクション「policy_match」を参照
  
  [ policy_match ]
    countryName = match
    stateOrProvinceName = match
    organizationName = match
    organizationalUnitName = optional
    commonName = supplied
    emailAddress = optional
  
  [ v3_ca ]
    subjectKeyIdentifier = hash
    authorityKeyIdentifier = keyid:always,issuer
    basicConstraints = CA:true      # CAフラグ
    keyUsage = cRLSign,keyCertSign  # 鍵用途(CRL署名、鍵署名)
  --------------------------------------------------
  
  vm12# cd /opt/pki/SiteCA
  vm12# echo "01" > serial (ファイル作成)
  vm12# echo "00" > crlnum (ファイル作成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /opt/pki/SiteCA
  vm12# touch index.txt (データベース作成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /opt/pki/SiteCA
  vm12# (認証局の秘密鍵を生成)
    openssl genrsa                              // コマンド
    -out /opt/pki/SiteCA/private/SiteCaKey.pem  // 秘密鍵ファイル
    -aes256                                     // 暗号化アルゴリズム
    -passout pass:ma0122ma                      // 秘密鍵のパスフレーズ
    2048                                        // 鍵長
  
  コマンドの実行結果
  --------------------------------------------------
  openssl: error while loading shared libraries: libssl.so.1.1: cannot open shared object file: No such file or directory
  --------------------------------------------------
  
  vm12# cd /opt/pki/SiteCA
  vm12# ldd $(which openssl) (共有ライブラリ調査)
  
  コマンドの実行結果
  --------------------------------------------------
  linux-vdso.so.1 =>  (0x00007ffe87bea000)
  libssl.so.1.1 => not found     // ライブラリの参照失敗
  libcrypto.so.1.1 => not found  // ライブラリの参照失敗
  libdl.so.2 => /lib64/libdl.so.2 (0x00007f55067e5000)
  libpthread.so.0 => /lib64/libpthread.so.0 (0x00007f55065c9000)
  libc.so.6 => /lib64/libc.so.6 (0x00007f55061fb000)
  /lib64/ld-linux-x86-64.so.2 (0x00007f55069e9000)
  --------------------------------------------------
  
  vm12# cd /opt/pki/SiteCA
  vm12# find / -name libssl.so.1.1 (共有ライブラリ検索)
  
  コマンドの実行結果
  --------------------------------------------------
  /usr/local/lib64/libssl.so.1.1 -> 共有ライブラリ検索リストに追加
  /usr/local/src/openssl-1.1.0h/libssl.so.1.1
  --------------------------------------------------
  
  vm12# cd /opt/pki/SiteCA
  vm12# find / -name libcrypto.so.1.1 (共有ライブラリ検索)
  
  コマンドの実行結果
  --------------------------------------------------
  /usr/local/lib64/libcrypto.so.1.1 -> 共有ライブラリ検索リストに追加
  /usr/local/src/openssl-1.1.0h/libcrypto.so.1.1
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/ld.so.conf (共有ライブラリ検索リストを修正)
  
  コマンドの実行結果
  --------------------------------------------------
  /usr/local/lib64/ -> 末尾に追加
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ldconfig (共有ライブラリ検索キャッシュを更新)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /opt/pki/SiteCA
  vm12# (ルート認証局の秘密鍵を生成)
    openssl genrsa                              // コマンド
    -out /opt/pki/SiteCA/private/SiteCaKey.pem  // 秘密鍵ファイル
    -aes256                                     // 暗号化アルゴリズム
    -passout pass:ma0122ma                      // 秘密鍵のパスフレーズ
    2048                                        // 鍵長
  
  コマンドの実行結果
  --------------------------------------------------
  Generating RSA private key, 2048 bit long modulus …
  --------------------------------------------------
  
  vm12# cd /opt/pki/SiteCA
  vm12# (証明書署名要求(CSR)を作成)
    openssl req                                 // コマンド
    -new                                        // 証明書署名要求(CSR)生成
    -key /opt/pki/SiteCA/private/SiteCaKey.pem  // 秘密鍵ファイル
    -out /opt/pki/SiteCA/SiteCaReq.pem          // 証明書署名要求(CSR)
    -passin pass:ma0122ma                       // 秘密鍵のパスフレーズ
    -subj "/C=JP/ST=Saitama/L=Tokorozawa/O=example.com/CN=$SiteCA.example.com"  // 認証局の情報
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /opt/pki/SiteCA
  vm12# (証明書署名要求(CSR)を自己署名・デジタル証明書を作成)
    openssl ca                                  // コマンド
    -config /opt/pki/config/openssl-SiteCA.cnf  // 設定ファイル
    -batch                                      // 対話形式は使用しない
    -in /opt/pki/SiteCA/SiteCaReq.pem           // 証明書署名要求(CSR)
    -out /opt/pki/SiteCA/SiteCaCert.pem         // デジタル証明書
    -keyfile /opt/pki/SiteCA/private/SiteCaKey.pem  // 秘密鍵ファイル
    -selfsign                                   // 自己署名
    -passin pass:ma0122ma                       // 秘密鍵のパスフレーズ
    -extensions v3_ca                           // 設定ファイルの拡張セクションもロード
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> デジタル証明書の内容が出力
  --------------------------------------------------
  
  vm12# cd /opt/pki/SiteCA
  vm12# openssl x509 -in SiteCaCert.pem -text -noout (デジタル証明書の内容確認)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> デジタル証明書の内容が出力
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[11]
  設定ファイル(httpd.conf) - 04 (スクリプト)
  
[内容]
  ## 作業内容
    認証局がサイト署名に使用するスクリプトを作成する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /opt/pki
      | -- /config
              | -- openssl-site.cnf  // 設定ファイル
      | -- /SiteCA
              | -- /private          // 認証局の秘密鍵
              | -- SiteCaCert.pem    // 認証局のデジタル証明書
              | -- SignSite.sh       // スクリプト
      | -- /site
              | -- AA.csr  // サイト(AA)の証明書署名要求(CSR)
              | -- AA.crt  // サイト(AA)のデジタル証明書
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd /opt/pki
  vm12# mkdir site (ディレクトリ作成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /opt/pki/config
  vm12# vi openssl-site.cnf (設定ファイルの作成)
  
  コマンドの実行結果
  --------------------------------------------------
  [ ca ]
    default_ca = CA_default  # セクション「CA_default」を参照
  
  [ CA_default ]
    dir = /opt/pki/SiteCA
    certs = $dir/certs
    crl_dir = $dir/crl
    database = $dir/index.txt
    new_certs_dir = $dir/newcerts
    serial = $dir/serial
    crlnumber = $dir/crlnum
    crl = $dir/crl.pem
    RANDFILE = $dir/.rand
    name_opt = CA_default
    cert_opt = CA_default
    default_days = 365
    default_crl_days = 30
    default_bits = 2048
    default_md = sha256
    preserve = no
    policy = policy_match  # セクション「policy_match」を参照
  
  [ policy_match ]
    countryName = match
    stateOrProvinceName = match
    organizationName = match
    organizationalUnitName = optional
    commonName = supplied
    emailAddress = optional
  
  [ v3_ca ]
    subjectKeyIdentifier = hash
    authorityKeyIdentifier = keyid:always,issuer
    basicConstraints = CA:false                                   # CAフラグ
    keyUsage = nonRepudiation, digitalSignature, keyEncipherment  # 鍵用途(デジタル署名、鍵暗号化)
  --------------------------------------------------
  
  vm12# cd /opt/pki/SiteCA
  vm12# vi SignSite.sh (スクリプト作成)
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  openssl ca \
  -config /opt/pki/config/openssl-site.cnf \
  -batch \
  -in /opt/pki/site/$1.csr \
  -out /opt/pki/site/$1.crt \
  -keyfile /opt/pki/SiteCA/private/SiteCaKey.pem \
  -cert /opt/pki/SiteCA/SiteCaCert.pem \
  -passin pass:ma0122ma \
  -extensions v3_ca
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# (サイト(AA)の秘密鍵を作成)
    openssl genrsa             // コマンド
    -out /opt/pki/site/AA.key  // 秘密鍵ファイル
    -aes256                    // 暗号化アルゴリズム
    -passout pass:ma0122ma     // 秘密鍵のパスフレーズ
    2048                       // 鍵長
  
  コマンドの実行結果
  --------------------------------------------------
  Generating RSA private key, 2048 bit long modulus …
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# (サイト(AA)の証明書署名要求(CSR)を作成)
    openssl req                // コマンド
    -new                       // 新規作成
    -key /opt/pki/site/AA.key  // 秘密鍵ファイル
    -out /opt/pki/site/AA.csr  // 証明書署名要求(CSR)
    -passin pass:ma0122ma      // 秘密鍵のパスフレーズ
    -subj "/C=JP/ST=Saitama/L=Tokorozawa/O=example.com/CN=AA.example.com"  // サイト情報
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /opt/pki/SiteCA
  vm12# bash SignSite.sh AA (サイト署名スクリプトを実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> デジタル証明書の内容が出力
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[12]
  設定ファイル(httpd.conf) - 05 (単独サイトのHTTPS化)
  
[内容]
  ## 作業内容
    設定ファイル(httpd.conf)で様々なサイト構築パターンを試してみる
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /opt/pki
      | -- /site
              | -- vm12.key  // サイト(vm12)の秘密鍵
              | -- vm12.csr  // サイト(vm12)の証明書署名要求(CSR)
              | -- vm12.crt  // サイト(vm12)のデジタル証明書
    /usr/local/apache2
      | -- /conf
              | -- httpd.conf              // Main-Config
              | -- /extra                  // Extra-Config
                      | -- httpd-ssl.conf  // SSL
      | -- /htdocs                         // DocumentRoot
              | -- index.html              // HTML
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# (サイト(vm12)の秘密鍵を作成)
    openssl genrsa               // コマンド
    -out /opt/pki/site/vm12.key  // 秘密鍵ファイル
    -aes256                      // 暗号化アルゴリズム
    -passout pass:ma0122ma       // 秘密鍵のパスフレーズ
    2048                         // 鍵長
  
  コマンドの実行結果
  --------------------------------------------------
  Generating RSA private key, 2048 bit long modulus …
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# (サイト(vm12)の証明書署名要求(CSR)を作成)
    openssl req                  // コマンド
    -new                         // 新規作成
    -key /opt/pki/site/vm12.key  // 秘密鍵ファイル
    -out /opt/pki/site/vm12.csr  // 証明書署名要求(CSR)
    -passin pass:ma0122ma        // 秘密鍵のパスフレーズ
    -subj "/C=JP/ST=Saitama/L=Tokorozawa/O=example.com/CN=vm12.example.com"  // サイト情報
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /opt/pki/SiteCA
  vm12# bash SignSite.sh vm12 (サイト署名スクリプトを実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> デジタル証明書の内容が出力
  --------------------------------------------------
  
  vm12# cd /opt/pki/site
  vm12# ls -lh vm12* (デジタル証明書の確認)
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 4.3K  1月 18 12:48 vm12.crt  // デジタル証明書
  -rw-r--r--. 1 root root 1001  1月 18 12:47 vm12.csr  // 証明書署名要求(CSR)
  -rw-------. 1 root root 1.8K  1月 18 12:46 vm12.key  // 秘密鍵ファイル
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf
  vm12# vi httpd.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## ロードするモジュール一覧
  LoadModule authn_file_module modules/mod_authn_file.so
  LoadModule authn_core_module modules/mod_authn_core.so
  LoadModule authz_host_module modules/mod_authz_host.so
  LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
  LoadModule authz_user_module modules/mod_authz_user.so
  LoadModule authz_core_module modules/mod_authz_core.so
  LoadModule access_compat_module modules/mod_access_compat.so
  LoadModule auth_basic_module modules/mod_auth_basic.so
  LoadModule reqtimeout_module modules/mod_reqtimeout.so
  LoadModule filter_module modules/mod_filter.so
  LoadModule mime_module modules/mod_mime.so
  LoadModule log_config_module modules/mod_log_config.so
  LoadModule env_module modules/mod_env.so
  LoadModule headers_module modules/mod_headers.so
  LoadModule setenvif_module modules/mod_setenvif.so
  LoadModule version_module modules/mod_version.so
  LoadModule unixd_module modules/mod_unixd.so
  LoadModule status_module modules/mod_status.so
  LoadModule autoindex_module modules/mod_autoindex.so
  LoadModule dir_module modules/mod_dir.so
  LoadModule alias_module modules/mod_alias.so
  
  ## 追加モジュール
  LoadModule ssl_module modules/mod_ssl.so
  
  ## トップディレクトリ
  ServerRoot "/usr/local/apache2"
  
  ## リスニング対象のポート番号
  Listen 80
  
  ## 子プロセスの実行ユーザー
  User apache
  
  ## 子プロセスの実行グループ
  Group apache
  
  ## HTTPヘッダ内のバージョン表示
  ServerTokens prod
  
  ## サーバー管理者のメールアドレス
  ServerAdmin makoto@example.com
  
  ## ホスト名
  ServerName vm12.example.com
  
  ## 起動する子プロセス数
  StartServers 1
  
  ## 待機する子プロセス最小数
  MinSpareServers 1
  
  ## 待機する子プロセス最大数
  MaxSpareServers 5
  
  ## 生成される子プロセス数の上限
  ServerLimit 5
  
  ## 最大同時接続数
  MaxRequestWorkers 5
  
  ## 接続タイムアウト(秒)
  Timeout 10
  
  ## キープアライブ
  KeepAlive on
  
  ## キープアライブ上限リクエスト数
  MaxKeepAliveRequests 100
  
  ## キープアライブタイムアウト(秒)
  KeepAliveTimeout 10
  
  ## ディレクトリ(/)に適用
  <Directory />
    AllowOverride none
    Require all denied
  </Directory>
  
  ## ドキュメントルート
  DocumentRoot "/usr/local/apache2/htdocs"
  
  ## ディレクトリのインデックスとして返すファイル名
  DirectoryIndex index.html
  
  ## ディレクトリ(/usr/local/apache2/htdocs)に適用
  <Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
  </Directory>
  
  ## 外部設定ファイル
  AccessFileName .htaccess
  
  ## 外部設定ファイル(.htaccess)が存在する場合のみ適用
  <Files ".htaccess">
    Require all denied
  </Files>
  
  ## ログレベル
  LogLevel warn
  
  ## ログ書式(common)を定義
  LogFormat "%h %l %u %t \"%r\" %>s %b" common
  
  ## アクセスログ出力場所(ServerRoot + logs/access_log)
  CustomLog "logs/access_log" common
  
  ## エラーログ出力場所(ServerRoot + logs/error_log)
  ErrorLog "logs/error_log"
  
  ## CGI(http://(ServerName)/cgi-bin/sample.cgi -> /usr/local/apache2/cgi-bin/sample.cgi)
  ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
  
  ## ディレクトリ(/usr/local/apache2/cgi-bin)に適用
  <Directory "/usr/local/apache2/cgi-bin">
    Options None
    AllowOverride None
    Require all granted
  </Directory>
  
  ## リクエストヘッダ追加
  RequestHeader unset Proxy early
  
  ## モジュール(mime_module)のロード時のみ適用
  <IfModule mime_module>
    TypesConfig conf/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
  </IfModule>
  
  ## モジュール(ssl_module)のロード時のみ適用
  <IfModule ssl_module>
    SSLRandomSeed startup builtin
    SSLRandomSeed connect builtin
  </IfModule>
  
  ## 追加設定ファイル
  IncludeOptional conf/extra/httpd-ssl.conf
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf/extra
  vm12# cp -p httpd-ssl.conf httpd-ssl.conf.org (設定ファイルのバックアップ)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf/extra
  vm12# vi httpd-ssl.conf (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  ## リスニング対象のポート番号
  Listen 443

  ## クライアント接続時に許可する暗号化ランク
  SSLCipherSuite HIGH:MEDIUM:!MD5:!RC4:!3DES
  SSLProxyCipherSuite HIGH:MEDIUM:!MD5:!RC4:!3DES

  ## 負荷の低い暗号化アルゴリズムを自動選択
  SSLHonorCipherOrder on

  ## サポートするプロトコル
  SSLProtocol all -SSLv3
  SSLProxyProtocol all -SSLv3

  ## 秘密鍵パスフレーズ入力時の入力方式
  SSLPassPhraseDialog builtin
  
  ## SSL/TLS関連の環境変数をCGI/SSIで使用可能
  <FilesMatch "\.(cgi|shtml|phtml|php)$">
    SSLOptions +StdEnvVars
  </FilesMatch>
  
  ## SSL/TLS関連の環境変数をCGI/SSIで使用可能
  <Directory "/usr/local/apache2/cgi-bin">
    SSLOptions +StdEnvVars
  </Directory>
  
  ## MSIE関連の問題解決
  BrowserMatch "MSIE [2-5]" nokeepalive ssl-unclean-shutdown downgrade-1.0 force-response-1.0
  
  ## HTTPS接続時のデフォルト設定
  <VirtualHost _default_:443>
    SSLEngine on
    SSLCertificateFile "/opt/pki/site/vm12.crt"
    SSLCertificateKeyFile "/opt/pki/site/vm12.key"
  </VirtualHost>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl configtest (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  Syntax OK
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/htdocs/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/hosts (設定ファイルの確認)
  
  コマンドの実行結果
  --------------------------------------------------
  127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
  ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
  192.168.122.11 vm11
  192.168.122.12 vm12 vm12.example.com (修正)
  192.168.122.13 vm13
  192.168.122.14 vm14
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl start (Apacheを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  Apache/2.4.52 mod_ssl (Pass Phrase Dialog)
  Some of your private key files are encrypted for security reasons.
  In order to read them you have to provide the pass phrases.
  
  Private key vm12.example.com:443:0 (/opt/pki/site/vm12.key)
  Enter pass phrase: (秘密鍵のパスフレーズを入力)
  
  // パスフレーズの認証が正常に行われた旨のメッセージ出力
  OK: Pass Phrase Dialog successful.
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://vm12.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl --cacert /opt/pki/SiteCA/SiteCaCert.pem https://vm12.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl stop (Apacheを停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[13]
  設定ファイル(httpd.conf) - 06 (複数サイトのHTTPS化)
  
[内容]
  ## 作業内容
    設定ファイル(httpd.conf)で様々なサイト構築パターンを試してみる
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /opt/pki
      | -- /site
              | -- site1.key  // サイト(site1)の秘密鍵
              | -- site1.csr  // サイト(site1)の証明書署名要求(CSR)
              | -- site1.crt  // サイト(site1)のデジタル証明書
              | -- site2.key  // サイト(site2)の秘密鍵
              | -- site2.csr  // サイト(site2)の証明書署名要求(CSR)
              | -- site2.crt  // サイト(site2)のデジタル証明書
    /usr/local/apache2
      | -- /conf
              | -- httpd.conf                 // Main-Config
              | -- /extra                     // Extra-Config
                      | -- httpd-vhosts.conf  // VirtualHost
                      | -- httpd-ssl.conf     // SSL
      | -- /htdocs
              | -- site1               // DocumentRoot1
                      | -- index.html  // HTML1
              | -- site2               // DocumentRoot2
                      | -- index.html  // HTML2
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# (サイト(site1)の秘密鍵を作成)
    openssl genrsa                // コマンド
    -out /opt/pki/site/site1.key  // 秘密鍵ファイル
    -aes256                       // 暗号化アルゴリズム
    -passout pass:ma0122ma        // 秘密鍵のパスフレーズ
    2048                          // 鍵長
  
  コマンドの実行結果
  --------------------------------------------------
  Generating RSA private key, 2048 bit long modulus …
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# (サイト(site1)の証明書署名要求(CSR)を作成)
    openssl req                   // コマンド
    -new                          // 新規作成
    -key /opt/pki/site/site1.key  // 秘密鍵ファイル
    -out /opt/pki/site/site1.csr  // 証明書署名要求(CSR)
    -passin pass:ma0122ma         // 秘密鍵のパスフレーズ
    -subj "/C=JP/ST=Saitama/L=Tokorozawa/O=example.com/CN=site1.example.com"  // サイト情報
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /opt/pki/SiteCA
  vm12# bash SignSite.sh site1 (サイト署名スクリプトを実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> デジタル証明書の内容が出力
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# (サイト(site2)の秘密鍵を作成)
    openssl genrsa                // コマンド
    -out /opt/pki/site/site2.key  // 秘密鍵ファイル
    -aes256                       // 暗号化アルゴリズム
    -passout pass:ma0122ma        // 秘密鍵のパスフレーズ
    2048                          // 鍵長
  
  コマンドの実行結果
  --------------------------------------------------
  Generating RSA private key, 2048 bit long modulus …
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# (サイト(site2)の証明書署名要求(CSR)を作成)
    openssl req                   // コマンド
    -new                          // 新規作成
    -key /opt/pki/site/site2.key  // 秘密鍵ファイル
    -out /opt/pki/site/site2.csr  // 証明書署名要求(CSR)
    -passin pass:ma0122ma         // 秘密鍵のパスフレーズ
    -subj "/C=JP/ST=Saitama/L=Tokorozawa/O=example.com/CN=site2.example.com"  // サイト情報
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /opt/pki/SiteCA
  vm12# bash SignSite.sh site2 (サイト署名スクリプトを実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> デジタル証明書の内容が出力
  --------------------------------------------------
  
  vm12# cd /opt/pki/site
  vm12# ls -lh | grep -E 'site1|site2' (デジタル証明書の確認)
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 4.3K  1月 18 20:11 site1.crt  // デジタル証明書
  -rw-r--r--. 1 root root 1001  1月 18 20:10 site1.csr
  -rw-------. 1 root root 1.8K  1月 18 20:06 site1.key
  -rw-r--r--. 1 root root 4.3K  1月 18 20:15 site2.crt  // デジタル証明書
  -rw-r--r--. 1 root root 1001  1月 18 20:15 site2.csr
  -rw-------. 1 root root 1.8K  1月 18 20:13 site2.key
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf
  vm12# vi httpd.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## ロードするモジュール一覧
  LoadModule authn_file_module modules/mod_authn_file.so
  LoadModule authn_core_module modules/mod_authn_core.so
  LoadModule authz_host_module modules/mod_authz_host.so
  LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
  LoadModule authz_user_module modules/mod_authz_user.so
  LoadModule authz_core_module modules/mod_authz_core.so
  LoadModule access_compat_module modules/mod_access_compat.so
  LoadModule auth_basic_module modules/mod_auth_basic.so
  LoadModule reqtimeout_module modules/mod_reqtimeout.so
  LoadModule filter_module modules/mod_filter.so
  LoadModule mime_module modules/mod_mime.so
  LoadModule log_config_module modules/mod_log_config.so
  LoadModule env_module modules/mod_env.so
  LoadModule headers_module modules/mod_headers.so
  LoadModule setenvif_module modules/mod_setenvif.so
  LoadModule version_module modules/mod_version.so
  LoadModule unixd_module modules/mod_unixd.so
  LoadModule status_module modules/mod_status.so
  LoadModule autoindex_module modules/mod_autoindex.so
  LoadModule dir_module modules/mod_dir.so
  LoadModule alias_module modules/mod_alias.so
  
  ## 追加モジュール
  LoadModule ssl_module modules/mod_ssl.so
  
  ## トップディレクトリ
  ServerRoot "/usr/local/apache2"
  
  ## リスニング対象のポート番号
  Listen 80
  
  ## 子プロセスの実行ユーザー
  User apache
  
  ## 子プロセスの実行グループ
  Group apache
  
  ## HTTPヘッダ内のバージョン表示
  ServerTokens prod
  
  ## サーバー管理者のメールアドレス
  ## ServerAdmin makoto@example.com -> httpd-vhosts.conf に移動
  
  ## ホスト名
  ServerName vm12.example.com
  
  ## 起動する子プロセス数
  StartServers 1
  
  ## 待機する子プロセス最小数
  MinSpareServers 1
  
  ## 待機する子プロセス最大数
  MaxSpareServers 5
  
  ## 生成される子プロセス数の上限
  ServerLimit 5
  
  ## 最大同時接続数
  MaxRequestWorkers 5
  
  ## 接続タイムアウト(秒)
  Timeout 10

  ## キープアライブ
  KeepAlive on

  ## キープアライブ上限リクエスト数
  MaxKeepAliveRequests 100
  
  ## キープアライブタイムアウト(秒)
  KeepAliveTimeout 10
  
  ## ディレクトリ(/)に適用
  <Directory />
    AllowOverride none
    Require all denied
  </Directory>
  
  ## ドキュメントルート
  ## DocumentRoot "/usr/local/apache2/htdocs" -> httpd-vhosts.conf に移動
  
  ## ディレクトリのインデックスとして返すファイル名
  DirectoryIndex index.html
  
  ## ディレクトリ(/usr/local/apache2/htdocs)に適用
  <Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
  </Directory>
  
  ## 外部設定ファイル
  AccessFileName .htaccess
  
  ## 外部設定ファイル(.htaccess)が存在する場合のみ適用
  <Files ".htaccess">
    Require all denied
  </Files>
  
  ## ログレベル
  LogLevel warn
  
  ## ログ書式(common)を定義
  LogFormat "%h %l %u %t \"%r\" %>s %b" common
  
  ## アクセスログ出力場所(ServerRoot + logs/access_log)
  CustomLog "logs/access_log" common
  
  ## エラーログ出力場所(ServerRoot + logs/error_log)
  ## ErrorLog "logs/error_log" -> httpd-vhosts.conf に移動
  
  ## CGI(http://(ServerName)/cgi-bin/sample.cgi -> /usr/local/apache2/cgi-bin/sample.cgi)
  ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
  
  ## ディレクトリ(/usr/local/apache2/cgi-bin)に適用
  <Directory "/usr/local/apache2/cgi-bin">
    Options None
    AllowOverride None
    Require all granted
  </Directory>
  
  ## リクエストヘッダ追加
  RequestHeader unset Proxy early
  
  ## モジュール(mime_module)のロード時のみ適用
  <IfModule mime_module>
    TypesConfig conf/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
  </IfModule>
  
  ## モジュール(ssl_module)のロード時のみ適用
  <IfModule ssl_module>
    SSLRandomSeed startup builtin
    SSLRandomSeed connect builtin
  </IfModule>
  
  ## 追加設定ファイル
  IncludeOptional conf/extra/httpd-vhosts.conf
  IncludeOptional conf/extra/httpd-ssl.conf
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf/extra
  vm12# vi httpd-vhosts.conf (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  <VirtualHost *:80>
    ServerName site1.example.com
    ServerAdmin site1@example.com
    DocumentRoot "/usr/local/apache2/htdocs/site1"
    CustomLog "logs/site1_access_log" common
    ErrorLog "logs/site1_error_log"
  </VirtualHost>
  
  <VirtualHost *:80>
    ServerName site2.example.com
    ServerAdmin site2@example.com
    DocumentRoot "/usr/local/apache2/htdocs/site2"
    CustomLog "logs/site2_access_log" common
    ErrorLog "logs/site2_error_log"
  </VirtualHost>
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf/extra
  vm12# vi httpd-ssl.conf (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  ## リスニング対象のポート番号
  Listen 443

  ## クライアント接続時に許可する暗号化ランク
  SSLCipherSuite HIGH:MEDIUM:!MD5:!RC4:!3DES
  SSLProxyCipherSuite HIGH:MEDIUM:!MD5:!RC4:!3DES

  ## 負荷の低い暗号化アルゴリズムを自動選択
  SSLHonorCipherOrder on

  ## サポートするプロトコル
  SSLProtocol all -SSLv3
  SSLProxyProtocol all -SSLv3

  ## 秘密鍵パスフレーズ入力時の入力方式
  SSLPassPhraseDialog builtin
  
  ## SSL/TLS関連の環境変数をCGI/SSIで使用可能
  <FilesMatch "\.(cgi|shtml|phtml|php)$">
    SSLOptions +StdEnvVars
  </FilesMatch>
  
  ## SSL/TLS関連の環境変数をCGI/SSIで使用可能
  <Directory "/usr/local/apache2/cgi-bin">
    SSLOptions +StdEnvVars
  </Directory>
  
  ## MSIE関連の問題解決
  BrowserMatch "MSIE [2-5]" nokeepalive ssl-unclean-shutdown downgrade-1.0 force-response-1.0
  
  ## HTTPS接続時のデフォルト設定(site1)
  <VirtualHost *:443>
    ServerName site1.example.com
    ServerAdmin site1@example.com
    DocumentRoot "/usr/local/apache2/htdocs/site1"
    SSLEngine on
    SSLCertificateFile "/opt/pki/site/site1.crt"
    SSLCertificateKeyFile "/opt/pki/site/site1.key"
  </VirtualHost>

  ## HTTPS接続時のデフォルト設定(site2)
  <VirtualHost *:443>
    ServerName site2.example.com
    ServerAdmin site2@example.com
    DocumentRoot "/usr/local/apache2/htdocs/site2"
    SSLEngine on
    SSLCertificateFile "/opt/pki/site/site2.crt"
    SSLCertificateKeyFile "/opt/pki/site/site2.key"
  </VirtualHost>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/hosts (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
  ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
  192.168.122.11 vm11
  192.168.122.12 vm12 site1.example.com site2.example.com (修正)
  192.168.122.13 vm13
  192.168.122.14 vm14
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/htdocs
  vm12# mkdir site1 site2
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/htdocs
  vm12# echo "<html><body><h1>サイト1</h1></body></html>" > site1/index.html
  vm12# echo "<html><body><h1>サイト2</h1></body></html>" > site2/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl configtest (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  Syntax OK
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl start (Apacheを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  Apache/2.4.52 mod_ssl (Pass Phrase Dialog)
  Some of your private key files are encrypted for security reasons.
  In order to read them you have to provide the pass phrases.
  
  Private key site2.example.com:443:0 (/opt/pki/site/site2.key)
  Enter pass phrase: (秘密鍵のパスフレーズを入力)
  
  // パスフレーズの認証が正常に行われた旨のメッセージ出力
  OK: Pass Phrase Dialog successful.
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://site1.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト1</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://site2.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト2</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl --cacert /opt/pki/SiteCA/SiteCaCert.pem https://site1.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト1</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl --cacert /opt/pki/SiteCA/SiteCaCert.pem https://site2.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト2</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl stop (Apacheを停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[X1]
  設定ファイル(httpd.conf) - 07 (基本認証)
  
[内容]
  ## 作業内容
    サイト(http://vm12.example.com)アクセス時に基本認証を行う
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /usr/local/apache2         // ServerRoot
      | -- /conf               // Config-Directory
              | -- httpd.conf  // Main-Config
      | -- /htdocs             // DocumentRoot
              | -- index.html  // HTML
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/conf/httpd.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## ロードするモジュール一覧
  LoadModule authn_file_module modules/mod_authn_file.so
  LoadModule authn_core_module modules/mod_authn_core.so
  LoadModule authz_host_module modules/mod_authz_host.so
  LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
  LoadModule authz_user_module modules/mod_authz_user.so
  LoadModule authz_core_module modules/mod_authz_core.so
  LoadModule access_compat_module modules/mod_access_compat.so
  LoadModule auth_basic_module modules/mod_auth_basic.so
  LoadModule reqtimeout_module modules/mod_reqtimeout.so
  LoadModule filter_module modules/mod_filter.so
  LoadModule mime_module modules/mod_mime.so
  LoadModule log_config_module modules/mod_log_config.so
  LoadModule env_module modules/mod_env.so
  LoadModule headers_module modules/mod_headers.so
  LoadModule setenvif_module modules/mod_setenvif.so
  LoadModule version_module modules/mod_version.so
  LoadModule unixd_module modules/mod_unixd.so
  LoadModule status_module modules/mod_status.so
  LoadModule autoindex_module modules/mod_autoindex.so
  LoadModule dir_module modules/mod_dir.so
  LoadModule alias_module modules/mod_alias.so
  
  ## トップディレクトリ
  ServerRoot "/usr/local/apache2"
  
  ## リスニング対象のポート番号
  Listen 80
  
  ## 子プロセスの実行ユーザー
  User apache
  
  ## 子プロセスの実行グループ
  Group apache
  
  ## HTTPヘッダ内のバージョン表示
  ServerTokens prod
  
  ## サーバー管理者のメールアドレス
  ServerAdmin makoto@example.com
  
  ## ホスト名
  ServerName vm12.example.com
  
  ## 起動する子プロセス数
  StartServers 1
  
  ## 待機する子プロセス最小数
  MinSpareServers 1
  
  ## 待機する子プロセス最大数
  MaxSpareServers 5
  
  ## 生成される子プロセス数の上限
  ServerLimit 5
  
  ## 最大同時接続数
  MaxRequestWorkers 5
  
  ## 接続タイムアウト(秒)
  Timeout 10
  
  ## キープアライブ
  KeepAlive on
  
  ## キープアライブ上限リクエスト数
  MaxKeepAliveRequests 100
  
  ## キープアライブタイムアウト(秒)
  KeepAliveTimeout 10
  
  ## ディレクトリ(/)に適用
  <Directory />
    AllowOverride none
    Require all denied
  </Directory>
  
  ## ドキュメントルート
  DocumentRoot "/usr/local/apache2/htdocs"
  
  ## ディレクトリのインデックスとして返すファイル名
  DirectoryIndex index.html
  
  ## ディレクトリ(/usr/local/apache2/htdocs)に適用
  <Directory "/usr/local/apache2/htdocs">
    AuthType basic                                 // 基本認証
    AuthName "Enter USER and PASS"                 // 入力メッセージ
    AuthUserFile /usr/local/apache2/conf/htpasswd  // パスワードファイル
    Require valid-user                             // 基本認証パス時にアクセス可
  </Directory>
  
  ## 外部設定ファイル
  AccessFileName .htaccess
  
  ## 外部設定ファイル(.htaccess)が存在する場合のみ適用
  <Files ".htaccess">
    Require all denied
  </Files>
  
  ## ログレベル
  LogLevel warn
  
  ## ログ書式(common)を定義
  LogFormat "%h %l %u %t \"%r\" %>s %b" common
  
  ## アクセスログ出力場所(ServerRoot + logs/access_log)
  CustomLog "logs/access_log" common
  
  ## エラーログ出力場所(ServerRoot + logs/error_log)
  ErrorLog "logs/error_log"
  
  ## CGI(http://(ServerName)/cgi-bin/sample.cgi -> /usr/local/apache2/cgi-bin/sample.cgi)
  ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
  
  ## ディレクトリ(/usr/local/apache2/cgi-bin)に適用
  <Directory "/usr/local/apache2/cgi-bin">
    Options None
    AllowOverride None
    Require all granted
  </Directory>
  
  ## リクエストヘッダ追加
  RequestHeader unset Proxy early
  
  ## モジュール(mime_module)のロード時のみ適用
  <IfModule mime_module>
    TypesConfig conf/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
  </IfModule>
  
  ## モジュール(ssl_module)のロード時のみ適用
  <IfModule ssl_module>
    SSLRandomSeed startup builtin
    SSLRandomSeed connect builtin
  </IfModule>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# htpasswd -c /usr/local/apache2/conf/htpasswd Kate (パスワードファイルにユーザー登録)
  
  コマンドの実行結果
  --------------------------------------------------
  New password: (Kate1と入力)
  Re-type new password: (Kate1と入力)
  Adding password for user Kate
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl configtest (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  Syntax OK
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/htdocs/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/hosts (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
  ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
  192.168.122.11 vm11
  192.168.122.12 vm12 vm12.example.com (修正)
  192.168.122.13 vm13
  192.168.122.14 vm14
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl start (Apacheを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl -u Kate:Kate1 http://vm12.example.com (サイトアクセス時に基本認証)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl stop (Apacheを停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[X2]
  設定ファイル(httpd.conf) - 08 (ダイジェスト認証)
  
[内容]
  ## 作業内容
    サイト(http://vm12.example.com)アクセス時にダイジェスト認証を行う
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /usr/local/apache2         // ServerRoot
      | -- /conf               // Config-Directory
              | -- httpd.conf  // Main-Config
      | -- /htdocs             // DocumentRoot
              | -- index.html  // HTML
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/conf/httpd.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## ロードするモジュール一覧
  LoadModule authn_file_module modules/mod_authn_file.so
  LoadModule authn_core_module modules/mod_authn_core.so
  LoadModule authz_host_module modules/mod_authz_host.so
  LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
  LoadModule authz_user_module modules/mod_authz_user.so
  LoadModule authz_core_module modules/mod_authz_core.so
  LoadModule access_compat_module modules/mod_access_compat.so
  LoadModule auth_basic_module modules/mod_auth_basic.so
  LoadModule reqtimeout_module modules/mod_reqtimeout.so
  LoadModule filter_module modules/mod_filter.so
  LoadModule mime_module modules/mod_mime.so
  LoadModule log_config_module modules/mod_log_config.so
  LoadModule env_module modules/mod_env.so
  LoadModule headers_module modules/mod_headers.so
  LoadModule setenvif_module modules/mod_setenvif.so
  LoadModule version_module modules/mod_version.so
  LoadModule unixd_module modules/mod_unixd.so
  LoadModule status_module modules/mod_status.so
  LoadModule autoindex_module modules/mod_autoindex.so
  LoadModule dir_module modules/mod_dir.so
  LoadModule alias_module modules/mod_alias.so
  
  ## 追加モジュール
  LoadModule auth_digest_module modules/mod_auth_digest.so

  ## トップディレクトリ
  ServerRoot "/usr/local/apache2"
  
  ## リスニング対象のポート番号
  Listen 80
  
  ## 子プロセスの実行ユーザー
  User apache
  
  ## 子プロセスの実行グループ
  Group apache
  
  ## HTTPヘッダ内のバージョン表示
  ServerTokens prod
  
  ## サーバー管理者のメールアドレス
  ServerAdmin makoto@example.com
  
  ## ホスト名
  ServerName vm12.example.com
  
  ## 起動する子プロセス数
  StartServers 1
  
  ## 待機する子プロセス最小数
  MinSpareServers 1
  
  ## 待機する子プロセス最大数
  MaxSpareServers 5
  
  ## 生成される子プロセス数の上限
  ServerLimit 5
  
  ## 最大同時接続数
  MaxRequestWorkers 5
  
  ## 接続タイムアウト(秒)
  Timeout 10
  
  ## キープアライブ
  KeepAlive on
  
  ## キープアライブ上限リクエスト数
  MaxKeepAliveRequests 100
  
  ## キープアライブタイムアウト(秒)
  KeepAliveTimeout 10
  
  ## ディレクトリ(/)に適用
  <Directory />
    AllowOverride none
    Require all denied
  </Directory>
  
  ## ドキュメントルート
  DocumentRoot "/usr/local/apache2/htdocs"
  
  ## ディレクトリのインデックスとして返すファイル名
  DirectoryIndex index.html
  
  ## ディレクトリ(/usr/local/apache2/htdocs)に適用
  <Directory "/usr/local/apache2/htdocs">
    AuthType Digest                                // ダイジェスト認証
    AuthName "DocRoot"                             // 認証領域名
    AuthUserFile /usr/local/apache2/conf/htdigest  // パスワードファイル
    Require valid-user                             // ダイジェスト認証パス時にアクセス可
  </Directory>
  
  ## 外部設定ファイル
  AccessFileName .htaccess
  
  ## 外部設定ファイル(.htaccess)が存在する場合のみ適用
  <Files ".htaccess">
    Require all denied
  </Files>
  
  ## ログレベル
  LogLevel warn
  
  ## ログ書式(common)を定義
  LogFormat "%h %l %u %t \"%r\" %>s %b" common
  
  ## アクセスログ出力場所(ServerRoot + logs/access_log)
  CustomLog "logs/access_log" common
  
  ## エラーログ出力場所(ServerRoot + logs/error_log)
  ErrorLog "logs/error_log"
  
  ## CGI(http://(ServerName)/cgi-bin/sample.cgi -> /usr/local/apache2/cgi-bin/sample.cgi)
  ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
  
  ## ディレクトリ(/usr/local/apache2/cgi-bin)に適用
  <Directory "/usr/local/apache2/cgi-bin">
    Options None
    AllowOverride None
    Require all granted
  </Directory>
  
  ## リクエストヘッダ追加
  RequestHeader unset Proxy early
  
  ## モジュール(mime_module)のロード時のみ適用
  <IfModule mime_module>
    TypesConfig conf/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
  </IfModule>
  
  ## モジュール(ssl_module)のロード時のみ適用
  <IfModule ssl_module>
    SSLRandomSeed startup builtin
    SSLRandomSeed connect builtin
  </IfModule>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# htdigest -c /usr/local/apache2/conf/htdigest DocRoot(認証領域名) Jill (パスワードファイルにユーザー登録)
  
  コマンドの実行結果
  --------------------------------------------------
  Adding password for Jill in realm DocRoot.
  New password: (Jill1と入力)
  Re-type new password: (Jill1と入力)
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl configtest (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  Syntax OK
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/htdocs/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/hosts (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
  ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
  192.168.122.11 vm11
  192.168.122.12 vm12 vm12.example.com (修正)
  192.168.122.13 vm13
  192.168.122.14 vm14
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl start (Apacheを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl --digest --user Jill:Jill1 http://vm12.example.com (サイトアクセス時にダイジェスト認証)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl stop (Apacheを停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[X3]
  設定ファイル(httpd.conf) - 09 (ホストベースのアクセス制御)
  
[内容]
  ## 作業内容
    サイト(http://vm12.example.com)アクセス時にホストベースのアクセス制御を行う
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## 使用マシン
    HOST : vm13
    IPV4 : 192.168.122.13
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /usr/local/apache2         // ServerRoot
      | -- /conf               // Config-Directory
              | -- httpd.conf  // Main-Config
      | -- /htdocs             // DocumentRoot
              | -- index.html  // HTML
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd /usr/local/apache2/conf
  vm12# cp -p httpd.conf httpd.conf.org (設定ファイルのバックアップ)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/conf/httpd.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## ロードするモジュール一覧
  LoadModule authn_file_module modules/mod_authn_file.so
  LoadModule authn_core_module modules/mod_authn_core.so
  LoadModule authz_host_module modules/mod_authz_host.so
  LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
  LoadModule authz_user_module modules/mod_authz_user.so
  LoadModule authz_core_module modules/mod_authz_core.so
  LoadModule access_compat_module modules/mod_access_compat.so
  LoadModule auth_basic_module modules/mod_auth_basic.so
  LoadModule reqtimeout_module modules/mod_reqtimeout.so
  LoadModule filter_module modules/mod_filter.so
  LoadModule mime_module modules/mod_mime.so
  LoadModule log_config_module modules/mod_log_config.so
  LoadModule env_module modules/mod_env.so
  LoadModule headers_module modules/mod_headers.so
  LoadModule setenvif_module modules/mod_setenvif.so
  LoadModule version_module modules/mod_version.so
  LoadModule unixd_module modules/mod_unixd.so
  LoadModule status_module modules/mod_status.so
  LoadModule autoindex_module modules/mod_autoindex.so
  LoadModule dir_module modules/mod_dir.so
  LoadModule alias_module modules/mod_alias.so
  
  ## トップディレクトリ
  ServerRoot "/usr/local/apache2"
  
  ## リスニング対象のポート番号
  Listen 80
  
  ## 子プロセスの実行ユーザー
  User apache
  
  ## 子プロセスの実行グループ
  Group apache
  
  ## HTTPヘッダ内のバージョン表示
  ServerTokens prod
  
  ## サーバー管理者のメールアドレス
  ServerAdmin makoto@example.com
  
  ## ホスト名
  ServerName vm12.example.com
  
  ## 起動する子プロセス数
  StartServers 1
  
  ## 待機する子プロセス最小数
  MinSpareServers 1
  
  ## 待機する子プロセス最大数
  MaxSpareServers 5
  
  ## 生成される子プロセス数の上限
  ServerLimit 5
  
  ## 最大同時接続数
  MaxRequestWorkers 5
  
  ## 接続タイムアウト(秒)
  Timeout 10
  
  ## キープアライブ
  KeepAlive on
  
  ## キープアライブ上限リクエスト数
  MaxKeepAliveRequests 100
  
  ## キープアライブタイムアウト(秒)
  KeepAliveTimeout 10
  
  ## ディレクトリ(/)に適用
  <Directory />
    AllowOverride none
    Require all denied
  </Directory>
  
  ## ドキュメントルート
  DocumentRoot "/usr/local/apache2/htdocs"
  
  ## ディレクトリのインデックスとして返すファイル名
  DirectoryIndex index.html
  
  ## ディレクトリ(/usr/local/apache2/htdocs)に適用
  <Directory "/usr/local/apache2/htdocs">
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all denied         // 全ホストを拒否
    Require ip 192.168.122.12  // ホスト(192.168.122.12)のみ許可
  </Directory>
  
  ## 外部設定ファイル
  AccessFileName .htaccess
  
  ## 外部設定ファイル(.htaccess)が存在する場合のみ適用
  <Files ".htaccess">
    Require all denied
  </Files>
  
  ## ログレベル
  LogLevel warn
  
  ## ログ書式(common)を定義
  LogFormat "%h %l %u %t \"%r\" %>s %b" common
  
  ## アクセスログ出力場所(ServerRoot + logs/access_log)
  CustomLog "logs/access_log" common
  
  ## エラーログ出力場所(ServerRoot + logs/error_log)
  ErrorLog "logs/error_log"
  
  ## CGI(http://(ServerName)/cgi-bin/sample.cgi -> /usr/local/apache2/cgi-bin/sample.cgi)
  ScriptAlias /cgi-bin/ "/usr/local/apache2/cgi-bin/"
  
  ## ディレクトリ(/usr/local/apache2/cgi-bin)に適用
  <Directory "/usr/local/apache2/cgi-bin">
    Options None
    AllowOverride None
    Require all granted
  </Directory>
  
  ## リクエストヘッダ追加
  RequestHeader unset Proxy early
  
  ## モジュール(mime_module)のロード時のみ適用
  <IfModule mime_module>
    TypesConfig conf/mime.types
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
  </IfModule>
  
  ## モジュール(ssl_module)のロード時のみ適用
  <IfModule ssl_module>
    SSLRandomSeed startup builtin
    SSLRandomSeed connect builtin
  </IfModule>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl configtest (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  Syntax OK
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/apache2/htdocs/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/hosts (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
  ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
  192.168.122.11 vm11
  192.168.122.12 vm12 vm12.example.com (修正)
  192.168.122.13 vm13
  192.168.122.14 vm14
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# apachectl start (Apacheを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://vm12.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
    
    vm13$ cd $HOME
    vm13$ sudo vi /etc/hosts
    
    コマンドの実行結果
    --------------------------------------------------
    127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
    ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
    192.168.122.11 vm11
    192.168.122.12 vm12 vm12.example.com (修正)
    192.168.122.13 vm13
    192.168.122.14 vm14
    --------------------------------------------------
    
    vm13$ cd $HOME
    vm13$ curl http://vm12.example.com
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> You don't have permission to access this resource. のメッセージ
    --------------------------------------------------
    
  vm12# cd $HOME
  vm12# apachectl stop (Apacheを停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[14]
  ソースから構築(Nginx)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## 前提条件
    PCRE (Apacheでインストール済み)
    OPENSSL (Apacheでインストール済み)
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install zlib zlib-static (パッケージ追加)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate http://nginx.org/download/nginx-1.21.5.tar.gz (ソース取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf nginx-1.21.5.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/nginx-1.21.5
  vm12$ (Makefile生成)
    sudo ./configure
    --prefix=/etc/nginx
    --sbin-path=/usr/sbin/nginx
    --with-pcre=/usr/local/src/pcre-8.45  // PCRE(ソース)
    --with-http_addition_module
    --with-http_dav_module
    --with-http_gzip_static_module
    --with-http_realip_module
    --with-http_stub_status_module
    --with-http_ssl_module
    --with-http_sub_module
    --with-mail
    --with-mail_ssl_module
    --with-openssl=/usr/local/src/openssl-1.1.0h  // OPENSSL(ソース)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/nginx-1.21.5
  vm12$ sudo make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/nginx-1.21.5
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ which nginx (コマンドのパス開通を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  /usr/sbin/nginx
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[15]
  制御コマンド(Nginx)
  
[内容]
  ## 作業内容
    制御コマンド(nginx)で「Nginx」の制御を行う
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド(nginx)
    nginx            // Nginxを起動する
    nginx -s stop    // Nginxを停止する
    nginx -s quit    // Nginxを安全に停止する
    nginx -s reload  // Nginxの設定ファイルを読み込む
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# nginx (Nginxを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep nginx | grep -v grep (Nginxのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
  root      1364  0.0  0.0  20976   880 ?        Ss   10:45   0:00 nginx: master process nginx  // マスタープロセス
  nobody    1365  0.0  0.1  21436  1572 ?        S    10:45   0:00 nginx: worker process        // ワーカープロセス
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl localhost:80 (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> Nginxのデフォルトページ表示
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# nginx -s quit (Nginxを安全に停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ps aux | grep nginx | grep -v grep (Nginxのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------

  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[16]
  設定ファイル(nginx.conf) - 01 (単独サイト)
  
[内容]
  ## 作業内容
    設定ファイル(nginx.conf)で様々なサイト構築パターンを試してみる
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /etc/nginx
      | -- /conf
              | -- nginx.conf  // Main-Config
      | -- /html               // DocumentRoot
              | -- index.html  // HTML
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd /etc/nginx/conf
  vm12# vi nginx.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## ワーカープロセス数
  worker_processes 1;
  
  ## events モジュール
  events {
    worker_connections 1024;
  }
  
  ## Web サーバー
  http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    server {
      listen 80;                     # Port 80
      server_name vm12.example.com;  # FQDN
      location / {                   # / = 'http://vm12.example.com/'
        root html;                   # DocumentRoot
        index index.html index.htm;  # DirectoryIndex
      }
      error_page 500 502 503 504 /50x.html;
      location = /50x.html {
        root html;
      }
    }
  }
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ngix -t (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  nginx: the configuration file /etc/nginx/conf/nginx.conf syntax is ok
  nginx: configuration file /etc/nginx/conf/nginx.conf test is successful
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/nginx/html/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/hosts (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
  ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
  192.168.122.11 vm11
  192.168.122.12 vm12 vm12.example.com (修正)
  192.168.122.13 vm13
  192.168.122.14 vm14
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# nginx (Nginxを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://vm12.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# nginx -s quit (Nginxを安全に停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[17]
  設定ファイル(nginx.conf) - 02 (複数サイト)
  
[内容]
  ## 作業内容
    設定ファイル(nginx.conf)で様々なサイト構築パターンを試してみる
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /etc/nginx
      | -- /conf
              | -- nginx.conf  // Main-Config
              | -- vhost.conf  // Extra-Config
      | -- /html
              | -- site1               // DocumentRoot1
                      | -- index.html  // HTML1
              | -- site2               // DocumentRoot2
                      | -- index.html  // HTML2
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd /etc/nginx/conf
  vm12# vi nginx.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## ワーカープロセス数
  worker_processes 1;
  
  ## events モジュール
  events {
    worker_connections 1024;
  }
  
  ## Web サーバー
  http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    include vhost.conf;  # 追加設定ファイル
  }
  --------------------------------------------------
  
  vm12# cd /etc/nginx/conf
  vm12# vi vhost.conf (設定ファイルの作成)
  
  コマンドの実行結果
  --------------------------------------------------
  ## site1
  server {
    listen 80;                      # Port 80
    server_name site1.example.com;  # FQDN
    location / {                    # / = 'http://site1.example.com/'
      root /etc/nginx/html/site1;   # DocumentRoot
      index index.html index.htm;   # DirectoryIndex
    }
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root html;
    }
  }

  ## site2
  server {
    listen 80;                      # Port 80
    server_name site2.example.com;  # FQDN
    location / {                    # / = 'http://site2.example.com/'
      root /etc/nginx/html/site2;   # DocumentRoot
      index index.html index.htm;   # DirectoryIndex
    }
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root html;
    }
  }
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/hosts (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
  ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
  192.168.122.11 vm11
  192.168.122.12 vm12 vm12.example.com site1.example.com site2.example.com (修正)
  192.168.122.13 vm13
  192.168.122.14 vm14
  --------------------------------------------------
  
  vm12# cd /etc/nginx/html
  vm12# mkdir site1 site2
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /etc/nginx/html
  vm12# echo "<html><body><h1>サイト1</h1></body></html>" > site1/index.html
  vm12# echo "<html><body><h1>サイト2</h1></body></html>" > site2/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# nginx -t (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  nginx: the configuration file /etc/nginx/conf/nginx.conf syntax is ok
  nginx: configuration file /etc/nginx/conf/nginx.conf test is successful
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# nginx (Nginxを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://site1.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト1</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://site2.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト2</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# nginx -s quit (Nginxを安全に停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[18]
  設定ファイル(nginx.conf) - 03 (単独サイトのHTTPS化)
  
[内容]
  ## 作業内容
    設定ファイル(nginx.conf)で様々なサイト構築パターンを試してみる
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /opt/pki
      | -- /site
              | -- vm12.key  // サイト(vm12)の秘密鍵
              | -- vm12.csr  // サイト(vm12)の証明書署名要求(CSR)
              | -- vm12.crt  // サイト(vm12)のデジタル証明書
    /etc/nginx
      | -- /conf
              | -- nginx.conf  // Main-Config
      | -- /html               // DocumentRoot
              | -- index.html  // HTML
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd /opt/pki/site
  vm12# ls -lh vm12* (デジタル証明書の確認)
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 4.3K  1月 18 12:48 vm12.crt  // デジタル証明書
  -rw-r--r--. 1 root root 1001  1月 18 12:47 vm12.csr  // 証明書署名要求(CSR)
  -rw-------. 1 root root 1.8K  1月 18 12:46 vm12.key  // 秘密鍵ファイル
  --------------------------------------------------
  
  vm12# cd /etc/nginx/conf
  vm12# vi nginx.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## ワーカープロセス数
  worker_processes 1;
  
  ## events モジュール
  events {
    worker_connections 1024;
  }
  
  ## Web サーバー
  http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    
    ## HTTP(80)
    server {
      listen 80;                     # Port 80
      server_name vm12.example.com;  # FQDN
      location / {                   # / = 'http://vm12.example.com/'
        root html;                   # DocumentRoot
        index index.html index.htm;  # DirectoryIndex
      }
      error_page 500 502 503 504 /50x.html;
      location = /50x.html {
        root html;
      }
    }
    
    ## HTTPS(443)
    server {
      listen 443 ssl;                # Port 443
      server_name vm12.example.com;  # FQDN
      ssl_certificate_key /opt/pki/site/vm12.key;   # 秘密鍵ファイル
      ssl_certificate /opt/pki/site/vm12.crt;       # デジタル証明書
      ssl_password_file /etc/nginx/conf/vm12-pass;  # 秘密鍵パスフレーズを記録したファイル
      ssl_protocols TLSv1 TLSv1.1 TLSv1.2;          # プロトコル
      ssl_ciphers HIGH:!aNULL:!MD5;                 # 暗号化アルゴリズム
      ssl_prefer_server_ciphers on;                 # 不明
      ssl_session_cache shared:SSL:10m;             # 不明
      ssl_session_timeout 10m;                      # 不明
      location / {                   # / = 'https://vm12.example.com/'
        root html;                   # DocumentRoot
        index index.html index.htm;  # DirectoryIndex
      }
      error_page 500 502 503 504 /50x.html;
      location = /50x.html {
        root html;
      }
    }
  }
  --------------------------------------------------
  
  vm12# cd /etc/nginx/conf
  vm12# echo (パスフレーズ) > vm12-pass (秘密鍵パスフレーズを記録したファイル作成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# nginx -t (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  nginx: the configuration file /etc/nginx/conf/nginx.conf syntax is ok
  nginx: configuration file /etc/nginx/conf/nginx.conf test is successful
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/nginx/html/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/hosts (設定ファイルの確認)
  
  コマンドの実行結果
  --------------------------------------------------
  127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
  ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
  192.168.122.11 vm11
  192.168.122.12 vm12 vm12.example.com (修正)
  192.168.122.13 vm13
  192.168.122.14 vm14
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# nginx (Nginxを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://vm12.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl --cacert /opt/pki/SiteCA/SiteCaCert.pem https://vm12.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# nginx -s quit (Nginxを安全に停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[19]
  設定ファイル(nginx.conf) - 04 (複数サイトのHTTPS化)
  
[内容]
  ## 作業内容
    設定ファイル(nginx.conf)で様々なサイト構築パターンを試してみる
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /opt/pki
      | -- /site
              | -- site1.key  // サイト(site1)の秘密鍵
              | -- site1.csr  // サイト(site1)の証明書署名要求(CSR)
              | -- site1.crt  // サイト(site1)のデジタル証明書
              | -- site2.key  // サイト(site2)の秘密鍵
              | -- site2.csr  // サイト(site2)の証明書署名要求(CSR)
              | -- site2.crt  // サイト(site2)のデジタル証明書
    /etc/nginx
      | -- /conf
              | -- nginx.conf  // Main-Config
              | -- vhost.conf  // Extra-Config
      | -- /html
              | -- site1               // DocumentRoot1
                      | -- index.html  // HTML1
              | -- site2               // DocumentRoot2
                      | -- index.html  // HTML2
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd /opt/pki/site
  vm12# ls -lh | grep -E 'site1|site2' (デジタル証明書の確認)
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 4.3K  1月 18 20:11 site1.crt  // デジタル証明書
  -rw-r--r--. 1 root root 1001  1月 18 20:10 site1.csr
  -rw-------. 1 root root 1.8K  1月 18 20:06 site1.key
  -rw-r--r--. 1 root root 4.3K  1月 18 20:15 site2.crt  // デジタル証明書
  -rw-r--r--. 1 root root 1001  1月 18 20:15 site2.csr
  -rw-------. 1 root root 1.8K  1月 18 20:13 site2.key
  --------------------------------------------------
  
  vm12# cd /etc/nginx/conf
  vm12# vi nginx.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## ワーカープロセス数
  worker_processes 1;
  
  ## events モジュール
  events {
    worker_connections 1024;
  }
  
  ## Web サーバー
  http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    include vhost.conf;  # 追加設定ファイル
  }
  --------------------------------------------------
  
  vm12# cd /etc/nginx/conf
  vm12# vi vhost.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## site1(80)
  server {
    listen 80;                      # Port 80
    server_name site1.example.com;  # FQDN
    location / {                    # / = 'http://site1.example.com/'
      root /etc/nginx/html/site1;   # DocumentRoot
      index index.html index.htm;   # DirectoryIndex
    }
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root html;
    }
  }

  ## site2(80)
  server {
    listen 80;                      # Port 80
    server_name site2.example.com;  # FQDN
    location / {                    # / = 'http://site2.example.com/'
      root /etc/nginx/html/site2;   # DocumentRoot
      index index.html index.htm;   # DirectoryIndex
    }
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root html;
    }
  }

  ## site1(443)
  server {
    listen 443 ssl;                 # Port 443
    server_name site1.example.com;  # FQDN
    ssl_certificate_key /opt/pki/site/site1.key;   # 秘密鍵ファイル
    ssl_certificate /opt/pki/site/site1.crt;       # デジタル証明書
    ssl_password_file /etc/nginx/conf/site1-pass;  # 秘密鍵パスフレーズを記録したファイル
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;           # プロトコル
    ssl_ciphers HIGH:!aNULL:!MD5;                  # 暗号化アルゴリズム
    ssl_prefer_server_ciphers on;                  # 不明
    ssl_session_cache shared:SSL:10m;              # 不明
    ssl_session_timeout 10m;                       # 不明
    location / {                    # / = 'https://site1.example.com/'
      root /etc/nginx/html/site1;   # DocumentRoot
      index index.html index.htm;   # DirectoryIndex
    }
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root html;
    }
  }

  ## site2(443)
  server {
    listen 443 ssl;                 # Port 443
    server_name site2.example.com;  # FQDN
    ssl_certificate_key /opt/pki/site/site2.key;   # 秘密鍵ファイル
    ssl_certificate /opt/pki/site/site2.crt;       # デジタル証明書
    ssl_password_file /etc/nginx/conf/site2-pass;  # 秘密鍵パスフレーズを記録したファイル
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;           # プロトコル
    ssl_ciphers HIGH:!aNULL:!MD5;                  # 暗号化アルゴリズム
    ssl_prefer_server_ciphers on;                  # 不明
    ssl_session_cache shared:SSL:10m;              # 不明
    ssl_session_timeout 10m;                       # 不明
    location / {                    # / = 'https://site2.example.com/'
      root /etc/nginx/html/site2;   # DocumentRoot
      index index.html index.htm;   # DirectoryIndex
    }
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root html;
    }
  }
  --------------------------------------------------
  
  vm12# cd /etc/nginx/conf
  vm12# echo (パスフレーズ) > site1-pass (秘密鍵パスフレーズを記録したファイル作成)
  vm12# echo (パスフレーズ) > site2-pass (秘密鍵パスフレーズを記録したファイル作成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/hosts (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
  ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
  192.168.122.11 vm11
  192.168.122.12 vm12 site1.example.com site2.example.com (修正)
  192.168.122.13 vm13
  192.168.122.14 vm14
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# nginx -t (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  nginx: the configuration file /etc/nginx/conf/nginx.conf syntax is ok
  nginx: configuration file /etc/nginx/conf/nginx.conf test is successful
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# nginx (Nginxを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://site1.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト1</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://site2.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト2</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl --cacert /opt/pki/SiteCA/SiteCaCert.pem https://site1.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト1</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl --cacert /opt/pki/SiteCA/SiteCaCert.pem https://site2.example.com (Webページ要求に対する応答)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト2</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# nginx -s quit (Nginxを安全に停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[20]
  設定ファイル(nginx.conf) - 05 (リバースプロキシ)
  
[内容]
  ## 作業内容
    設定ファイル(nginx.conf)で様々なサイト構築パターンを試してみる
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 単独サイト
  
  ## 使用マシン
    HOST : vm13
    IPV4 : 192.168.122.13
    MEMO : リバースプロキシ
  
  ## ディレクトリ構成(vm12)
    /etc/nginx
      | -- /conf
              | -- nginx.conf  // Main-Config
      | -- /html               // DocumentRoot
              | -- index.html  // HTML
  
  ## ディレクトリ構成(vm13)
    /etc/nginx
      | -- /conf
              | -- nginx.conf  // Main-Config
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd /etc/nginx/conf
  vm12# vi nginx.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## Worker Process Counts
  worker_processes 1;
  
  ## Module Events
  events {
    worker_connections 1024;
  }
  
  ## Web Server
  http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    server {
      listen 80;                     # Port 80
      server_name vm12.example.com;  # FQDN
      location / {                   # / = 'http://vm12.example.com/'
        root html;                   # DocumentRoot
        index index.html index.htm;  # DirectoryIndex
      }
      error_page 500 502 503 504 /50x.html;
      location = /50x.html {
        root html;
      }
    }
  }
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/nginx/html/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>単独サイト</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# ngix -t (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  nginx: the configuration file /etc/nginx/conf/nginx.conf syntax is ok
  nginx: configuration file /etc/nginx/conf/nginx.conf test is successful
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# firewall-cmd --add-service={http,https} --permanent
  
  コマンドの実行結果
  --------------------------------------------------
  success
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# firewall-cmd --reload
  
  コマンドの実行結果
  --------------------------------------------------
  success
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# nginx (Nginxを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
    
    vm13$ cd $HOME
    vm13$ su - root (rootユーザーに変更)
    
    コマンドの実行結果
    --------------------------------------------------
    (省略)
    --------------------------------------------------
    
    vm13# cd $HOME
    vm13# curl http://localhost (Webページ要求に対する応答)
    
    コマンドの実行結果
    --------------------------------------------------
    curl: (7) Failed connect to localhost:80; 接続を拒否されました
    --------------------------------------------------
    
    vm13# cd /etc/nginx/conf
    vm13# vi nginx.conf (設定ファイル編集)
    
    コマンドの実行結果
    --------------------------------------------------
    ## Worker Process Counts
    worker_processes 1;
    
    ## Module Events
    events {
      worker_connections 1024;
    }
    
    ## Web Server
    http {
      include mime.types;
      default_type application/octet-stream;
      sendfile on;
      keepalive_timeout 65;
      server {
        listen 80;                           # Port 80
        server_name localhost;               # FQDN
        location / {                         # / = 'http://localhost/'
          proxy_pass http://192.168.122.12;  # Redirect
        }
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
          root html;
        }
      }
    }
    --------------------------------------------------
    
    vm13# cd $HOME
    vm13# ngix -t (設定ファイルの構文チェック)
    
    コマンドの実行結果
    --------------------------------------------------
    nginx: the configuration file /etc/nginx/conf/nginx.conf syntax is ok
    nginx: configuration file /etc/nginx/conf/nginx.conf test is successful
    --------------------------------------------------
    
    vm13# cd $HOME
    vm13# nginx (Nginxを起動する)
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm13# cd $HOME
    vm13# curl http://localhost (Webページ要求に対する応答)
    
    コマンドの実行結果
    --------------------------------------------------
    <html><body><h1>単独サイト</h1></body></html>
    --------------------------------------------------
    
    vm13# cd $HOME
    vm13# nginx -s quit (Nginxを安全に停止する)
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 出力なし
    --------------------------------------------------
    
    vm13# cd $HOME
    vm13# exit (rootユーザーからログアウト)
    
    コマンドの実行結果
    --------------------------------------------------
    ログアウト
    --------------------------------------------------
    
  vm12# cd $HOME
  vm12# nginx -s quit (Nginxを安全に停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[21]
  ソースから構築(Squid)
  
[内容]
  ## 作業内容
    ソースからコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
[確認]
  vm12$ cd /usr/local/src
  vm12$ sudo wget --no-check-certificate http://www.squid-cache.org/Versions/v5/squid-5.3.tar.gz (ソース取得)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src
  vm12$ sudo tar -zxf squid-5.3.tar.gz (アーカイブ解凍と展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/squid-5.3
  vm12$ sudo ./configure --prefix=/usr/local/squid-5.3 (Makefile生成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/squid-5.3
  vm12$ sudo make all (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/local/src/squid-5.3
  vm12$ sudo make install (インストール実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo chown -R nobody:nobody /usr/local/squid-5.3 (権限変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd /usr/lib/systemd/system
  vm12$ sudo vi squid.service (権限変更)
  
  コマンドの実行結果
  --------------------------------------------------
  [Unit]
  Description=Squid caching proxy
  After=syslog.target network.target nss-lookup.target
  
  [Service]
  Type=forking
  LimitNOFILE=16384
  # EnvironmentFile=/etc/sysconfig/squid
  # EnvironmentFile=/usr/local/squid-5.3/etc/squid.conf
  Environment="SQUID_CONF=/usr/local/squid-5.3/etc/squid.conf"
  ExecStartPre=/usr/local/squid-5.3/libexec/cache_swap.sh
  ExecStart=/usr/local/squid-5.3/sbin/squid $SQUID_OPTS -f $SQUID_CONF
  ExecReload=/usr/local/squid-5.3/sbin/squid $SQUID_OPTS -k reconfigure -f $SQUID_CONF
  ExecStop=/usr/local/squid-5.3/sbin/squid -k shutdown -f $SQUID_CONF
  TimeoutSec=0
  
  [Install]
  WantedBy=multi-user.target
  --------------------------------------------------
  
  vm12$ cd /usr/local/squid-5.3/libexec
  vm12$ sudo vi cache_swap.sh (シェルの設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash

  if [ -f /etc/sysconfig/squid ]; then
    . /etc/sysconfig/squid
  fi
  
  SQUID_CONF=${SQUID_CONF:-"/usr/local/squid-5.3/etc/squid.conf"}
  CACHE_SWAP=`sed -e 's/#.*//g' $SQUID_CONF | grep cache_dir | awk '{ print $3 }'`
  
  for adir in $CACHE_SWAP; do
    if [ ! -d $adir/00 ]; then
      echo -n "init_cache_dir $adir… "
      squid -N -z -F -f $SQUID_CONF >> /usr/local/squid-5.3/var/logs/squid.out 2>&1
    fi
  done
  --------------------------------------------------
  
  vm12$ cd /usr/local/squid-5.3/libexec
  vm12$ sudo chmod +x cache_swap.sh (権限付与)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[22]
  制御コマンド(Squid)
  
[内容]
  ## 作業内容
    制御コマンド(systemctl)で「Squid」の制御を行う
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## コマンド(squid)
    systemctl start  squid  // Squidを起動する
    systemctl stop   squid  // Squidを停止する
    systemctl status squid  // Squidを確認する
    systemctl reload squid  // Squidの設定を再読込
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# systemctl start squid (Squidを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# systemctl status squid (Squidのプロセスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  ● squid.service - Squid caching proxy
     Loaded: loaded (/usr/lib/systemd/system/squid.service; disabled; vendor preset: disabled)
     Active: active (running) since 金 2022-01-21 08:57:02 JST; 8s ago
    Process: 1236 ExecStart=/usr/local/squid-5.3/sbin/squid $SQUID_OPTS -f $SQUID_CONF (code=exited, status=0/SUCCESS)
    Process: 1231 ExecStartPre=/usr/local/squid-5.3/libexec/cache_swap.sh (code=exited, status=0/SUCCESS)
   Main PID: 1238 (squid)
     CGroup: /system.slice/squid.service
             ├─1238 /usr/local/squid-5.3/sbin/squid -f /usr/local/squid-5.3/etc…
             ├─1240 (squid-1) --kid squid-1 -f /usr/local/squid-5.3/etc/squid.c…
             └─1241 (logfile-daemon) /usr/local/squid-5.3/var/logs/access.log
  
  1月 21 08:57:01 vm12 systemd[1]: Starting Squid caching proxy…
  1月 21 08:57:02 vm12 systemd[1]: Started Squid caching proxy.
  1月 21 08:57:02 vm12 squid[1238]: Squid Parent: will start 1 kids
  1月 21 08:57:02 vm12 squid[1238]: Squid Parent: (squid-1) process 1240 started
  Hint: Some lines were ellipsized, use -l to show in full.
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# systemctl stop squid (Squidを停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[23]
  設定ファイル(squid.conf) - 01 (サイトのフィルタリング)
  
[内容]
  ## 作業内容
    設定ファイル(squid.conf)でサイトのフィルタリングを試してみる
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン
  
  ## ディレクトリ構成
    /usr/local/squid-5.3
      | -- /etc
              | -- squid.conf  // Main-Config
  
[確認]
  vm12$ cd $HOME
  vm12$ su - root (rootユーザーに変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12# cd /etc/nginx/conf
  vm12# vi nginx.conf (設定ファイル編集)
  
  コマンドの実行結果
  --------------------------------------------------
  ## ワーカープロセス数
  worker_processes 1;
  
  ## events モジュール
  events {
    worker_connections 1024;
  }
  
  ## Web サーバー
  http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    include vhost.conf;  # 追加設定ファイル
  }
  --------------------------------------------------
  
  vm12# cd /etc/nginx/conf
  vm12# vi vhost.conf (設定ファイルの作成)
  
  コマンドの実行結果
  --------------------------------------------------
  ## site1
  server {
    listen 80;                      # Port 80
    server_name site1.example.com;  # FQDN
    location / {                    # / = 'http://site1.example.com/'
      root /etc/nginx/html/site1;   # DocumentRoot
      index index.html index.htm;   # DirectoryIndex
    }
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root html;
    }
  }

  ## site2
  server {
    listen 80;                      # Port 80
    server_name site2.example.com;  # FQDN
    location / {                    # / = 'http://site2.example.com/'
      root /etc/nginx/html/site2;   # DocumentRoot
      index index.html index.htm;   # DirectoryIndex
    }
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
      root html;
    }
  }
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /etc/hosts (設定ファイルの修正)
  
  コマンドの実行結果
  --------------------------------------------------
  127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
  ::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
  192.168.122.11 vm11
  192.168.122.12 vm12 site1.example.com site2.example.com (修正)
  192.168.122.13 vm13
  192.168.122.14 vm14
  --------------------------------------------------
  
  vm12# cd /etc/nginx/html
  vm12# mkdir site1 site2
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd /etc/nginx/html
  vm12# echo "<html><body><h1>サイト1</h1></body></html>" > site1/index.html
  vm12# echo "<html><body><h1>サイト2</h1></body></html>" > site2/index.html
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# nginx -t (設定ファイルの構文チェック)
  
  コマンドの実行結果
  --------------------------------------------------
  nginx: the configuration file /etc/nginx/conf/nginx.conf syntax is ok
  nginx: configuration file /etc/nginx/conf/nginx.conf test is successful
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# firewall-cmd --add-service={http,https} --permanent
  
  コマンドの実行結果
  --------------------------------------------------
  success
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# firewall-cmd --reload
  
  コマンドの実行結果
  --------------------------------------------------
  success
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# nginx (Nginxを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/squid-5.3/etc/squid.conf
  
  コマンドの実行結果
  --------------------------------------------------
  ##
  ## 最小限の設定(推奨)
  ##
  
  ## アクセス可能なネットワーク
  # acl localnet src 0.0.0.1-0.255.255.255  # RFC 1122 "this" network (LAN)
  # acl localnet src 10.0.0.0/8             # RFC 1918 local private network (LAN)
  # acl localnet src 100.64.0.0/10          # RFC 6598 shared address space (CGN)
  # acl localnet src 169.254.0.0/16         # RFC 3927 link-local (directly plugged) machines
  # acl localnet src 172.16.0.0/12          # RFC 1918 local private network (LAN)
  acl localnet src 192.168.122.0/24         # RFC 1918 local private network (LAN)
  # acl localnet src fc00::/7               # RFC 4193 local private network range
  # acl localnet src fe80::/10              # RFC 4291 link-local (directly plugged) machines
  
  ## ポート番号の定義
  acl SSL_ports  port 443         # ssl/tls
  acl Safe_ports port 80          # http
  acl Safe_ports port 21          # ftp
  acl Safe_ports port 443         # https
  acl Safe_ports port 70          # gopher
  acl Safe_ports port 210         # wais
  acl Safe_ports port 1025-65535  # unregistered ports
  acl Safe_ports port 280         # http-mgmt
  acl Safe_ports port 488         # gss-http
  acl Safe_ports port 591         # filemaker
  acl Safe_ports port 777         # multiling http
  
  ## フィルタリング(URL)
  acl blacklist dstdomain "/usr/local/squid-5.3/etc/blacklist"
  http_access deny blacklist
  
  ##
  ## 最小限のアクセス制御(推奨)
  ##
  
  ## 不安全ポート(上の定義)やフィルタリングのアクセス拒否
  http_access deny !Safe_ports
  
  ## SSLポート(上の定義)以外のアクセス拒否
  http_access deny CONNECT !SSL_ports
  
  ## キャッシュマネージャーへのアクセス制御
  http_access allow localhost manager
  http_access deny manager
  
  ##
  ## 独自のアクセス制御を以下に記述
  ##
  
  ## ローカルアクセス制御
  http_access allow localnet
  http_access allow localhost
  http_access deny all
  
  ## 待受ポート番号
  http_port 3128
  
  ## コアダンプ出力先
  coredump_dir /usr/local/squid-5.3/var/cache/squid
  
  ## キャッシュ更新間隔
  refresh_pattern ^ftp: 1440 20% 10080
  refresh_pattern ^gopher: 1440 0% 1440
  refresh_pattern -i (/cgi-bin/|\?) 0 0% 0
  refresh_pattern . 0 20% 4320
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# vi /usr/local/squid-5.3/etc/blacklist
  
  コマンドの実行結果
  --------------------------------------------------
  site2.example.com
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# firewall-cmd --add-service=squid --permanent
  
  コマンドの実行結果
  --------------------------------------------------
  success
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# firewall-cmd --reload
  
  コマンドの実行結果
  --------------------------------------------------
  success
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# systemctl start squid (Squidを起動する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://site1.example.com (サーバーに直接に問い合わせる)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト1</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl http://site2.example.com (サーバーに直接に問い合わせる)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト2</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl --proxy http://localhost:3128 http://site1.example.com (プロキシ経由で問い合わせる)
  
  コマンドの実行結果
  --------------------------------------------------
  <html><body><h1>サイト1</h1></body></html>
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# curl --proxy http://localhost:3128 http://site2.example.com (プロキシ経由で問い合わせる)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> The following error was encountered while trying to retrieve the URL: http://site2.example.com/
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# systemctl stop squid (Squidを停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# nginx -s quit (Nginxを安全に停止する)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12# cd $HOME
  vm12# exit (rootユーザーからログアウト)
  
  コマンドの実行結果
  --------------------------------------------------
  ログアウト
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================

================================================================================
[01] ブートからカーネルの起動 - 01 (dmesg)
[02] ブートからカーネルの起動 - 02 (journalctl -b -k)
[03] 設定ファイル(SysVinit) - 01 (/etc/inittab)
[04] 設定ファイル(SysVinit) - 02 (/etc/rcXX.d)
[05] 起動スクリプトとランレベル(SysVinit) - 01 (/etc/init.d/XX)
[06] 起動スクリプトとランレベル(SysVinit) - 02 (service)
[07] サービスの自動起動(SysVinit) - 01 (link)
[08] サービスの自動起動(SysVinit) - 02 (chkconfig)
[09] 起動手順(Systemd)
[10] サービスの管理(Systemd) - 01
[11] サービスの管理(Systemd) - 02
[12] Unit設定ファイル(Systemd)
[13] Systemdのログ - 01 (journalctl)
[14] Systemdのログ - 02 (/etc/systemd/journalctld.conf)
[15] ブートローダー(Grub Legacy) - 01
[16] ブートローダー(Grub Legacy) - 02
[17] ブートローダー(Grub Legacy) - 03
[18] ブートローダー(Grub Legacy) - 04
[19] ブートローダー(Grub 2) - 01
[20] ブートローダー(Grub 2) - 02
[21] Install USB - 01
[22] Install USB - 02
[23] Install USB - 03
================================================================================
[01]
  ブートからカーネルの起動 - 01 (dmesg)
  
[内容]
  ## 作業内容
    ブートからカーネルの起動をコマンド(dmesg)で確認
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ dmesg | head -n 5
  
  コマンドの実行結果
  --------------------------------------------------
  [    0.000000] Linux version 4.15.3 (root@vm11) ...
  [    0.000000] Command line: BOOT_IMAGE=/vmlinuz-4.15.3 root=/dev/mapper/centos_vm11-root ro ...
  [    0.000000] x86/fpu: Supporting XSAVE feature 0x001: 'x87 floating point registers'
  [    0.000000] x86/fpu: Supporting XSAVE feature 0x002: 'SSE registers'
  [    0.000000] x86/fpu: Supporting XSAVE feature 0x004: 'AVX registers'
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[02]
  ブートからカーネルの起動 - 02 (journalctl -b -k)
  
[内容]
  ## 作業内容
    ブートからカーネルの起動をコマンド(journalctl -b -k)で確認
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ LANG=C journalctl -b -k | head -n 5
  
  コマンドの実行結果
  --------------------------------------------------
  -- Logs begin at Sun 2023-04-16 18:31:25 JST, end at Sun 2023-04-16 20:50:01 JST. --
  Apr 16 18:31:25 vm11 kernel: Linux version 4.15.3 (root@vm11) ...
  Apr 16 18:31:25 vm11 kernel: Command line: BOOT_IMAGE=/vmlinuz-4.15.3 root=/dev/mapper/centos_vm11-root ro ...
  Apr 16 18:31:25 vm11 kernel: x86/fpu: Supporting XSAVE feature 0x001: 'x87 floating point registers'
  Apr 16 18:31:25 vm11 kernel: x86/fpu: Supporting XSAVE feature 0x002: 'SSE registers'
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[03]
  設定ファイル(SysVinit) - 01 (/etc/inittab)
  
[内容]
  ## 作業内容
    設定ファイル(/etc/inittab)の確認
  
  ## 使用マシン
    HOST : vm16
    IPV4 : 192.168.122.16
    MEMO : 仮想マシン(CentOS6) -> 今は作成不可のため以前の操作メモから抜粋
  
  ## 設定ファイル(/etc/inittab)の書式
  --------------------------------------------------
  ID : ランレベル : アクション指示 : コマンド
  
  アクション指示
    boot        : システム起動時に実行、プロセス終了を待たずに次のプロセス起動
    bootwait    : システム起動時に実行、プロセス終了後に次のプロセス起動
    ctlaltdel   : Ctrl + Alt + Del、つまりSIGINT時に実行
    initdefault : デフォルトランレベル指定
    once        : 指定ランレベルで一度のみ実行、プロセス終了を待たずに次のプロセス起動
    respawn     : 指定プロセスが終了された場合、プロセスを再起動
    sysinit     : システム起動時に「boot」や「bootwait」よりも先に起動
    wait        : 指定ランレベルで一度のみ実行、プロセス終了後に次のプロセス起動
  --------------------------------------------------
  
  ## 設定ファイル(/etc/inittab)の設定例
  --------------------------------------------------
  # Default Run Level
  id:3:initdefault:(コマンドなし)
  
  # rc.sysinit
  si:(なし):sysinit:/etc/rc.d/rc.sysinit
  
  # rc
  l0:0:wait:/etc/rc.d/rc 0
  l1:1:wait:/etc/rc.d/rc 1
  l2:2:wait:/etc/rc.d/rc 2
  l3:3:wait:/etc/rc.d/rc 3  // デフォルトランレベルが「3」なのでこの配下のスクリプトが実行
  l4:4:wait:/etc/rc.d/rc 4
  l5:5:wait:/etc/rc.d/rc 5
  l6:6:wait:/etc/rc.d/rc 6
  
  # Ctrl + Alt + Del
  ca:(なし):ctlaltdel:shutdown -r now
  
  # Console(tty1 - tty6)
  1:12345:respawn:mingetty tty1
  2:2345:respawn:mingetty tty2
  3:2345:respawn:mingetty tty3
  4:2345:respawn:mingetty tty4
  5:2345:respawn:mingetty tty5
  6:2345:respawn:mingetty tty6
  
  # X - GUIログイン画面起動
  x:5:respawn:/etc/X11/prefdm -nodaemon
  --------------------------------------------------
  
[確認]
  vm16$ cd $HOME
  vm16$ cat /etc/inittab (設定ファイルを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  id:3:initdefault: -> デフォルトランレベルは「3」と設定
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[04]
  設定ファイル(SysVinit) - 02 (/etc/rcXX.d)
  
[内容]
  ## 作業内容
    ディレクトリ(/etc/rcXX.d)配下を確認
  
  ## 使用マシン
    HOST : vm16
    IPV4 : 192.168.122.16
    MEMO : 仮想マシン(CentOS6) -> 今は作成不可のため以前の操作メモから抜粋
  
[確認]
  vm16$ cd $HOME
  vm16$ cat /etc/inittab (設定ファイルを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  id:3:initdefault: -> デフォルトランレベルは「3」と設定
  --------------------------------------------------
  
  vm16$ cd /etc/rc3.d
  vm16$ ls -lh | head -n 1 (ディレクトリ配下を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  lrwxrwxrwx. 1 root root 19 12月 30 13:08 2019 K10saslauthd -> ../init.d/saslauthd  // 実体は「/etc/init.d」配下に存在
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[05]
  起動スクリプトとランレベル(SysVinit) - 01 (/etc/init.d/XX)
  
[内容]
  ## 作業内容
    サービスの起動・停止・再起動等を確認
  
  ## 使用マシン
    HOST : vm16
    IPV4 : 192.168.122.16
    MEMO : 仮想マシン(CentOS6) -> 今は作成不可のため以前の操作メモから抜粋
  
[確認]
  vm16$ cd /etc/init.d
  vm16$ ls -lh (起動スクリプトを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  -rwxr-xr-x. 1 root root 3.5K  5月 11 15:17 2016 auditd
  -r-xr-xr-x. 1 root root 1.4K  5月 11 19:18 2016 blk-availability
  -rwxr-xr-x. 1 root root 2.8K 11月 10 19:14 2015 crond
  ...
  -rwxr-xr-x. 1 root root  647  4月 12 18:14 2016 single
  -rwxr-xr-x. 1 root root 4.6K  5月 11 08:10 2016 sshd (このサービスで確認を行う)
  -rwxr-xr-x. 1 root root 2.3K  5月 11 17:55 2016 udev-post
  --------------------------------------------------
  
  vm16$ cd $HOME
  vm16$ sudo /etc/init.d/sshd status (サービス状態を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  openssh-daemon (pid  1102) を実行中...
  --------------------------------------------------
  
  vm16$ cd $HOME
  vm16$ sudo /etc/init.d/sshd stop (サービス停止)
  
  コマンドの実行結果
  --------------------------------------------------
  sshd を停止中: [  OK  ]
  --------------------------------------------------
  
  vm16$ cd $HOME
  vm16$ sudo /etc/init.d/sshd start (サービス開始)
  
  コマンドの実行結果
  --------------------------------------------------
  sshd を起動中: [  OK  ]
  --------------------------------------------------
  
  vm16$ cd $HOME
  vm16$ sudo /etc/init.d/sshd restart (サービス再起動)
  
  コマンドの実行結果
  --------------------------------------------------
  sshd を停止中: [  OK  ]
  sshd を起動中: [  OK  ]
  --------------------------------------------------
  
  vm16$ cd $HOME
  vm16$ sudo /etc/init.d/sshd condrestart (サービス起動時のみ再起動)
  
  コマンドの実行結果
  --------------------------------------------------
  sshd を停止中: [  OK  ]
  sshd を起動中: [  OK  ]
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[06]
  起動スクリプトとランレベル(SysVinit) - 02 (service)
  
[内容]
  ## 作業内容
    サービスの起動・停止・再起動等をコマンド(service)で確認
  
  ## 使用マシン
    HOST : vm16
    IPV4 : 192.168.122.16
    MEMO : 仮想マシン(CentOS6) -> 今は作成不可のため以前の操作メモから抜粋
  
[確認]
  vm16$ cd $HOME
  vm16$ sudo service sshd status (サービス状態を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  openssh-daemon (pid  1102) を実行中...
  --------------------------------------------------
  
  vm16$ cd $HOME
  vm16$ sudo service sshd stop (サービス停止)
  
  コマンドの実行結果
  --------------------------------------------------
  sshd を停止中: [  OK  ]
  --------------------------------------------------
  
  vm16$ cd $HOME
  vm16$ sudo service sshd start (サービス開始)
  
  コマンドの実行結果
  --------------------------------------------------
  sshd を起動中: [  OK  ]
  --------------------------------------------------
  
  vm16$ cd $HOME
  vm16$ sudo service sshd restart (サービス再起動)
  
  コマンドの実行結果
  --------------------------------------------------
  sshd を停止中: [  OK  ]
  sshd を起動中: [  OK  ]
  --------------------------------------------------
  
  vm16$ cd $HOME
  vm16$ sudo service sshd condrestart (サービス起動時のみ再起動)
  
  コマンドの実行結果
  --------------------------------------------------
  sshd を停止中: [  OK  ]
  sshd を起動中: [  OK  ]
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[07]
  サービスの自動起動(SysVinit) - 01 (link)
  
[内容]
  ## 作業内容
    サービスの自動起動設定を行う
  
  ## 使用マシン
    HOST : vm16
    IPV4 : 192.168.122.16
    MEMO : 仮想マシン(CentOS6) -> 今は作成不可のため以前の操作メモから抜粋
  
[確認]
  vm16$ cd /etc/init.d
  vm16$ ls -lh (起動スクリプトを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  -rwxr-xr-x. 1 root root 3.5K  5月 11 15:17 2016 auditd
  -r-xr-xr-x. 1 root root 1.4K  5月 11 19:18 2016 blk-availability
  -rwxr-xr-x. 1 root root 2.8K 11月 10 19:14 2015 crond
  ...
  -rwxr-xr-x. 1 root root  647  4月 12 18:14 2016 single
  -rwxr-xr-x. 1 root root 4.6K  5月 11 08:10 2016 sshd (このサービスで確認を行う)
  -rwxr-xr-x. 1 root root 2.3K  5月 11 17:55 2016 udev-post
  --------------------------------------------------
  
  vm16$ cd $HOME
  vm16$ sudo ln -s /etc/init.d/sshd /etc/rc3.d/S80sshd

  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[08]
  サービスの自動起動(SysVinit) - 02 (chkconfig)
  
[内容]
  ## 作業内容
    サービスの自動起動設定を行う
  
  ## 使用マシン
    HOST : vm16
    IPV4 : 192.168.122.16
    MEMO : 仮想マシン(CentOS6) -> 今は作成不可のため以前の操作メモから抜粋
  
[確認]
  vm16$ cd $HOME
  vm16$ sudo chkconfig --list (全サービス・全ランレベルの自動起動設定を表示)
  
  コマンドの実行結果
  --------------------------------------------------
  auditd             0:off    1:off    2:on     3:on     4:on     5:on     6:off
  blk-availability   0:off    1:on     2:on     3:on     4:on     5:on     6:off
  crond              0:off    1:off    2:on     3:on     4:on     5:on     6:off
  ...
  saslauthd          0:off    1:off    2:off    3:off    4:off    5:off    6:off
  sshd               0:off    1:off    2:on     3:on     4:on     5:on     6:off
  udev-post          0:off    1:on     2:on     3:on     4:on     5:on     6:off
  --------------------------------------------------
  
  vm16$ cd $HOME
  vm16$ sudo chkconfig --list sshd (サービス指定・全ランレベルで自動起動設定を表示)
  
  コマンドの実行結果
  --------------------------------------------------
  sshd               0:off    1:off    2:on     3:on     4:on     5:on     6:off
  --------------------------------------------------
  
  vm16$ cd $HOME
  vm16$ sudo chkconfig --level 3 sshd off (ランレベル3でのサービスの自動起動を無効)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm16$ cd $HOME
  vm16$ sudo chkconfig --level 3 sshd on (ランレベル3でのサービスの自動起動を有効)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[09]
  起動手順(Systemd)
  
[内容]
  ## 作業内容
    ターゲット(default.target)を追跡する
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ sudo find /etc -name default.target (ターゲットの正確なパスを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  /etc/systemd/system/default.target
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ ls -lh /etc/systemd/system/default.target (ターゲットの実体を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  lrwxrwxrwx. 1 root root 37  4月 15 12:09 /etc/systemd/system/default.target -> /lib/systemd/system/multi-user.target
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ systemctl list-dependencies default.target (ターゲットの実体が更に何を呼び出すか確認)
  
  コマンドの実行結果
  --------------------------------------------------
  default.target(multi-user.target)
    |-- auditd.service
    |-- chronyd.service
    |-- crond.service
     ...
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[10]
  サービスの管理(Systemd) - 01
  
[内容]
  ## 作業内容
    サービスの起動・停止・再起動等を確認 -> サンプルとして「sshd」サービスを確認
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ systemctl status sshd (サービス状態を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  ● sshd.service - OpenSSH server daemon
     Loaded: loaded (/usr/lib/systemd/system/sshd.service; enabled; vendor preset: enabled)
     Active: active (running) since 月 2023-04-17 09:57:28 JST; 28min ago
       Docs: man:sshd(8)
             man:sshd_config(5)
   Main PID: 1422 (sshd)
     CGroup: /system.slice/sshd.service
             └─1422 /usr/sbin/sshd -D
  
   4月 17 09:57:28 vm11 sshd[1422]: Server listening on 0.0.0.0 port 22.
   4月 17 09:57:28 vm11 systemd[1]: Stopped OpenSSH server daemon.
   4月 17 09:57:28 vm11 sshd[1422]: Server listening on :: port 22.
   4月 17 09:57:28 vm11 systemd[1]: Starting OpenSSH server daemon...
   4月 17 09:57:28 vm11 systemd[1]: Started OpenSSH server daemon.
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ cat /usr/lib/systemd/system/sshd.service (UNITファイル参照)
  
  コマンドの実行結果
  --------------------------------------------------
  [Unit]
  Description=OpenSSH server daemon
  Documentation=man:sshd(8) man:sshd_config(5)  // マニュアル参照コマンド
  After=network.target sshd-keygen.service      // 指定サービスの起動が開始後に起動
  Wants=sshd-keygen.service                     // 指定サービスの起動が失敗でも起動
  
  [Service]
  Type=notify                           // デフォルト値(simple)
  EnvironmentFile=/etc/sysconfig/sshd   // 設定ファイル
  ExecStart=/usr/sbin/sshd -D $OPTIONS
  ExecReload=/bin/kill -HUP $MAINPID
  KillMode=process
  Restart=on-failure
  RestartSec=42s
  
  [Install]
  WantedBy=multi-user.target  // 所属ターゲット
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ systemctl is-active sshd (サービス起動を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  active
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo systemctl stop sshd (サービス停止)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo systemctl start sshd (サービス開始)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo systemctl reload sshd (設定ファイル再読込)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo systemctl restart sshd (サービス再起動)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ systemctl is-enabled sshd (サービス自動起動を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  enabled -> 自動起動が有効
  --------------------------------------------------
  
  vm11$ cd /etc/systemd/system/multi-user.target.wants
  vm11$ ls -lh | grep sshd
  
  コマンドの実行結果
  --------------------------------------------------
  lrwxrwxrwx. 1 root root 36  4月 15 12:05 sshd.service -> /usr/lib/systemd/system/sshd.service
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo systemctl disable sshd (サービス自動起動を無効化)
  
  コマンドの実行結果
  --------------------------------------------------
  Removed symlink /etc/systemd/system/multi-user.target.wants/sshd.service.
  --------------------------------------------------
  
  vm11$ cd /etc/systemd/system/multi-user.target.wants
  vm11$ ls -lh | grep sshd
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> リンクが削除された
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo systemctl enable sshd (サービス自動起動を有効化)
  
  コマンドの実行結果
  --------------------------------------------------
  Created symlink from /etc/systemd/system/multi-user.target.wants/sshd.service to /usr/lib/systemd/system/sshd.service.
  --------------------------------------------------
  
  vm11$ cd /etc/systemd/system/multi-user.target.wants
  vm11$ ls -lh | grep sshd
  
  コマンドの実行結果
  --------------------------------------------------
  lrwxrwxrwx. 1 root root 36  4月 17 10:00 sshd.service -> /usr/lib/systemd/system/sshd.service
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[11]
  サービスの管理(Systemd) - 02
  
[内容]
  ## 作業内容
    検索条件に合致するサービスの検索を行う
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ systemctl --no-pager list-units -t target | head -n 5 (起動済み、対象はターゲット)
  
  コマンドの実行結果
  --------------------------------------------------
  UNIT                 LOAD    ACTIVE  SUB    
  basic.target         loaded  active  active Basic System
  cryptsetup.target    loaded  active  active Local Encrypted Volumes
  getty.target         loaded  active  active Login Prompts
  local-fs-pre.target  loaded  active  active Local File Systems (Pre)
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ systemctl --no-pager list-units -t service | head -n 5 (起動済み、対象はサービス)
  
  コマンドの実行結果
  --------------------------------------------------
  UNIT             LOAD    ACTIVE  SUB     
  auditd.service   loaded  active  running Security Auditing Service
  chronyd.service  loaded  active  running NTP client/server
  crond.service    loaded  active  running Command Scheduler
  dbus.service     loaded  active  running D-Bus System Message Bus
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ LANG=C systemctl --no-pager list-timers (起動済み、対象はタイマー)
  
  コマンドの実行結果
  --------------------------------------------------
  NEXT                         LEFT      LAST                         PASSED     UNIT                          ACTIVATES
  Tue 2023-04-18 09:40:21 JST  23h left  Mon 2023-04-17 09:40:21 JST  28min ago  systemd-tmpfiles-clean.timer  systemd-tmpfiles-clean.service
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ systemctl --no-pager list-unit-files -t target | head -n 5 (未起動も含む、対象はターゲット)
  
  コマンドの実行結果
  --------------------------------------------------
  UNIT FILE              STATE   
  basic.target           static  
  bluetooth.target       static  
  cryptsetup-pre.target  static  
  cryptsetup.target      static  
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ systemctl --no-pager list-unit-files -t service | head -n 5 (未起動も含む、対象はサービス)
  
  コマンドの実行結果
  --------------------------------------------------
  UNIT FILE                 STATE   
  arp-ethers.service        disabled
  auditd.service            enabled 
  autovt@.service           enabled 
  blk-availability.service  disabled
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ LANG=C systemctl --no-pager list-timers --all | head -n 5 (未起動も含む、対象はタイマー)
  
  コマンドの実行結果
  --------------------------------------------------
  NEXT                         LEFT      LAST                         PASSED     UNIT                          ACTIVATES
  Tue 2023-04-18 09:40:21 JST  23h left  Mon 2023-04-17 09:40:21 JST  38min ago  systemd-tmpfiles-clean.timer  systemd-tmpfiles-clean.service
  n/a                          n/a       n/a                          n/a        systemd-readahead-done.timer  systemd-readahead-done.service
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[12]
  Unit設定ファイル(Systemd)
  
[内容]
  ## 作業内容
    サービスの作成とシステムへの登録を行う
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME/sample3 -> 先にディレクトリ作成
  vm11$ vi sample3.sh (シェルスクリプトを作成)
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  LOG=/home/makoto/sample3/sample3.log
  
  echo "sample3 - $(date "+%Y/%m/%d %H:%M:%S")" >> $LOG
  --------------------------------------------------
  
  vm11$ cd $HOME/sample3
  vm11$ chmod 777 sample3.sh (実行権限を付与)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd /usr/lib/systemd/system/multi-user.target.wants
  vm11$ sudo vi sample3.service (サービスの作成)
  
  コマンドの実行結果
  --------------------------------------------------
  [Unit]
  Description=sample3.service
  
  [Service]
  Type=simple
  ExecStart=/home/makoto/sample3/sample3.sh
  
  [Install]
  WantedBy=multi-user.target
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo systemctl daemon-reload (システムへの登録)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ systemctl status sample3 (サービス状態を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  ● sample3.service
     Loaded: loaded (/usr/lib/systemd/system/multi-user.target.wants/sample3.service; bad; vendor preset: disabled)
     Active: inactive (dead)
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ systemctl list-dependencies multi-user.target | grep sample3
  
  コマンドの実行結果
  --------------------------------------------------
  ● ├─sample3.service -> ターゲット「multi-user.target」配下にサービスが存在
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo systemctl start sample3 (サービスの実行)
  vm11$ sudo systemctl start sample3 (サービスの実行)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME/sample3
  vm11$ cat sample3.log (ログ確認)
  
  コマンドの実行結果
  --------------------------------------------------
  sample3 - 2023/04/17 10:35:28
  sample3 - 2023/04/17 10:38:32
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ LANG=C journalctl --no-pager -u sample3 (ジャーナル表示)
  
  コマンドの実行結果
  --------------------------------------------------
  -- Logs begin at Mon 2023-04-17 09:30:15 JST, end at Mon 2023-04-17 10:38:32 JST. --
  Apr 17 10:35:28 vm11 systemd[1]: Started sample3.service.
  Apr 17 10:38:32 vm11 systemd[1]: Started sample3.service.
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[13]
  Systemdのログ - 01 (journalctl)
  
[内容]
  ## 作業内容
    コマンド(journalctl)でジャーナル表示を行う
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME/sample4 -> 先にディレクトリ作成
  vm11$ vi sample4.sh (シェルスクリプトを作成)
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  for i in $(seq 1 $1) ; do
    echo "sample4 - $(date "+%Y/%m/%d %H:%M:%S") - $i"
    sleep 1
  done
  --------------------------------------------------
  
  vm11$ cd $HOME/sample4
  vm11$ bash sample4.sh 3 (シェルスクリプトを実行)
  
  コマンドの実行結果
  --------------------------------------------------
  sample4 - 2023/04/17 11:01:08 - 1
  sample4 - 2023/04/17 11:01:09 - 2
  sample4 - 2023/04/17 11:01:10 - 3
  --------------------------------------------------
  
  vm11$ cd $HOME/sample4
  vm11$ systemd-cat bash sample4.sh 50 & (コマンド実行結果をジャーナル出力)
  
  コマンドの実行結果
  --------------------------------------------------
  [1] 5035 -> バックグラウンドで実行
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ LANG=C journalctl --follow(-f) | grep sample4 (末尾を表示し続ける)
 
  コマンドの実行結果
  --------------------------------------------------
  ...
  
  Apr 17 11:05:48 vm11 bash[5035]: sample4 - 2023/04/17 11:05:48 - 48
  Apr 17 11:05:49 vm11 bash[5035]: sample4 - 2023/04/17 11:05:49 - 49
  Apr 17 11:05:50 vm11 bash[5035]: sample4 - 2023/04/17 11:05:50 - 50

  Ctrl + C -> 終了
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ LANG=C journalctl --reverse(-r) | grep sample4 | head -n 3 (末尾を先頭に表示)
  
  コマンドの実行結果
  --------------------------------------------------
  Apr 17 11:05:50 vm11 bash[5035]: sample4 - 2023/04/17 11:05:50 - 50
  Apr 17 11:05:49 vm11 bash[5035]: sample4 - 2023/04/17 11:05:49 - 49
  Apr 17 11:05:48 vm11 bash[5035]: sample4 - 2023/04/17 11:05:48 - 48
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ LANG=C journalctl --pager-end(-e) | grep sample4 | tail -n 3 (末尾を表示)
  
  コマンドの実行結果
  --------------------------------------------------
  Apr 17 11:05:48 vm11 bash[5035]: sample4 - 2023/04/17 11:05:48 - 48
  Apr 17 11:05:49 vm11 bash[5035]: sample4 - 2023/04/17 11:05:49 - 49
  Apr 17 11:05:50 vm11 bash[5035]: sample4 - 2023/04/17 11:05:50 - 50
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ LANG=C journalctl --dmesg(-k) | tail -n 3 (カーネルメッセージのみ表示)
  
  コマンドの実行結果
  --------------------------------------------------
  Apr 17 09:30:27 vm11 kernel: IPv6: ADDRCONF(NETDEV_UP): eth0: link is not ready
  Apr 17 09:30:27 vm11 kernel: nf_conntrack version 0.5.0 (16384 buckets, 65536 max)
  Apr 17 09:30:28 vm11 kernel: bridge: filtering via arp/ip/ip6tables is no longer available by default. ...
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ LANG=C journalctl --priority(-p) info | tail -n 3 (指定プライオリティ以上のメッセージ)
  
  コマンドの実行結果
  --------------------------------------------------
  Apr 17 11:10:01 vm11 systemd[1]: Started Session 14 of user root.
  Apr 17 11:10:01 vm11 CROND[5145]: (root) CMD (/usr/lib64/sa/sa1 1 1)
  Apr 17 11:10:01 vm11 systemd[1]: Removed slice User Slice of root.
  --------------------------------------------------
  
  vm11$ cd $HOME (前に作成したサービス起動)
  vm11$ sudo systemctl start sample3
  vm11$ sudo systemctl start sample3
  vm11$ sudo systemctl start sample3
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ LANG=C journalctl --unit(-u) sample3 | tail -n 3 (指定サービスのジャーナル表示)
  
  コマンドの実行結果
  --------------------------------------------------
  Apr 17 11:16:21 vm11 systemd[1]: Started sample3.service.
  Apr 17 11:16:24 vm11 systemd[1]: Started sample3.service.
  Apr 17 11:16:24 vm11 systemd[1]: Started sample3.service.
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ LANG=C journalctl --boot(-b) | tail -n 3 (システム起動のジャーナル表示)
  
  コマンドの実行結果
  --------------------------------------------------
  Apr 17 11:16:24 vm11 systemd[1]: Started sample3.service.
  Apr 17 11:16:24 vm11 polkitd[709]: Unregistered Authentication Agent for unix-process:5190:667316 ...
  Apr 17 11:16:24 vm11 sudo[5188]: pam_unix(sudo:session): session closed for user root
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[14]
  Systemdのログ - 02 (/etc/systemd/journalctld.conf)
  
[内容]
  ## 作業内容
    永続的なジャーナル保持を行う
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ sudo find / -name journal (ジャーナルの保存場所を検索)
  
  コマンドの実行結果
  --------------------------------------------------
  /run/log/journal -> ジャーナルの保存場所、再起動でクリアされる
  /run/systemd/journal
  --------------------------------------------------
  
  vm11$ cd /run/log/journal/$(cat /etc/machine-id)
  vm11$ ls -lh (ジャーナルの保存ファイル)
  
  コマンドの実行結果
  --------------------------------------------------
  -rwxr-x---+ 1 root systemd-journal 8.0M  4月 17 11:22 system.journal -> 現在はこのファイルにジャーナルが保存
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo mkdir -p /var/log/journal (永続的なジャーナル保持のディレクトリ作成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd /etc/systemd
  vm11$ sudo cp -p journald.conf journald.conf.org (設定ファイルを退避)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd /etc/systemd
  vm11$ sudo vi journald.conf (設定ファイルを修正)
  
  コマンドの実行結果
  --------------------------------------------------
  [Journal]
  Storage=persistent  // 修正 - ジャーナルを永続的に保存
  SystemMaxUse=100M   // 修正 - 最大容量は100MB
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo systemctl restart systemd-journald (サービス再起動)
  
  コマンドの実行結果
  --------------------------------------------------
  [ 7844.595919] systemd-journald[526]: Received SIGTERM from PID 1 (systemd).
  --------------------------------------------------
  
  vm11$ cd /var/log/journal/$(cat /etc/machine-id)
  vm11$ ls -lh (永続的なジャーナル保持用のファイルを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r-----. 1 root root 8.0M  4月 17 12:05 system.journal -> このファイルに以後のジャーナルが永続的に保存
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[15]
  ブートローダー(Grub Legacy) - 01
  
[内容]
  ## 作業内容
    ブートローダー(Grub Legacy)の各ステージのファイルを確認する
  
  ## 使用マシン
    HOST : vm16
    IPV4 : 192.168.122.16
    MEMO : 仮想マシン(CentOS6) -> 今は作成不可のため以前の操作メモから抜粋
  
  ## 各ステージのファイル
    01. /boot/grub/stage1
    02. /boot/grub/(ファイルシステム名)_stage1_5
    03. /boot/grub/stage2
  
[確認]
  vm16$ cd /boot/grub
  vm16$ ls -lh stage1 (ステージ1のファイルを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 512  1月 24 17:07 2020 stage1
  --------------------------------------------------
  
  vm16$ cd /boot/grub
  vm16$ ls -lh *_stage1_5 (ステージ1.5のファイルを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 14K  1月 24 17:07 2020 e2fs_stage1_5
  -rw-r--r--. 1 root root 13K  1月 24 17:07 2020 fat_stage1_5
  -rw-r--r--. 1 root root 12K  1月 24 17:07 2020 ffs_stage1_5
  -rw-r--r--. 1 root root 12K  1月 24 17:07 2020 iso9660_stage1_5
  -rw-r--r--. 1 root root 13K  1月 24 17:07 2020 jfs_stage1_5
  -rw-r--r--. 1 root root 12K  1月 24 17:07 2020 minix_stage1_5
  -rw-r--r--. 1 root root 15K  1月 24 17:07 2020 reiserfs_stage1_5
  -rw-r--r--. 1 root root 12K  1月 24 17:07 2020 ufs2_stage1_5
  -rw-r--r--. 1 root root 12K  1月 24 17:07 2020 vstafs_stage1_5
  -rw-r--r--. 1 root root 14K  1月 24 17:07 2020 xfs_stage1_5
  --------------------------------------------------
  
  vm16$ cd /boot/grub
  vm16$ ls -lh stage2 (ステージ2のファイルを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 124K  1月 24 17:07 2020 stage2
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[16]
  ブートローダー(Grub Legacy) - 02
  
[内容]
  ## 作業内容
    ブートローダー(Grub Legacy)の設定ファイル(/boot/grub/menu.lst)を確認
  
  ## 使用マシン
    HOST : vm16
    IPV4 : 192.168.122.16
    MEMO : 仮想マシン(CentOS6) -> 今は作成不可のため以前の操作メモから抜粋
  
[確認]
  vm16$ cd $HOME
  vm16$ lsblk (ブロックデバイス確認)
  
  コマンドの実行結果
  --------------------------------------------------
  NAME                         MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
  sr0                           11:0    1 1024M  0 rom  
  vda                          252:0    0    9G  0 disk 
  ├─vda1                     252:1    0  500M  0 part /boot
  └─vda2                     252:2    0  8.5G  0 part 
    ├─vg_vm16-lv_root (dm-0) 253:0    0  7.6G  0 lvm  /
    └─vg_vm16-lv_swap (dm-1) 253:1    0  920M  0 lvm  [SWAP]
  --------------------------------------------------
  
  vm16$ cd /boot/grub
  vm16$ grep -vE '^#' device.map (マッピングファイル確認)
  
  コマンドの実行結果
  --------------------------------------------------
  (hd0)  /dev/vda -> GRUB上では「/dev/vda」が「hd0」と表記
  --------------------------------------------------
  
  vm16$ cd $HOME
  vm16$ grep -vE '^#' /boot/grub/menu.lst (設定ファイルを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  default=0
  timeout=5
  splashimage=(hd0,0)/grub/splash.xpm.gz  // (hd0,0) = /dev/vda1 = /boot
  hiddenmenu
  
  title CentOS 6 (2.6.32-642.el6.x86_64)  // エントリ(0)
    root (hd0,0)                          // (hd0,0) = /dev/vda1 = /boot
      kernel                              // カーネル設定 -> 配下の設定は1行にまとめること
        /vmlinuz-2.6.32-642.el6.x86_64    // カーネルイメージ
        ro
        root=/dev/mapper/vg_vm16-lv_root
          rd_LVM_LV=vg_ch16/lv_swap
          rd_NO_LUKS
          rd_NO_MD
          rd_LVM_LV=vg_ch16/lv_root
          crashkernel=auto
          KEYBOARDTYPE=pc
          KEYTABLE=jp106
          LANG=ja_JP.UTF-8
          rd_NO_DM
          rhgb
          quiet
          console=tty0 console=ttyS0,115200n8      // コンソール接続(仮想マシン作成時に追加)
      initrd /initramfs-2.6.32-642.el6.x86_64.img  // 初期RAMディスク
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[17]
  ブートローダー(Grub Legacy) - 03
  
[内容]
  ## 作業内容
    ブートローダー(Grub Legacy)のシェル機能を使用する
  
  ## 使用マシン
    HOST : vm16
    IPV4 : 192.168.122.16
    MEMO : 仮想マシン(CentOS6) -> 今は作成不可のため以前の操作メモから抜粋
  
[確認]
  vm16$ cd $HOME
  vm16$ sudo grub (シェルを起動)
  
  コマンドの実行結果
  --------------------------------------------------
  Probing devices to guess BIOS drives. This may take a long time.
  GNU GRUB  version 0.97  (640K lower / 3072K upper memory)
  
  ...
  
  grub> ■ (シェルのプロンプト表示)
  --------------------------------------------------
  
  grub> 
  grub> help (コマンド一覧を表示)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  grub> 
  grub> root (hd0,0) (操作上の起点を設定)
  
  コマンドの実行結果
  --------------------------------------------------
  Filesystem type is ext2fs, partition type 0x83
  --------------------------------------------------
  
  grub> 
  grub> cat (/boot)/grub/device.map (ファイル内容を表示)
  
  コマンドの実行結果
  --------------------------------------------------
  (hd0)  /dev/vda -> GRUB上では「/dev/vda」が「hd0」と表記
  --------------------------------------------------
  
  grub> 
  grub> quit (シェルを終了)
  
  コマンドの実行結果
  --------------------------------------------------
  quit -> OSに戻る
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[18]
  ブートローダー(Grub Legacy) - 04
  
[内容]
  ## 作業内容
    ブートローダー(Grub Legacy)のシェル機能でカーネルを手動起動する
  
  ## 使用マシン
    HOST : vm16
    IPV4 : 192.168.122.16
    MEMO : 仮想マシン(CentOS6) -> 今は作成不可のため以前の操作メモから抜粋
  
  ## 英語キーボード(101)と日本語キーボード(106)の対応表(一部)
    [Shift] + [2] -> @ (106)
    [Shift] + [7] -> & (106)
    [Shift] + [8] -> * (106)
    [Shift] + [9] -> ( (106)
    [Shift] + [0] -> ) (106)
    [Shift] + [^] -> + (106)
    [Shift] + [;] -> : (106)
    [Shift] + [@] -> { (106)
    [Shift] + [[] -> } (106)
  
[確認]
  vm16$ cd $HOME
  vm16$ sudo shutdown -r now (再起動)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> システム選択時に「e」キーから「c」キーの順番でGRUBシェル起動
  --------------------------------------------------
  
  grub> (操作上の起点を設定)
  grub> root (hd0,0) -> (hd0,0) = /dev/vda1 = /boot
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  grub> (設定ファイルを出力)
  grub> cat (/boot)/grub/menu.lst
  
  コマンドの実行結果
  --------------------------------------------------
  default=0                               // デフォルト起動エントリ
  timeout=5                               // メニュー表示時間
  splashimage=(hd0,0)/grub/splash.xpm.gz  // (hd0,0) = /dev/vda1 = /boot
  hiddenmenu                              // メニュー非表示
  
  title CentOS 6 (2.6.32-642.el6.x86_64)  // エントリ(0)
    root (hd0,0)                          // (hd0,0) = /dev/vda1 = /boot
      kernel                              // カーネルパラメータ -> 配下の設定は1行にまとめること
        /vmlinuz-2.6.32-642.el6.x86_64    // カーネルイメージ
        ro
        root=/dev/mapper/vg_vm16-lv_root
          rd_LVM_LV=vg_ch16/lv_swap
          rd_NO_LUKS
          rd_NO_MD
          rd_LVM_LV=vg_ch16/lv_root
          crashkernel=auto
          KEYBOARDTYPE=pc
          KEYTABLE=jp106
          LANG=ja_JP.UTF-8
          rd_NO_DM
          rhgb
          quiet
          console=tty0 console=ttyS0,115200n8      // コンソール接続(仮想マシン作成時に追加)
      initrd /initramfs-2.6.32-642.el6.x86_64.img  // 初期RAMディスク → ルートパーティションをマウント
  --------------------------------------------------
  
  grub> (コマンド引数にカーネルイメージと起動デバイスを指定)
  grub> kernel
      > (/boot)/vmlinuz-2.6.32-642.el6.x86_64  // カーネルイメージ
      > root=/dev/mapper/vg_vm16-lv_root       // 起動デバイス
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  grub> (コマンド引数に初期RAMディスクを指定)
  grub> initrd
      > (/boot)/initramfs-2.6.32-642.el6.x86_64.img  // 初期RAMディスク
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  grub> (システム起動)
  grub> boot
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) → ログインプロンプトが表示
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[19]
  ブートローダー(Grub2) - 01
  
[内容]
  ## 作業内容
    ブートローダー(Grub2)のパラメータファイル(/boot/default/grub)から設定ファイル(grub.cfg)を生成
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ sudo ls -lh /boot/grub2/grub.cfg (本来の設定ファイルを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 5.0K  4月 16 10:44 /boot/grub2/grub.cfg
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ cat /etc/default/grub (パラメータファイルの内容を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  GRUB_TIMEOUT=5
  GRUB_DISTRIBUTOR="$(sed 's, release .*$,,g' /etc/system-release)"
  GRUB_DEFAULT=saved
  GRUB_DISABLE_SUBMENU=true
  GRUB_TERMINAL="serial console"
  GRUB_SERIAL_COMMAND="serial --speed=115200"
  GRUB_CMDLINE_LINUX="crashkernel=auto rd.lvm.lv=centos_vm11/root rd.lvm.lv=centos_vm11/swap console=ttyS0,115200n8"
  GRUB_DISABLE_RECOVERY="true"
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo grub2-mkconfig -o AAA.cfg (設定ファイルを生成)
  
  コマンドの実行結果
  --------------------------------------------------
  // 指定するべき本来の生成場所は /boot/grub2/grub.cfg が正しい
  
  Generating grub configuration file ...
  Found linux image: /boot/vmlinuz-4.15.3
  Found initrd image: /boot/initramfs-4.15.3.img
  Found linux image: /boot/vmlinuz-3.10.0-1160.el7.x86_64
  Found initrd image: /boot/initramfs-3.10.0-1160.el7.x86_64.img
  Found linux image: /boot/vmlinuz-0-rescue-9a873402a94f4530a872af79d68bdeb7
  Found initrd image: /boot/initramfs-0-rescue-9a873402a94f4530a872af79d68bdeb7.img
  [11739.860976] raid6: sse2x1   gen()  8378 MB/s
  [11739.878973] raid6: sse2x1   xor()  5472 MB/s
  [11739.896969] raid6: sse2x2   gen()  9300 MB/s
  [11739.914965] raid6: sse2x2   xor()  7126 MB/s
  [11739.932956] raid6: sse2x4   gen() 10828 MB/s
  [11739.950962] raid6: sse2x4   xor()  7851 MB/s
  [11739.952416] raid6: using algorithm sse2x4 gen() 10828 MB/s
  [11739.954651] raid6: .... xor() 7851 MB/s, rmw enabled
  [11739.956571] raid6: using ssse3x2 recovery algorithm
  [11740.012830] xor: automatically using best checksumming function   avx       
  [11740.269007] Btrfs loaded, crc32c=crc32c-intel
  [11740.317649] fuse init (API version 7.26)
  done
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ ls -lh AAA.cfg (設定ファイルを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 4.9K  4月 17 12:40 AAA.cfg
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo rm -f AAA.cfg (設定ファイルを削除)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[20]
  ブートローダー(Grub2) - 02
  
[内容]
  ## 作業内容
    ブートローダー(Grub2)のシェル機能でカーネルを手動起動する
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ cat /proc/cmdline (システム起動時のカーネル引数)
  
  コマンドの実行結果
  --------------------------------------------------
  BOOT_IMAGE=/vmlinuz-4.15.3         // カーネルイメージ(/boot/vmlinuz-4.15.3)
  root=/dev/mapper/centos_vm11-root  // 起動デバイス
  ro
  crashkernel=auto
  rd.lvm.lv=centos_vm11/root  // ルートファイルシステム
  rd.lvm.lv=centos_vm11/swap  // スワップ領域
  console=ttyS0,115200n8      // コンソール接続
  LANG=ja_JP.UTF-8            // 言語・国・文字コード
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo cat /boot/grub2/device.map (デバイスマッピングを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  (hd0)  /dev/vda -> GRUB2上では「/dev/vda」が「hd0」と表記
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo ls -lh /boot | grep -E 'vmlinuz|initram' | grep $(uname -r) (カーネルイメージと初期RAMディスクを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  lrwxrwxrwx. 1 root root   20  4月 16 10:40 vmlinuz -> /boot/vmlinuz-4.15.3
  -rw-r--r--. 1 root root 7.2M  4月 16 10:40 vmlinuz-4.15.3        // カーネルイメージ
  -rw-------. 1 root root  40M  4月 16 10:44 initramfs-4.15.3.img  // 初期RAMディスク
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ lsblk (ブロックデバイス確認)
  
  コマンドの実行結果
  --------------------------------------------------
  NAME                        MAJ:MIN  RM   SIZE  RO  TYPE  MOUNTPOINT
  vdb                         252:16    0     2G   0  disk  
   |-- vdb2                   252:18    0   975M   0  part  
   |-- vdb1                   252:17    0     1G   0  part  
  sr0                          11:0     1  1024M   0  rom   
  vda                         252:0     0    20G   0  disk  
   |-- vda1                   252:1     0     1G   0  part  /boot
   |-- vda2                   252:2     0    19G   0  part  
│      |-- centos_vm11-root  253:0     0    17G   0  lvm   /
│      |-- centos_vm11-swap  253:1     0     2G   0  lvm   [SWAP]
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo systemctl reboot (システム再起動)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> システム選択時に「c」キー押下でシェル起動
  --------------------------------------------------
  
  grub> (操作上の起点を設定)
  grub> set root=(hd0,1)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> (hd0,1) = /dev/vda1 = /boot -> Grub Legacy のシェルと異なるので注意
  --------------------------------------------------
  
  grub> (コマンド一覧を表示)
  grub> help
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  grub> (カーネルイメージと起動デバイスおよび他のパラメータを1行で指定) -> /proc/cmdlineと同一
  grub> linux
      > (/boot)/vmlinuz-4.15.3             // カーネルイメージ
      > root=/dev/mapper/centos_vm11-root  // 起動デバイス
      > ro
      > crashkernel=auto
      > rd.lvm.lv=centos_vm11/root         // ルートファイルシステム
      > rd.lvm.lv=centos_vm11/swap         // スワップ領域
      > console=ttyS0,115200n8             // コンソール接続
      > LANG=ja_JP.UTF-8                   // 言語・国・文字コード
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  grub> (初期RAMディスクを指定)
  grub> initrd (/boot)/initramfs-4.15.3.img
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  grub> (システム起動)
  grub> boot
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) → ログインプロンプトが表示
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[21]
  Install USB - 01
  
[内容]
  ## 作業内容
    CentOS7のインストールUSBの作成を行う
  
  ## 使用マシン
    HOST : localhost
    IPV4 : 192.168.1.3
    MEMO : ホスト
  
[確認]
  $ cd /usr/local/src
  $ ls -lh (イメージファイルを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 qemu qemu 1020264448 11月  3  2020 CentOS-7-x86_64-Minimal-2009.iso
  --------------------------------------------------
  
  $ cd $HOME
  $ lsblk (USBメモリを接続してシステム認識を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  NAME               MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
  sr0                 11:0    1  1024M  0 rom  
  sda                  8:0    0 465.8G  0 disk 
  ├─sda1             8:1    0     1G  0 part /boot
  └─sda2             8:2    0 464.8G  0 part 
    ├─centos-root  253:0    0    50G  0 lvm  /
    ├─centos-swap  253:1    0   3.6G  0 lvm  [SWAP]
    └─centos-home  253:2    0 411.1G  0 lvm  /home
  sdb                  8:16   1    15G  0 disk 
  └─sdb1             8:17   1    15G  0 part /run/media/makoto/CentOS 7 x86_64 (接続したUSBメモリ)
  --------------------------------------------------
  
  $ cd $HOME
  $ sudo umount /dev/sdb1 (USBメモリをアンマウント)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> アンマウントでシステム側からのアクセス排除
  --------------------------------------------------
  
  $ cd $HOME
  $ LANG=C sudo parted /dev/sdb -s print (パーティション情報)
  
  コマンドの実行結果
  --------------------------------------------------
  Model: ELECOM MF-MSU2B (scsi)
  Disk /dev/sdb: 16.0GB
  Sector size (logical/physical): 512B/512B
  Partition Table: msdos
  Disk Flags: 
  
  Number  Start   End     Size    Type     File system  Flags
  1       1049kB  16.0GB  16.0GB  primary               boot, lba
  --------------------------------------------------
  
  $ cd $HOME
  $ LANG=C sudo parted /dev/sdb (対話モードでパーティション修正)
  
  コマンドの実行結果
  --------------------------------------------------
  GNU Parted 3.1
  Using /dev/sdb
  Welcome to GNU Parted! Type 'help' to view a list of commands.
  
  (parted) 
  (parted) rm 1 -> パーティション1を削除
  
  (parted) 
  (parted) mklabel msdos -> 管理方式をmsdos(MBR方式)に変更
  
  Warning: The existing disk label on /dev/sdb will be destroyed and all data on this disk will be lost.
  Do you want to continue? Yes/No? Yes (Yesを入力) -> 既存データが破壊されてもOK
  
  (parted) 
  (parted) mkpart -> パーティション作成
  
  Partition type?  primary/extended? primary
  File system type?  [ext2]? fat32 -> USBメモリのファイルシステム
  Start? 0G -> 開始セクタはUSBメモリの最初から
  End? 100% -> 終了セクタはUSBメモリの最後まで
  
  (parted) 
  (parted) set 1 boot on -> 起動フラグを付与
  
  (parted) 
  (parted) quit -> 対話モード終了
  --------------------------------------------------
  
  $ cd $HOME
  $ sudo mkfs.vfat /dev/sdb1 (USBメモリのファイルシステムはFAT32)
  
  コマンドの実行結果
  --------------------------------------------------
  mkfs.fat 3.0.20 (12 Jun 2013)
  --------------------------------------------------
  
  $ cd $HOME
  $ LANG=C sudo parted /dev/sdb -s print (パーティション情報)
  
  コマンドの実行結果
  --------------------------------------------------
  Model: ELECOM MF-MSU2B (scsi)
  Disk /dev/sdb: 16.0GB
  Sector size (logical/physical): 512B/512B
  Partition Table: msdos
  Disk Flags: 
  
  Number  Start   End     Size    Type     File system  Flags
  1       1049kB  16.0GB  16.0GB  primary  fat32        boot, lba
  --------------------------------------------------
  
  $ cd /usr/local/src
  $ sudo dd if=CentOS-7-x86_64-Minimal-2009.iso of=/dev/sdb bs=512K && sync (インストールUSBの作成)
  
  コマンドの実行結果
  --------------------------------------------------
  1946+0 レコード入力
  1946+0 レコード出力
  1020264448 バイト (1.0 GB) コピーされました、 158.773 秒、 6.4 MB/秒
  --------------------------------------------------
  
  $ cd $HOME
  $ lsblk (USBメモリを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  NAME               MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
  sr0                 11:0    1  1024M  0 rom  
  sda                  8:0    0 465.8G  0 disk 
  ├─sda1             8:1    0     1G  0 part /boot
  └─sda2             8:2    0 464.8G  0 part 
    ├─centos-root  253:0    0    50G  0 lvm  /
    ├─centos-swap  253:1    0   3.6G  0 lvm  [SWAP]
    └─centos-home  253:2    0 411.1G  0 lvm  /home
  sdb                  8:16   1    15G  0 disk 
  ├─sdb1             8:17   1   973M  0 part (インストール内容)
  └─sdb2             8:18   1   8.6M  0 part (パーティションが増える理由が不明)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[22]
  Install USB - 02 (Rocky Linux 8)
  
[内容]
  ## 作業内容
    Rocky-LinuxのインストールUSBの作成
  
  ## 使用マシン
    HOST : localhost
    IPV4 : 192.168.1.3
    MEMO : ホスト
  
[確認]
  $ cd /usr/local/src
  $ ls -lh | grep -i rocky (イメージファイルを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-rw-r--. 1 makoto makoto  10G  1月 25 18:23 Rocky-8.5-x86_64-dvd1.iso     // 通常版
  -rw-rw-r--. 1 makoto makoto 2.0G  1月 25 18:28 Rocky-8.5-x86_64-minimal.iso  // 最小版
  --------------------------------------------------
  
  $ cd $HOME
  $ lsblk (USBメモリを接続してシステム認識を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  NAME               MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
  sr0                 11:0    1  1024M  0 rom  
  sda                  8:0    0 465.8G  0 disk 
  ├─sda1             8:1    0     1G  0 part /boot
  └─sda2             8:2    0 464.8G  0 part 
    ├─centos-root  253:0    0    50G  0 lvm  /
    ├─centos-swap  253:1    0   3.6G  0 lvm  [SWAP]
    └─centos-home  253:2    0 411.1G  0 lvm  /home
  sdb                  8:16   1    15G  0 disk 
  ├─sdb1             8:17   1   973M  0 part /run/media/makoto/CentOS 7 x86_64 (接続したUSBメモリ)
  └─sdb2             8:18   1   8.6M  0 part 
  --------------------------------------------------
  
  $ cd $HOME
  $ sudo umount /dev/sdb1 (USBメモリをアンマウント)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> アンマウントでシステム側からのアクセス排除
  --------------------------------------------------
  
  $ cd $HOME
  $ LANG=C sudo parted /dev/sdb -s print (パーティション情報)
  
  コマンドの実行結果
  --------------------------------------------------
  Model: ELECOM MF-MSU2B (scsi)
  Disk /dev/sdb: 16.0GB
  Sector size (logical/physical): 512B/512B
  Partition Table: msdos
  Disk Flags: 
  
  Number  Start   End     Size    Type     File system  Flags
  2       227kB   9239kB  9011kB  primary  fat16
  --------------------------------------------------
  
  $ cd $HOME
  $ LANG=C sudo parted /dev/sdb (対話モードでパーティション修正)
  
  コマンドの実行結果
  --------------------------------------------------
  GNU Parted 3.1
  Using /dev/sdb
  Welcome to GNU Parted! Type 'help' to view a list of commands.
  
  (parted) 
  (parted) rm 2 -> パーティション2を削除
  
  (parted) 
  (parted) mklabel msdos -> 管理方式をmsdos(MBR方式)に変更
  
  // 確認メッセージ
  Warning: The existing disk label on /dev/sdb will be destroyed and all data on this disk will be lost.
  Do you want to continue? Yes/No? Yes (Yesを入力) -> 既存データが破壊されてもOK
  
  (parted) 
  (parted) mkpart -> パーティション作成
  
  Partition type?  primary/extended? primary
  File system type?  [ext2]? fat32 -> USBメモリのファイルシステム
  Start? 0G -> 開始セクタはUSBメモリの最初から
  End? 100% -> 終了セクタはUSBメモリの最後まで
  
  (parted) 
  (parted) set 1 boot on -> 起動フラグを付与
  
  (parted) 
  (parted) quit -> 対話モード終了
  --------------------------------------------------
  
  $ cd $HOME
  $ sudo mkfs.vfat /dev/sdb1 (USBメモリのファイルシステムはFAT32)
  
  コマンドの実行結果
  --------------------------------------------------
  mkfs.fat 3.0.20 (12 Jun 2013)
  --------------------------------------------------
  
  $ cd $HOME
  $ LANG=C sudo parted /dev/sdb -s print (パーティション情報)
  
  コマンドの実行結果
  --------------------------------------------------
  Model: ELECOM MF-MSU2B (scsi)
  Disk /dev/sdb: 16.0GB
  Sector size (logical/physical): 512B/512B
  Partition Table: msdos
  Disk Flags: 
  
  Number  Start   End     Size    Type     File system  Flags
  1       1049kB  16.0GB  16.0GB  primary  fat32        boot, lba
  --------------------------------------------------
  
  $ cd /usr/local/src
  $ sudo dd if=Rocky-8.5-x86_64-dvd1.iso of=/dev/sdb bs=512K && sync (インストールUSBの作成)
  
  コマンドの実行結果
  --------------------------------------------------
  1946+0 レコード入力
  1946+0 レコード出力
  1020264448 バイト (1.0 GB) コピーされました、 158.773 秒、 6.4 MB/秒
  --------------------------------------------------
  
  $ cd $HOME
  $ lsblk (USBメモリを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  NAME               MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
  sr0                 11:0    1  1024M  0 rom  
  sda                  8:0    0 465.8G  0 disk 
  ├─sda1             8:1    0     1G  0 part /boot
  └─sda2             8:2    0 464.8G  0 part 
    ├─centos-root  253:0    0    50G  0 lvm  /
    ├─centos-swap  253:1    0   3.6G  0 lvm  [SWAP]
    └─centos-home  253:2    0 411.1G  0 lvm  /home
  sdb                  8:16   1    15G  0 disk 
  ├─sdb1             8:17   1    10G  0 part (インストール内容)
  └─sdb2             8:18   1   9.6M  0 part (パーティションが増える理由が不明)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[23]
  Install USB - 03
  
[内容]
  ## 作業内容
    ハードディスクからのシステム起動が不能であることを想定して、レスキューモードでシステム修復を行う
  
  ## 使用マシン
    HOST : localhost
    IPV4 : 192.168.1.3
    MEMO : ホスト
  
[確認]
  > インストールUSBをシステム接続後に電源投入
  > BIOSの起動順序を「HDD -> USB」から「USB -> HDD」に変更
  
  コマンドの実行結果
  --------------------------------------------------
  ・Install CentOS 7
  ・Test this media & Install CentOS 7
  ・Troubleshooting (レスキューモード)
  --------------------------------------------------
  
  > 上記で「Troubleshooting」を選択
  > メニュー表示
  
  コマンドの実行結果
  --------------------------------------------------
  ・Install CentOS 7 in basic graphics mode
  ・Rescue a CentOS system (レスキューモード)
  ・Run a memory test
  ・Boot from local drive
  ・Return to main menu
  --------------------------------------------------
  
  > 上記で「Rescue a CentOS system」を選択
  > メニュー表示
  
  コマンドの実行結果
  --------------------------------------------------
  // メッセージ表示 日本語訳
  
  レスキュー環境は貴方のLinux環境を「/mnt/sysimage」にマウントしようとしています。
  マウント先は変更することが可能です。
  
  メニューで「01」を選択の場合は、現在の手順で進みます。
  メニューで「02」を選択の場合は、現在の読み書き可能でのマウントを読み取り専用でマウントします。
  メニューで「03」を選択の場合は、シェルまでの手順を一気にスキップします。
  
  01: Continue (レスキューモード)
  02: Read-only mount
  03: Skip to shell
  04: Quit (Reboot)
  -------------------------------------------------- 
  
  > 上記で「Continue」を選択
  > レスキューモードのシェル起動
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 以後はレスキューモードのシェルプロンプトを「sh-4.2#」と記述する
  --------------------------------------------------
  
  sh-4.2# (操作起点をハードディスクのルートディレクトリに変更)
  sh-4.2# chroot /mnt/sysimage
  
  コマンドの実行結果
  --------------------------------------------------
  (出力なし) -> サブシェル「/bin/bash」が起動、プロンプト「bash-4.2#」と記述する
  --------------------------------------------------
    
    bash-4.2# (ハードディスクのルートディレクトリ配下のファイル群を確認)
    bash-4.2# ls -lh
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> ルートディレクトリ配下のファイル群を確認
    --------------------------------------------------
    
    bash-4.2# (作業終了後にサブシェルを抜ける)
    bash-4.2# exit
    
    コマンドの実行結果
    --------------------------------------------------
    (省略) -> 親シェルに戻る
    --------------------------------------------------
    
  sh-4.2# (シャットダウン)
  sh-4.2# shutdown -h now
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> シャットダウン後に「インストールUSBをシステムから外す」のを忘れないこと
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================

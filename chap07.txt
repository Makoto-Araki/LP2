================================================================================
[01] ソースの展開 - 01 (tar-gzip)
[02] ソースの展開 - 02 (tar-bzip2)
[03] ソースの展開 - 03 (tar-xz)
[04] ソースの展開 - 04 (patch)
================================================================================
[01]
  ソースの展開 - 01 (tar-gzip)
  
[内容]
  ## ファイル(source)の展開

  ==========================================================
                          source
  ==========================================================
            |                                    |
            + tar -cf source.tar source          |
            |                                    |
  ======================                         |
       source.tar                                + tar zcf source.tar.gz source
  ======================                         |
            |                                    |
            + gzip source.tar                    |
            |                                    |
  ==========================================================
                      source.tar.gz
  ==========================================================
            |                                    |
            + gunzip source.tar.gz               |
            |  (gzip -d source.tar.gz)           |
  ======================                         |
       source.tar                                + tar zxf source.tar.gz
  ======================                         |
            |                                    |
            + tar xf source.tar                  |
            |                                    |
  ==========================================================
                          source
  ==========================================================
  
[確認]
  実機での確認なし
  
================================================================================
[02]
  ソースの展開 - 02 (tar-bzip2)
  
[内容]
  ## ファイル(source)の展開

  ==========================================================
                          source
  ==========================================================
            |                                    |
            + tar -cf source.tar source          |
            |                                    |
  ======================                         |
       source.tar                                + tar jcf source.tar.bz2 source
  ======================                         |
            |                                    |
            + bzip2 source.tar                   |
            |                                    |
  ==========================================================
                      source.tar.bz2
  ==========================================================
            |                                    |
            + bunzip2 source.tar.bz2             |
            |  (bzip2 -d source.tar.bz2)         |
  ======================                         |
       source.tar                                + tar jxf source.tar.bz2
  ======================                         |
            |                                    |
            + tar xf source.tar                  |
            |                                    |
  ==========================================================
                          source
  ==========================================================
  
[確認]
  実機での確認なし
  
================================================================================
[03]
  ソースの展開 - 03 (tar-xz)
  
[内容]
  ## ファイル(source)の展開
  
  ==========================================================
                          source
  ==========================================================
            |                                    |
            + tar -cf source.tar source          |
            |                                    |
  ======================                         |
       source.tar                                + tar Jcf source.tar.xz source
  ======================                         |
            |                                    |
            + xz source.tar                      |
            |                                    |
  ==========================================================
                      source.tar.xz
  ==========================================================
            |                                    |
            + unxz source.tar.xz                 |
            |  (xz -d source.tar.xz)             |
  ======================                         |
       source.tar                                + tar Jxf source.tar.xz
  ======================                         |
            |                                    |
            + tar xf source.tar                  |
            |                                    |
  ==========================================================
                          source
  ==========================================================
  
[確認]
  実機での確認なし
  
================================================================================
[04]
  ソースの展開 - 04 (patch)
  
[内容]
  ## 作業内容
    ソースの修正部分(パッチ)の反映をコマンド(patch)で行う
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
  ## コマンド(patch)
    patch -R           // 処理内容を取り消して元に戻す
    patch -p0 XX < YY  // ファイル(XX)にパッチ(YY=patch/AAA)の差分を適用、パスを修正しない   -> patch/AAA
    patch -p1 XX < YY  // ファイル(XX)にパッチ(YY=patch/AAA)の差分を適用、最初の'/'まで削除  -> AAA
    
[確認]
  vm12$ cd $HOME/HELLO -> 先にディレクトリ作成
  vm12$ vi hello.h
  
  コマンドの実行結果
  --------------------------------------------------
  #ifndef HELLO_H_
  
  void Hello1(void);  // 関数プロトタイプ宣言
  
  #endif
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ vi hello.c
  
  コマンドの実行結果
  --------------------------------------------------
  #include <stdio.h>
  #include "hello.h"
  
  void Hello1(void) { printf("Hello1\n"); }  // 関数実装
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO/patch -> 先にディレクトリ作成
  vm12$ cp -p ../hello* .
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO/patch
  vm12$ vi hello.h
  
  コマンドの実行結果
  --------------------------------------------------
  #ifndef HELLO_H_
  
  void Hello1(void);  // 関数プロトタイプ宣言
  void Hello2(void);  // 関数プロトタイプ宣言(追加)
  
  #endif
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO/patch
  vm12$ vi hello.c
  
  コマンドの実行結果
  --------------------------------------------------
  #include <stdio.h>
  #include "hello.h"
  
  void Hello1(void) { printf("Hello1\n"); }  // 関数実装
  void Hello2(void) { printf("Hello2\n"); }  // 関数実装(追加)
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ diff -u hello.h patch/hello.h > patch/patch01 (パッチファイル作成)
  vm12$ diff -u hello.c patch/hello.c > patch/patch02 (パッチファイル作成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ cat patch/patch01 (パッチファイル確認)
  
  コマンドの実行結果
  --------------------------------------------------
  --- hello.h	2022-01-04 18:38:51.842473496 +0900
  +++ patch/hello.h	2022-01-04 18:45:40.066991609 +0900  // 注意 : p0 = patch/hello.h, p1 = hello.h
  @@ -1,5 +1,6 @@
   #ifndef HELLO_H_
   
   void Hello1(void);  // 関数プロトタイプ宣言
  +void Hello2(void);  // 関数プロトタイプ宣言
   
   #endif
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ cat patch/patch02 (パッチファイル確認)
  
  コマンドの実行結果
  --------------------------------------------------
  --- hello.c	2022-01-04 18:27:59.875437267 +0900
  +++ patch/hello.c	2022-01-04 18:46:06.446831227 +0900  // 注意 : p0 = patch/hello.c, p1 = hello.c
  @@ -2,3 +2,4 @@
   #include "hello.h"
   
   void Hello1(void) { printf("Hello1\n"); }  // 関数実装
  +void Hello2(void) { printf("Hello2\n"); }  // 関数実装
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO/patch
  vm12$ rm -f hello.h hello.c
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ patch -p0 hello.h < patch/patch01 (パッチ適用)
  
  コマンドの実行結果
  --------------------------------------------------
  patching file hello.h
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ patch -p0 hello.c < patch/patch02 (パッチ適用)
  
  コマンドの実行結果
  --------------------------------------------------
  patching file hello.c
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ cat hello.h
  
  コマンドの実行結果
  --------------------------------------------------
  #ifndef HELLO_H_
  
  void Hello1(void);  // 関数プロトタイプ宣言
  void Hello2(void);  // 関数プロトタイプ宣言
  
  #endif
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ cat hello.c
  
  コマンドの実行結果
  --------------------------------------------------
  #include <stdio.h>
  #include "hello.h"
  
  void Hello1(void) { printf("Hello1\n"); }  // 関数実装
  void Hello2(void) { printf("Hello2\n"); }  // 関数実装
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ patch -R -p0 hello.h < patch/patch01 (パッチ適用の取消)
  
  コマンドの実行結果
  --------------------------------------------------
  patching file hello.h
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ patch -R -p0 hello.c < patch/patch02 (パッチ適用の取消)
  
  コマンドの実行結果
  --------------------------------------------------
  patching file hello.c
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ cat hello.h
  
  コマンドの実行結果
  --------------------------------------------------
  #ifndef HELLO_H_
  
  void Hello1(void);  // 関数プロトタイプ宣言
  
  #endif
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ cat hello.c
  
  コマンドの実行結果
  --------------------------------------------------
  #include <stdio.h>
  #include "hello.h"
  
  void Hello1(void) { printf("Hello1\n"); }  // 関数実装
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ cp -p patch/patch[0-1] .(カレントディレクトリ)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-rw-r--. 1 makoto makoto 157  1月  4 19:03 hello.c
  -rw-rw-r--. 1 makoto makoto 134  1月  4 19:03 hello.h
  drwxrwxr-x. 2 makoto makoto  36  1月  4 18:49 patch
  -rw-rw-r--. 1 makoto makoto 258  1月  4 19:02 patch01 (コピーしてきたパッチファイル)
  -rw-rw-r--. 1 makoto makoto 260  1月  4 19:02 patch02 (コピーしてきたパッチファイル)
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ patch -p1 hello.h < patch01 (パッチ適用)
  
  コマンドの実行結果
  --------------------------------------------------
  patching file hello.h
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ patch -p1 hello.c < patch02 (パッチ適用)
  
  コマンドの実行結果
  --------------------------------------------------
  patching file hello.c
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ cat hello.h
  
  コマンドの実行結果
  --------------------------------------------------
  #ifndef HELLO_H_
  
  void Hello1(void);  // 関数プロトタイプ宣言
  void Hello2(void);  // 関数プロトタイプ宣言
  
  #endif
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ cat hello.c
  
  コマンドの実行結果
  --------------------------------------------------
  #include <stdio.h>
  #include "hello.h"
  
  void Hello1(void) { printf("Hello1\n"); }  // 関数実装
  void Hello2(void) { printf("Hello2\n"); }  // 関数実装
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================

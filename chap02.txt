================================================================================
[01] ビルド練習 - 01
[02] ビルド練習 - 02
[03] カーネルバージョン - 01 (uname)
[04] カーネルバージョン - 02 (cat /proc/version)
[05] カーネルバージョン - 03 (Makefile)
[06] カーネルイメージ
[07] カーネルのコンパイルとインストール
[08] カーネルモジュール - 01 (FHS)
[09] カーネルモジュール - 02 (insmod)
[10] カーネルモジュール - 03 (rmmod)
[11] カーネルモジュール - 04 (modprobe)
[12] カーネルモジュール - 05 (depmod)
[13] カーネルモジュール - 06 (modinfo)
[14] カーネルモジュール - 07 (lsmod)
[15] カーネルモジュール - 08 (cat /proc/modules)
[16] カーネルモジュール - 09 (Parameter Set 1)
[17] カーネルモジュール - 10 (Parameter Set 2)
[18] カーネルパラメータの設定 - 01
[19] カーネルパラメータの設定 - 02
[20] カーネルパラメータの設定 - 03
[21] 初期RAMディスク - 01 (lsinitrd)
[22] 初期RAMディスク - 02 (mkinitrd, dracut)
[23] 仮想ファイルシステム(/proc) - 01 (cat /proc/cmdline)
[24] 仮想ファイルシステム(/proc) - 02 (cat /proc/cpuinfo)
[25] 仮想ファイルシステム(/proc) - 03 (cat /proc/filesystems)
[26] 仮想ファイルシステム(/proc) - 04 (cat /proc/swaps)
[27] 仮想ファイルシステム(/proc) - 05 (cat /proc/version)
[28] 仮想ファイルシステム(/proc) - 06 (ls -lh /proc/bus/pci)
[29] 仮想ファイルシステム(/proc) - 07 (ls -lh /proc/bus/usb)
[30] デバイスファイル
[31] ループバックデバイス
[32] 動的デバイス管理(udev) - 01 (/etc/udev/rules.d)
[33] 動的デバイス管理(udev) - 02 (udevadm info)
[34] 動的デバイス管理(udev) - 03 (udevadm monitor)
================================================================================
[01]
  ビルド練習 - 01
  
[内容]
  ## 作業内容
    簡単なプログラム作成後に、Makefileを使用せずビルド
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ LANG=C sudo yum groups list
  
  コマンドの実行結果
  --------------------------------------------------
  Available Environment Groups:
    Minimal Install
    Compute Node
    Infrastructure Server
    File and Print Server
    Cinnamon Desktop
    MATE Desktop
    Basic Web Server
    Virtualization Host
    Server with GUI
    GNOME Desktop
    KDE Plasma Workspaces
    Development and Creative Workstation
  Available Groups:
    Cinnamon
    Compatibility Libraries
    Console Internet Tools
    Development Tools -> 開発ツール、これが必要
    Educational Software
    Electronic Lab
    Fedora Packager
    General Purpose Desktop
    Graphical Administration Tools
    Haskell
    LXQt Desktop
    Legacy UNIX Compatibility
    MATE
    Milkymist
    Scientific Support
    Security Tools
    Smart Card Support
    System Administration Tools
    System Management
    TurboGears application framework
    Xfce
  Done
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo yum -y groupinstall 'Development Tools'
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ mkdir hello
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME/hello
  vm11$ vi hello.h
  
  コマンドの実行結果
  --------------------------------------------------
  #ifndef hello_h_
  
  void Hello1(void);  // 関数プロトタイプ宣言
  void Hello2(void);  // 関数プロトタイプ宣言
  
  #endif
  --------------------------------------------------
  
  vm11$ cd $HOME/hello
  vm11$ vi hello.c
  
  コマンドの実行結果
  --------------------------------------------------
  #include <stdio.h>
  #include "hello.h"
  
  void Hello1(void) { printf("Hello1\n"); }  // 関数実装
  void Hello2(void) { printf("Hello2\n"); }  // 関数実装
  --------------------------------------------------
  
  vm11$ cd $HOME/hello
  vm11$ vi main.c
  
  コマンドの実行結果
  --------------------------------------------------
  #include "hello.h"
  
  int main(void)
  {
    Hello1();  // 関数呼出
    Hello2();  // 関数呼出
    return 0;
  }
  --------------------------------------------------
  
  vm11$ cd $HOME/hello
  vm11$ gcc -o hello main.c hello.c -> ビルド(Makefile不使用)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME/hello
  vm11$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rwxrwxr-x. 1 makoto makoto 8.3K  4月 16 07:39 hello
  -rw-rw-r--. 1 makoto makoto  123  4月 16 07:39 hello.c
  -rw-rw-r--. 1 makoto makoto   64  4月 16 07:34 hello.h
  -rw-rw-r--. 1 makoto makoto   75  4月 16 07:37 main.c
  --------------------------------------------------
  
  vm11$ cd $HOME/hello
  vm11$ ./hello
  
  コマンドの実行結果
  --------------------------------------------------
  Hello1
  Hello2
  --------------------------------------------------
  
  vm11$ cd $HOME/hello
  vm11$ rm hello
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[02]
  ビルド練習 - 02
  
[内容]
  ## 作業内容
    Makefileによるビルドを行う
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME/hello
  vm11$ vi Makefile -> 記述(Makefile)
  
  コマンドの実行結果
  --------------------------------------------------
  // 単にmakeと実行した場合は一番上のターゲットが実行
  // ファイル行頭の空白はタブ
  
  PROG := hello
  OBJ1 := main.o
  OBJ2 := hello.o
  SRC1 := main.c
  SRC2 := hello.c
  COMP := gcc
  
  $(PROG): $(OBJ1) $(OBJ2)
    $(COMP) $(OBJ1) $(OBJ2) -o $(PROG)
  
  $(OBJ1): $(SRC1)
    $(COMP) -c $(SRC1)
  
  $(OBJ2): $(SRC2)
    $(COMP) -c $(SRC2)
  
  clean:
    rm -f $(PROG) $(OBJ1) $(OBJ2)
  --------------------------------------------------
  
  vm11$ cd $HOME/hello
  vm11$ make -n -> 処理をシミューレート
  
  コマンドの実行結果
  --------------------------------------------------
  gcc -c main.c
  gcc -c hello.c
  gcc main.o hello.o -o hello
  --------------------------------------------------
  
  vm11$ cd $HOME/hello
  vm11$ make -> ビルド
  
  コマンドの実行結果
  --------------------------------------------------
  gcc -c main.c
  gcc -c hello.c
  gcc main.o hello.o -o hello
  --------------------------------------------------
  
  vm11$ cd $HOME/hello
  vm11$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-rw-r--. 1 makoto makoto  265  4月 16 07:42 Makefile
  -rwxrwxr-x. 1 makoto makoto 8.3K  4月 16 07:43 hello
  -rw-rw-r--. 1 makoto makoto  123  4月 16 07:39 hello.c
  -rw-rw-r--. 1 makoto makoto   64  4月 16 07:34 hello.h
  -rw-rw-r--. 1 makoto makoto 1.7K  4月 16 07:43 hello.o
  -rw-rw-r--. 1 makoto makoto   75  4月 16 07:37 main.c
  -rw-rw-r--. 1 makoto makoto 1.4K  4月 16 07:43 main.o
  --------------------------------------------------
  
  vm11$ cd $HOME/hello
  vm11$ ./hello
  
  コマンドの実行結果
  --------------------------------------------------
  Hello1
  Hello2
  --------------------------------------------------
  
  vm11$ cd $HOME/hello
  vm11$ make clean -> 実行ファイルと中間ファイルを削除
  
  コマンドの実行結果
  --------------------------------------------------
  rm -f hello main.o hello.o
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[03]
  カーネルバージョン - 01 (uname)
  
[内容]
  ## 作業内容
    カーネルバージョンをコマンド(uname)から調査
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ uname -r
  
  コマンドの実行結果
  --------------------------------------------------
  3.10.0-1160.el7.x86_64 -> 3(メジャー番号)、10(マイナー番号)、0(リリース番号)、-1160.el7.x86_64(エクストラ番号)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[04]
  カーネルバージョン - 02 (cat /proc/version)
  
[内容]
  ## 作業内容
    カーネルバージョンをコマンド(cat /proc/version)から調査
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ cat /proc/version
  
  コマンドの実行結果
  --------------------------------------------------
  Linux version 3.10.0-1160.el7.x86_64 (省略) -> コマンド(uname)と同一
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[05]
  カーネルバージョン - 03 (Makefile)
  
[内容]
  ## 作業内容
    カーネルバージョンをファイル(Makefile)から調査
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ ls -lh /usr/src/kernels -> カーネルソースのディレクトリ
  
  コマンドの実行結果
  --------------------------------------------------
  drwxr-xr-x. 22 root root 4.0K  4月 16 07:32 3.10.0-1160.88.1.el7.x86_64.debug
  --------------------------------------------------
  
  vm11$ cd /usr/src/kernels/3.10.0-1160.88.1.el7.x86_64.debug
  vm11$ head -n 4 Makefile
  
  コマンドの実行結果
  --------------------------------------------------
  VERSION = 3
  PATCHLEVEL = 10
  SUBLEVEL = 0
  EXTRAVERSION = -1160.88.1.el7.x86_64.debug
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[06]
  カーネルイメージ
  
[内容]
  ## 作業内容
    パス(/boot)からカーネルイメージを検索
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ ls -lh /boot | grep $(uname -r)
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-------. 1 root root 3.5M 10月 20  2020 System.map-3.10.0-1160.el7.x86_64
  -rw-r--r--. 1 root root 150K 10月 20  2020 config-3.10.0-1160.el7.x86_64
  -rw-------. 1 root root  21M  4月 15 12:11 initramfs-3.10.0-1160.el7.x86_64.img  // 初期RAMディスク
  -rw-------. 1 root root  13M  4月 15 18:12 initramfs-3.10.0-1160.el7.x86_64kdump.img
  -rw-r--r--. 1 root root 314K 10月 20  2020 symvers-3.10.0-1160.el7.x86_64.gz
  -rwxr-xr-x. 1 root root 6.5M 10月 20  2020 vmlinuz-3.10.0-1160.el7.x86_64  // カーネルイメージ
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[07]
  カーネルのコンパイルとインストール
  
[内容]
  ## 作業内容
    カーネル(4.15.3)のコンパイルとインストール
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ sudo yum -y install kernel-devel ncurses-devel elfutils-libelf-devel openssl-devel bc
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm11$ cd /usr/src/kernels
  vm11$ sudo wget https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.15.3.tar.xz
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm11$ cd /usr/src/kernels
  vm11$ sudo xz -d linux-4.15.3.tar.xz
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> unxzコマンドでもOK
  --------------------------------------------------
  
  vm11$ cd /usr/src/kernels
  vm11$ sudo tar xf linux-4.15.3.tar
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd /usr/src/kernels/linux-4.15.3
  vm11$ sudo make menuconfig -> カーネルの設定変更
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ツールを開き直後に保存して終了 -> 設定内容がファイル「.config」に保存
  --------------------------------------------------
  
  vm11$ cd /usr/src/kernels/linux-4.15.3
  vm11$ ls -lh .config -> 設定ファイルを確認
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 180K  4月 16 07:58 .config
  --------------------------------------------------
  
  vm11$ cd /usr/src/kernels/linux-4.15.3
  vm11$ sudo vi script05.sh -> コンパイルの所要時間を知るためスクリプト化
  
  コマンドの実行結果
  --------------------------------------------------
  #!/bin/bash
  
  # 既存ログファイル削除
  if test -f script.log ; then
    rm -f script.log
  fi
  
  # 日時出力
  echo $(date +'%Y/%m/%d - %H:%M:%S') >> script.log
  
  # 優先度指定でカーネルをコンパイル
  nice -n -10 make > /dev/null
  
  # 日時出力
  echo $(date +'%Y/%m/%d - %H:%M:%S') >> script.log
  
  # モジュールをインストール
  make modules_install > /dev/null
  
  # 日時出力
  echo $(date +'%Y/%m/%d - %H:%M:%S') >> script.log
  
  # カーネル本体をインストール
  make install > /dev/null
  
  # 日時出力
  echo $(date +'%Y/%m/%d - %H:%M:%S') >> script.log
  --------------------------------------------------
  
  vm11$ cd /usr/src/kernels/linux-4.15.3
  vm11$ sudo bash script05.sh & ->バックグラウンド実行
  
  コマンドの実行結果
  --------------------------------------------------
  [1] 21929
  --------------------------------------------------
  
  vm11$ cd /usr/src/kernels/linux-4.15.3
  vm11$ cat script.log
  
  コマンドの実行結果
  --------------------------------------------------
  2023/04/29 - 16:41:06 -> コンパイルに02時間36分
  2023/04/29 - 19:17:23
  2023/04/29 - 19:19:41
  2023/04/29 - 19:23:44
  --------------------------------------------------
  
  vm11$ cd /usr/src/kernels/linux-4.15.3
  vm11$ cp script05.sh ~/ -> スクリプトはホーム直下で保管
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd /usr/src/kernels/linux-4.15.3
  vm11$ LANG=C df -mT
  
  コマンドの実行結果
  --------------------------------------------------
  Filesystem                    Type      1M-blocks   Used  Available  Use%  Mounted on
  devtmpfs                      devtmpfs        884      0        884    0%  /dev
  tmpfs                         tmpfs           895      0        895    0%  /dev/shm
  tmpfs                         tmpfs           895      9        887    1%  /run
  tmpfs                         tmpfs           895      0        895    0%  /sys/fs/cgroup
  /dev/mapper/centos_vm11-root  xfs           17394  16173       1222   93%  / -> 空き容量がギリギリの状態
  /dev/vda1                     xfs            1014    199        816   20%  /boot
  tmpfs                         tmpfs            99      0         99    0%  /run/user/1000
  --------------------------------------------------
  
  vm11$ cd /usr/src/kernels/linux-4.15.3
  vm11$ sudo make clean -> 中間ファイル削除でディスク容量に空きを作る
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 設定ファイル(.config)は残る
  --------------------------------------------------
  
  vm11$ cd /usr/src/kernels/linux-4.15.3
  vm11$ LANG=C df -mT
  
  コマンドの実行結果
  --------------------------------------------------
  Filesystem                    Type      1M-blocks   Used  Available  Use%  Mounted on
  devtmpfs                      devtmpfs        884      0        884    0%  /dev
  tmpfs                         tmpfs           895      0        895    0%  /dev/shm
  tmpfs                         tmpfs           895      9        887    1%  /run
  tmpfs                         tmpfs           895      0        895    0%  /sys/fs/cgroup
  /dev/mapper/centos_vm11-root  xfs           17394   6418      10977   37%  / -> 空き容量が10GB程度増えた
  /dev/vda1                     xfs            1014    199        816   20%  /boot
  tmpfs                         tmpfs            99      0         99    0%  /run/user/1000
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo grub2-editenv list -> デフォルト起動のカーネル確認
  
  コマンドの実行結果
  --------------------------------------------------
  saved_entry=CentOS Linux (3.10.0-1160.el7.x86_64) 7 (Core) -> デフォルト起動は旧パージョンのカーネルのまま
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo grep -E '^menuentry' /etc/grub2.cfg -> 起動可能なカーネルリストを番号表示
  
  コマンドの実行結果
  --------------------------------------------------
  menuentry 'CentOS Linux (4.15.3) 7 (Core)' ...                                     // 0
  menuentry 'CentOS Linux (3.10.0-1160.el7.x86_64) 7 (Core)' ...                     // 1
  menuentry 'CentOS Linux (0-rescue-9a873402a94f4530a872af79d68bdeb7) 7 (Core)' ...  // 2
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo grub2-set-default 0 -> デフォルト起動のカーネルを番号指定
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> デフォルト起動されるカーネルを新カーネル(4.15.3)に変更
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo grub2-editenv list -> デフォルト起動のカーネル確認
  
  コマンドの実行結果
  --------------------------------------------------
  saved_entry=0 -> 新カーネル(4.15.3)の番号を確認
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo systemctl reboot
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> カーネル選択画面に新カーネル(4.15.3)が確認できた
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ uname -r
  
  コマンドの実行結果
  --------------------------------------------------
  4.15.3 -> 起動後に新カーネル(4.15.3)を確認
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[08]
  カーネルモジュール - 01 (FHS)
  
[内容]
  ## 作業内容
    カーネルモジュールの格納されているディレクトリ構成(FHS)を把握する
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ sudo find /lib/modules -name $(uname -r) -> カーネルモジュールのディレクトリ検索
  
  コマンドの実行結果
  --------------------------------------------------
  /lib/modules/4.15.3
  --------------------------------------------------
  
  vm11$ cd /lib/modules/4.15.3
  vm11$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  lrwxrwxrwx.  1 root root   29  4月 16 10:36 build -> /usr/src/kernels/linux-4.15.3
  drwxr-xr-x. 12 root root  128  4月 16 10:38 kernel
  -rw-r--r--.  1 root root 833K  4月 16 10:41 modules.alias
  -rw-r--r--.  1 root root 800K  4月 16 10:41 modules.alias.bin
  -rw-r--r--.  1 root root 7.7K  4月 16 10:36 modules.builtin
  -rw-r--r--.  1 root root  10K  4月 16 10:41 modules.builtin.bin
  -rw-r--r--.  1 root root 246K  4月 16 10:41 modules.dep
  -rw-r--r--.  1 root root 352K  4月 16 10:41 modules.dep.bin
  -rw-r--r--.  1 root root  411  4月 16 10:41 modules.devname
  -rw-r--r--.  1 root root  97K  4月 16 10:36 modules.order
  -rw-r--r--.  1 root root  515  4月 16 10:41 modules.softdep
  -rw-r--r--.  1 root root 386K  4月 16 10:41 modules.symbols
  -rw-r--r--.  1 root root 472K  4月 16 10:41 modules.symbols.bin
  lrwxrwxrwx.  1 root root   29  4月 16 10:36 source -> /usr/src/kernels/linux-4.15.3
  --------------------------------------------------
  
  vm11$ cd /lib/modules/4.15.3/kernel
  vm11$ ls -lh -> カーネルモジュール格納場所の内部確認
  
  コマンドの実行結果
  --------------------------------------------------
  drwxr-xr-x.  3 root root   17  4月 16 10:36 arch    // アーキテクチャ
  drwxr-xr-x.  3 root root 4.0K  4月 16 10:36 crypto  // 暗号化
  drwxr-xr-x. 69 root root 4.0K  4月 16 10:38 drivers // デバイスドライバ
  drwxr-xr-x. 25 root root 4.0K  4月 16 10:38 fs      // ファイルシステム
  drwxr-xr-x.  3 root root   19  4月 16 10:38 kernel  // カーネル
  drwxr-xr-x.  5 root root  207  4月 16 10:38 lib     // ライブラリ
  drwxr-xr-x.  2 root root   32  4月 16 10:38 mm      // メモリ関連
  drwxr-xr-x. 35 root root 4.0K  4月 16 10:38 net     // ネットワーク
  drwxr-xr-x. 12 root root  167  4月 16 10:38 sound   // サウンド -> 仮想マシンには不要
  drwxr-xr-x.  3 root root   17  4月 16 10:38 virt    // 仮想環境 -> 仮想マシンには不要
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[09]
  カーネルモジュール - 02 (insmod)
  
[内容]
  ## 作業内容
    カーネルモジュールを作成して、コマンド(insmod)でロード
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ mkdir module1
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME/module1
  vm11$ vi base.c
  
  コマンドの実行結果
  --------------------------------------------------
  #include <linux/module.h>
  #include <linux/init.h>
  
  // ライセンス情報
  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("Makoto-Araki");
  MODULE_DESCRIPTION("base");
  
  // ロード時
  static int base_init(void)
  {
    printk(KERN_INFO "base init\n");
    return 0;
  }
  
  // アンロード時
  static void base_exit(void) { printk(KERN_INFO "base exit\n"); }
  
  // 関数定義
  void func1(void) { printk(KERN_INFO "func1 called\n"); }
  void func2(void) { printk(KERN_INFO "func2 called\n"); }
  
  // エクスポート
  EXPORT_SYMBOL(func1);
  EXPORT_SYMBOL(func2);
  
  module_init( base_init );
  module_exit( base_exit );
  --------------------------------------------------
  
  vm11$ cd $HOME/module1
  vm11$ vi module1.c
  
  コマンドの実行結果
  --------------------------------------------------
  #include <linux/module.h>
  #include <linux/kernel.h>
  
  // プロトタイプ宣言
  void func1(void);
  void func2(void);
  
  // ライセンス情報
  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("Makoto-Araki");
  MODULE_DESCRIPTION("module1");
  
  // ロード時
  static int module1_init(void)
  {
    printk( KERN_INFO "module1 init\n" );
    func1();  // 他モジュールの関数実行
    func2();  // 他モジュールの関数実行
    return 0;
  }
  
  // アンロード時
  static void module1_exit(void) { printk( KERN_INFO "module1 exit\n" ); }
  
  module_init( module1_init );
  module_exit( module1_exit );
  --------------------------------------------------
  
  vm11$ cd $HOME/module1
  vm11$ vi Makefile
  
  コマンドの実行結果
  --------------------------------------------------
  // 既存ファイル(/lib/modules/4.15.3/build/Makefile)のターゲットを利用
  obj-m := module1.o base.o
  
  all:
    make -C /lib/modules/$(shell uname -r)/build M=$(shell pwd) modules
  
  clean:
    make -C /lib/modules/$(shell uname -r)/build M=$(shell pwd) clean
  --------------------------------------------------
  
  vm11$ cd $HOME/module1
  vm11$ make -n
  
  コマンドの実行結果
  --------------------------------------------------
  make -C /lib/modules/4.15.3/build M=/home/makoto/module1 modules
  --------------------------------------------------
  
  vm11$ cd $HOME/module1
  vm11$ make
  
  コマンドの実行結果
  --------------------------------------------------
  make -C /lib/modules/4.15.3/build M=/home/makoto/module1 modules
  make[1]: ディレクトリ `/usr/src/kernels/linux-4.15.3' に入ります
    CC [M]  /home/makoto/module1/module1.o
    CC [M]  /home/makoto/module1/base.o
    Building modules, stage 2.
    MODPOST 2 modules
    CC      /home/makoto/module1/base.mod.o
    LD [M]  /home/makoto/module1/base.ko
    CC      /home/makoto/module1/module1.mod.o
    LD [M]  /home/makoto/module1/module1.ko
  make[1]: ディレクトリ `/usr/src/kernels/linux-4.15.3' から出ます
  --------------------------------------------------
  
  vm11$ cd $HOME/module1
  vm11$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-rw-r--. 1 makoto makoto  176  4月 29 19:45 Makefile
  -rw-rw-r--. 1 makoto makoto  114  4月 29 19:46 Module.symvers
  -rw-rw-r--. 1 makoto makoto  592  4月 29 19:40 base.c
  -rw-rw-r--. 1 makoto makoto 124K  4月 29 19:46 base.ko -> カーネルモジュール
  -rw-rw-r--. 1 makoto makoto  853  4月 29 19:46 base.mod.c
  -rw-rw-r--. 1 makoto makoto  70K  4月 29 19:46 base.mod.o
  -rw-rw-r--. 1 makoto makoto  59K  4月 29 19:46 base.o
  -rw-rw-r--. 1 makoto makoto  584  4月 29 19:44 module1.c
  -rw-rw-r--. 1 makoto makoto 122K  4月 29 19:46 module1.ko -> カーネルモジュール
  -rw-rw-r--. 1 makoto makoto  949  4月 29 19:46 module1.mod.c
  -rw-rw-r--. 1 makoto makoto  70K  4月 29 19:46 module1.mod.o
  -rw-rw-r--. 1 makoto makoto  56K  4月 29 19:46 module1.o
  -rw-rw-r--. 1 makoto makoto   75  4月 29 19:46 modules.order
  --------------------------------------------------
  
  vm11$ cd $HOME/module1
  vm11$ modinfo base.ko -> モジュールの詳細表示
  
  コマンドの実行結果
  --------------------------------------------------
  filename:       /home/makoto/module1/base.ko
  description:    base
  author:         Makoto-Araki
  license:        GPL
  srcversion:     F97D838A3F67D2B0738370E
  depends:        (依存モジュール無し)
  retpoline:      Y
  name:           base
  vermagic:       4.15.3 SMP mod_unload modversions 
  --------------------------------------------------
  
  vm11$ cd $HOME/module1
  vm11$ modinfo module1.ko -> モジュールの詳細表示
  
  コマンドの実行結果
  --------------------------------------------------
  filename:       /home/makoto/module1/module1.ko
  description:    module1
  author:         Makoto-Araki
  license:        GPL
  srcversion:     258908EAD8EE2CA9B348147
  depends:        base (baseモジュールに依存)
  retpoline:      Y
  name:           module1
  vermagic:       4.15.3 SMP mod_unload modversions 
  --------------------------------------------------
  
  vm11$ cd $HOME/module1
  vm11$ sudo insmod base.ko -> モジュールのロード
  
  コマンドの実行結果
  --------------------------------------------------
  [ 1013.078677] base init -> 初回のみカーネルツリー外からのロードです、という意味の警告メッセージが出力
  --------------------------------------------------
  
  vm11$ cd $HOME/module1
  vm11$ sudo insmod module1.ko -> モジュールのロード
  
  コマンドの実行結果
  --------------------------------------------------
  [ 1056.881717] module1 init
  [ 1056.882889] func1 called
  [ 1056.884084] func2 called
  --------------------------------------------------
  
  vm11$ cd $HOME/module1
  vm11$ sudo rmmod module1.ko -> モジュールのアンロード
  
  コマンドの実行結果
  --------------------------------------------------
  [ 1140.942468] module1 exit
  --------------------------------------------------
  
  vm11$ cd $HOME/module1
  vm11$ sudo rmmod base.ko -> モジュールのアンロード
  
  コマンドの実行結果
  --------------------------------------------------
  [ 1179.366872] base exit
  --------------------------------------------------
  
  vm11$ cd $HOME/module1
  vm11$ sudo cp -p *.ko /lib/modules/$(uname -r)/kernel/kernel -> モジュールをシステム規定の場所にコピー
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 後のコマンド「modprobe」は依存関係ファイル「modules.dep」に記述が無いと動作しないため
  --------------------------------------------------
  
  vm11$ cd $HOME/module1
  vm11$ sudo depmod -> 依存関係ファイル更新
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> /lib/modules/$(uname -r)/modules.depを更新
  --------------------------------------------------
  
  vm11$ cd $HOME/module1
  vm11$ sudo grep -E 'base|module1' /lib/modules/$(uname -r)/modules.dep -> 依存関係を確認
  
  コマンドの実行結果
  --------------------------------------------------
  kernel/kernel/module1.ko: kernel/kernel/base.ko
  kernel/kernel/base.ko:
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo modprobe module1 -> モジュールのロード
  
  コマンドの実行結果
  --------------------------------------------------
  [ 1431.633238] base init
  [ 1431.635282] module1 init
  [ 1431.636975] func1 called
  [ 1431.638475] func2 called
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo lsmod | grep -E 'base|module1' -> モジュールの一覧表示
  
  コマンドの実行結果
  --------------------------------------------------
  Module                  Size  Used by
  module1                16384  0 
  base                   16384  1 module1 -> base は module1 が参照している
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo cat /proc/modules | grep -E 'base|module1' -> モジュールの一覧表示
  
  コマンドの実行結果
  --------------------------------------------------
  module1  16384  0  -        Live  0xffffffffc05dc000 (OE)
  base     16384  1  module1, Live  0xffffffffc05e1000 (OE)
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo modprobe -r module1 -> モジュールのアンロード
  
  コマンドの実行結果
  --------------------------------------------------
  [ 1755.624973] module1 exit
  [ 1755.626715] base exit
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo modprobe --show-depends module1 -> モジュールの依存関係
  
  コマンドの実行結果
  --------------------------------------------------
  insmod  /lib/modules/4.15.3/kernel/kernel/base.ko 
  insmod  /lib/modules/4.15.3/kernel/kernel/module1.ko 
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[10]
  カーネルモジュール - 03 (rmmod)
  
[内容]
  ## 作業内容
    作成したカーネルモジュールをコマンド(rmmod)でアンロードする
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  上記の「09」を参照
  
================================================================================
[11]
  カーネルモジュール - 04 (modprobe)
  
[内容]
  ## 作業内容
    作成したカーネルモジュールをコマンド(modprobe)でロード・アンロードする
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  上記の「09」を参照
  
================================================================================
[12]
  カーネルモジュール - 05 (depmod)
  
[内容]
  ## 作業内容
    作成したカーネルモジュールをコマンド(depmod)で依存関係ファイル(modules.dep)に登録する
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  上記の「09」を参照
  
================================================================================
[13]
  カーネルモジュール - 06 (modinfo)
  
[内容]
  ## 作業内容
    作成したカーネルモジュールの詳細情報をコマンド(modinfo)で表示する
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  上記の「09」を参照
  
================================================================================
[14]
  カーネルモジュール - 07 (lsmod)
  
[内容]
  ## 作業内容
    作成したカーネルモジュールをコマンド(lsmod)で表示する
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  上記の「09」を参照
  
================================================================================
[15]
  カーネルモジュール - 08 (cat /proc/modules)
  
[内容]
  ## 作業内容
    作成したカーネルモジュールをコマンド(cat /proc/modules)で表示する
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  上記の「09」を参照
  
================================================================================
[16]
  カーネルモジュール - 09 (Parameter Set 1)
  
[内容]
  ## 作業内容
    カーネルモジュール起動時にパラメータ値を指定可能にする
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ mkdir module2
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME/module2
  vm11$ vi module2.c
  
  コマンドの実行結果
  --------------------------------------------------
  #include <linux/module.h>
  #include <linux/kernel.h>
  
  // ライセンス情報
  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("Makoto-Araki");
  MODULE_DESCRIPTION("module2");
  
  // パラメータ値をソース記述
  static int P1 = 11;
  static int P2 = 22;
  
  // カーネルモジュールにパラメータ組込
  module_param(P1, int, S_IWUSR);
  module_param(P2, int, S_IWUSR);
  
  // ロード時
  static int module2_init(void)
  {
    printk( KERN_INFO "module2 init\n" );
    printk( KERN_INFO "P1 = %d\n", P1);  // パラメータ値を表示
    printk( KERN_INFO "P2 = %d\n", P2);  // パラメータ値を表示
    return 0;
  }
  
  // アンロード時
  static void module2_exit(void) { printk( KERN_INFO "module2 exit\n" ); }
  
  module_init( module2_init );
  module_exit( module2_exit );
  --------------------------------------------------
  
  vm11$ cd $HOME/module2
  vm11$ vi Makefile
  
  コマンドの実行結果
  --------------------------------------------------
  // 既存ファイル(/lib/modules/4.15.3/build/Makefile)のターゲットを利用
  obj-m := module2.o
  
  all:
    make -C /lib/modules/$(shell uname -r)/build M=$(shell pwd) modules
  
  clean:
    make -C /lib/modules/$(shell uname -r)/build M=$(shell pwd) clean
  --------------------------------------------------
  
  vm11$ cd $HOME/module2
  vm11$ make -n
  
  コマンドの実行結果
  --------------------------------------------------
  make -C /lib/modules/4.15.3/build M=/home/makoto/sample2 modules
  --------------------------------------------------
  
  vm11$ cd $HOME/module2
  vm11$ make
  
  コマンドの実行結果
  --------------------------------------------------
  make -C /lib/modules/4.15.3/build M=/home/makoto/module2 modules
  make[1]: ディレクトリ `/usr/src/kernels/linux-4.15.3' に入ります
    CC [M]  /home/makoto/module2/module2.o
    Building modules, stage 2.
    MODPOST 1 modules
    CC      /home/makoto/module2/module2.mod.o
    LD [M]  /home/makoto/module2/module2.ko
  make[1]: ディレクトリ `/usr/src/kernels/linux-4.15.3' から出ます
  --------------------------------------------------
  
  vm11$ cd $HOME/module2
  vm11$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-rw-r--. 1 makoto makoto  169  4月 29 20:13 Makefile
  -rw-rw-r--. 1 makoto makoto    0  4月 29 20:14 Module.symvers
  -rw-rw-r--. 1 makoto makoto  762  4月 29 20:12 module2.c
  -rw-rw-r--. 1 makoto makoto 140K  4月 29 20:14 module2.ko -> カーネルモジュール
  -rw-rw-r--. 1 makoto makoto  907  4月 29 20:14 module2.mod.c
  -rw-rw-r--. 1 makoto makoto  70K  4月 29 20:14 module2.mod.o
  -rw-rw-r--. 1 makoto makoto  74K  4月 29 20:14 module2.o
  -rw-rw-r--. 1 makoto makoto   39  4月 29 20:14 modules.order
  --------------------------------------------------
  
  vm11$ cd $HOME/module2
  vm11$ modinfo module2.ko
  
  コマンドの実行結果
  --------------------------------------------------
  filename:       /home/makoto/module2/module2.ko
  description:    module2
  author:         Makoto-Araki
  license:        GPL
  srcversion:     BD1FF2633987D42475AC194
  depends:        (依存モジュール無し)
  retpoline:      Y
  name:           module2
  vermagic:       4.15.3 SMP mod_unload modversions 
  parm:           P1:int -> パラメータ
  parm:           P2:int -> パラメータ
  --------------------------------------------------
  
  vm11$ cd $HOME/module2
  vm11$ sudo insmod module2.ko
  
  コマンドの実行結果
  --------------------------------------------------
  [ 2594.255477] module2 init
  [ 2594.256385] P1 = 11 -> ソース中の設定値
  [ 2594.257133] P2 = 22 -> ソース中の設定値
  --------------------------------------------------
  
  vm11$ cd $HOME/module2
  vm11$ sudo rmmod module2.ko
  
  コマンドの実行結果
  --------------------------------------------------
  [ 2661.859028] module2 exit
  --------------------------------------------------
  
  vm11$ cd $HOME/module2
  vm11$ sudo cp -p *.ko /lib/modules/$(uname -r)/kernel/kernel
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME/module2
  vm11$ sudo depmod
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> /lib/modules/$(uname -r)/modules.depを更新
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo modprobe module2
  
  コマンドの実行結果
  --------------------------------------------------
  [ 2823.587542] module2 init
  [ 2823.588646] P1 = 11 -> ソース中の設定値
  [ 2823.589452] P2 = 22 -> ソース中の設定値
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo modprobe -r module2
  
  コマンドの実行結果
  --------------------------------------------------
  [ 2900.741254] module2 exit
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[17]
  カーネルモジュール - 10 (Parameter Set 2)
  
[内容]
  ## 作業内容
    パラメータ値を設定ファイルから指定可能にする
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd /etc/modprobe.d
  vm11$ sudo vi modules.conf
  
  コマンドの実行結果
  --------------------------------------------------
  alias mod1 module1
  alias mod2 module2
  options module2 P1=111
  options module2 P2=222
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo modprobe mod1 -> 別名でモジュールをロード
  
  コマンドの実行結果
  --------------------------------------------------
  [ 3214.700305] base init
  [ 3214.702002] module1 init
  [ 3214.703471] func1 called
  [ 3214.704702] func2 called
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo modprobe -r mod1 -> 別名でモジュールのアンロード
  
  コマンドの実行結果
  --------------------------------------------------
  [ 3260.795568] module1 exit
  [ 3260.797451] base exit
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo modprobe mod2
  
  コマンドの実行結果
  --------------------------------------------------
  [ 3331.863986] module2 init
  [ 3331.864883] P1 = 111 -> 設定ファイル中の値
  [ 3331.865618] P2 = 222 -> 設定ファイル中の値
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo modprobe -r mod2
  
  コマンドの実行結果
  --------------------------------------------------
  [ 3415.829206] module2 exit
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[18]
  カーネルパラメータの設定 - 01
  
[内容]
  ## 作業内容
    カーネルパラメータの閲覧と更新
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ cat /proc/sys/net/ipv4/ip_forward
  
  コマンドの実行結果
  --------------------------------------------------
  0 -> IPv4のパケット転送禁止
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ cat /proc/sys/net/ipv6/conf/all/forwarding
  
  コマンドの実行結果
  --------------------------------------------------
  0 -> IPv6のパケット転送禁止
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo echo 1 > /proc/sys/net/ipv4/ip_forward
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー、ユーザー「makoto」では権限不足
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo echo 1 > /proc/sys/net/ipv6/conf/all/forwarding
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー、ユーザー「makoto」では権限不足
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[19]
  カーネルパラメータの設定 - 02
  
[内容]
  ## 作業内容
    カーネルパラメータを閲覧・更新
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ sysctl net/ipv4/ip_forward
  
  コマンドの実行結果
  --------------------------------------------------
  net.ipv4.ip_forward = 0 -> IPv4のパケット転送禁止
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sysctl net/ipv6/conf/all/forwarding
  
  コマンドの実行結果
  --------------------------------------------------
  net.ipv6.conf.all.forwarding = 0 -> IPv6のパケット転送禁止
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo sysctl -w net/ipv4/ip_forward=1
  
  コマンドの実行結果
  --------------------------------------------------
  net.ipv4.ip_forward = 1
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo sysctl -w net/ipv6/conf/all/forwarding=1
  
  コマンドの実行結果
  --------------------------------------------------
  net.ipv6.conf.all.forwarding = 1
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[20]
  カーネルパラメータの設定 - 03
  
[内容]
  ## 作業内容
    カーネルパラメータを閲覧・(永続的に)更新
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ sudo vi /etc/sysctl.conf
  
  コマンドの実行結果
  --------------------------------------------------
  net.ipv4.ip_forward=1
  net.ipv6.conf.all.forwarding=1
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo sysctl -p /etc/sysctl.conf -> 設定ファイルからカーネルパラメータ値を反映
  
  コマンドの実行結果
  --------------------------------------------------
  net.ipv4.ip_forward = 1
  net.ipv6.conf.all.forwarding = 1
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo systemctl reboot
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[21]
  初期RAMディスク - 01 (lsinitrd)
  
[内容]
  ## 作業内容
    初期RAMディスクの内容確認
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd /boot
  vm11$ ls -lh | grep $(uname -r) | grep initramfs
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-------. 1 root root  40M  4月 16 10:44 initramfs-4.15.3.img
  --------------------------------------------------
  
  vm11$ cd /boot
  vm11$ sudo lsinitrd initramfs-4.15.3.img | head -n 1 -> 初期RAMディスクの内容を確認
  
  コマンドの実行結果
  --------------------------------------------------
  Image: initramfs-4.15.3.img: 41M
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[22]
  初期RAMディスク - 02 (mkinitrd, dracut)
  
[内容]
  ## 作業内容
    初期RAMディスクをコマンド(mkinitrd, dracut)で作成
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ mkdir temp1 temp2
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  ==================================================
                      mkinitrd
  ==================================================
  
  vm11$ cd $HOME/temp1
  vm11$ sudo mkinitrd RamDisk1.img $(uname -r) -> 初期RAMディスクをコマンド作成
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 5分程かかる
  --------------------------------------------------
  
  vm11$ cd $HOME/temp1
  vm11$ sudo lsinitrd RamDisk1.img | head -n 1 -> 初期RAMディスクの内容確認
  
  コマンドの実行結果
  --------------------------------------------------
  Image: RamDisk1.img: 38M
  --------------------------------------------------
  
  vm11$ cd $HOME/temp1
  vm11$ sudo gunzip -S .img RamDisk1.img -> 拡張子指定で初期RAMディスクの解凍
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME/temp1
  vm11$ sudo cat RamDisk1 | cpio -id -> 初期RAMディスクの展開
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME/temp1
  vm11$ sudo rm RamDisk1
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME/temp1
  vm11$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  lrwxrwxrwx.  1 makoto makoto    7  4月 29 21:31 bin -> usr/bin
  drwxr-xr-x.  2 makoto makoto    6  4月 29 21:31 dev
  drwxr-xr-x. 12 makoto makoto 4.0K  4月 29 21:31 etc
  lrwxrwxrwx.  1 makoto makoto   23  4月 29 21:31 init -> usr/lib/systemd/systemd
  lrwxrwxrwx.  1 makoto makoto    7  4月 29 21:31 lib -> usr/lib
  lrwxrwxrwx.  1 makoto makoto    9  4月 29 21:31 lib64 -> usr/lib64
  drwxr-xr-x.  2 makoto makoto    6  4月 29 21:31 proc
  drwxr-xr-x.  2 makoto makoto    6  4月 29 21:31 root
  drwxr-xr-x.  2 makoto makoto    6  4月 29 21:31 run
  lrwxrwxrwx.  1 makoto makoto    8  4月 29 21:31 sbin -> usr/sbin
  -rwxr-xr-x.  1 makoto makoto 3.1K  4月 29 21:31 shutdown
  drwxr-xr-x.  2 makoto makoto    6  4月 29 21:31 sys
  drwxr-xr-x.  2 makoto makoto    6  4月 29 21:31 sysroot
  drwxr-xr-x.  2 makoto makoto    6  4月 29 21:31 tmp
  drwxr-xr-x.  7 makoto makoto   66  4月 29 21:31 usr
  drwxr-xr-x.  2 makoto makoto   29  4月 29 21:31 var
  --------------------------------------------------
  
  ==================================================
                      dracut
  ==================================================
  
  vm11$ cd $HOME/temp2
  vm11$ sudo dracut RamDisk2.img $(uname -r) -> 初期RAMディスクをコマンド作成
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 5分程かかる
  --------------------------------------------------
  
  vm11$ cd $HOME/temp2
  vm11$ sudo lsinitrd RamDisk2.img | head -n 1 -> 初期RAMディスクの内容確認
  
  コマンドの実行結果
  --------------------------------------------------
  Image: RamDisk2.img: 38M
  --------------------------------------------------
  
  vm11$ cd $HOME/temp2
  vm11$ sudo gunzip -S .img RamDisk2.img -> 拡張子指定で初期RAMディスクの解凍
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME/temp2
  vm11$ sudo cat RamDisk2 | cpio -id -> 初期RAMディスクの展開
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME/temp2
  vm11$ sudo rm RamDisk2
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME/temp2
  vm11$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  lrwxrwxrwx.  1 makoto makoto    7  4月 29 21:40 bin -> usr/bin
  drwxr-xr-x.  2 makoto makoto    6  4月 29 21:40 dev
  drwxr-xr-x. 12 makoto makoto 4.0K  4月 29 21:40 etc
  lrwxrwxrwx.  1 makoto makoto   23  4月 29 21:40 init -> usr/lib/systemd/systemd
  lrwxrwxrwx.  1 makoto makoto    7  4月 29 21:40 lib -> usr/lib
  lrwxrwxrwx.  1 makoto makoto    9  4月 29 21:40 lib64 -> usr/lib64
  drwxr-xr-x.  2 makoto makoto    6  4月 29 21:40 proc
  drwxr-xr-x.  2 makoto makoto    6  4月 29 21:40 root
  drwxr-xr-x.  2 makoto makoto    6  4月 29 21:40 run
  lrwxrwxrwx.  1 makoto makoto    8  4月 29 21:40 sbin -> usr/sbin
  -rwxr-xr-x.  1 makoto makoto 3.1K  4月 29 21:40 shutdown
  drwxr-xr-x.  2 makoto makoto    6  4月 29 21:40 sys
  drwxr-xr-x.  2 makoto makoto    6  4月 29 21:40 sysroot
  drwxr-xr-x.  2 makoto makoto    6  4月 29 21:40 tmp
  drwxr-xr-x.  7 makoto makoto   66  4月 29 21:40 usr
  drwxr-xr-x.  2 makoto makoto   29  4月 29 21:40 var
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[23]
  仮想ファイルシステム(/proc) - 01 (cat /proc/cmdline)
  
[内容]
  ## 作業内容
    システム起動時のカーネル引数を確認する
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ cat /proc/cmdline
  
  コマンドの実行結果
  --------------------------------------------------
  BOOT_IMAGE=/vmlinuz-4.15.3
  root=/dev/mapper/centos_vm11-root
  ro
  crashkernel=auto
  rd.lvm.lv=centos_vm11/root
  rd.lvm.lv=centos_vm11/swap
  console=ttyS0,115200n8
  LANG=ja_JP.UTF-8
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[24]
  仮想ファイルシステム(/proc) - 02 (cat /proc/cpuinfo)
  
[内容]
  ## 作業内容
    CPU情報を確認する
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ cat /proc/cpuinfo
  
  コマンドの実行結果
  --------------------------------------------------
  processor       : 0 -> プロセッサID
  vendor_id       : GenuineIntel
  cpu family      : 6
  model           : 42
  model name      : Intel Xeon E312xx (Sandy Bridge, IBRS update)
  stepping        : 1
  microcode       : 0x1
  cpu MHz         : 2494.332
  cache size      : 16384 KB
  physical id     : 0
  siblings        : 1
  core id         : 0
  cpu cores       : 1 -> CPU内のコア数
  apicid          : 0
  initial apicid  : 0
  fpu             : yes
  fpu_exception   : yes
  cpuid level     : 13
  wp              : yes
  flags           : fpu vme de ... -> フラグ(vmx)で仮想化対応
  bugs            : cpu_meltdown spectre_v1 spectre_v2
  bogomips        : 4988.66
  clflush size    : 64
  cache_alignment : 64
  address sizes   : 36 bits physical, 48 bits virtual
  power management:
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[25]
  仮想ファイルシステム(/proc) - 03 (cat /proc/filesystems)
  
[内容]
  ## 作業内容
    ファイルシステム情報を確認する
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ cat /proc/filesystems
  
  コマンドの実行結果
  --------------------------------------------------
  nodev  sysfs
  nodev  rootfs
  nodev  ramfs
  nodev  bdev
  nodev  proc
  nodev  cpuset
  nodev  cgroup
  nodev  cgroup2
  nodev  tmpfs
  nodev  devtmpfs
  nodev  configfs
  nodev  debugfs
  nodev  tracefs
  nodev  securityfs
  nodev  sockfs
  nodev  dax
  nodev  bpf
  nodev  pipefs
  nodev  hugetlbfs
  nodev  devpts
  nodev  autofs
  nodev  pstore
  nodev  mqueue
  nodev  selinuxfs
         xfs -> 使用デバイスが存在している
  --------------------------------------------------
  
  以下の確認に続く

================================================================================
[26]
  仮想ファイルシステム(/proc) - 04 (cat /proc/swaps)
  
[内容]
  ## 作業内容
    使用中のスワップ領域を確認する
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ cat /proc/swaps
  
  コマンドの実行結果
  --------------------------------------------------
  Filename    Type         Size        Used     Priority
  /dev/dm-1   partition    2097148     268      -2
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[27]
  仮想ファイルシステム(/proc) - 05 (cat /proc/version)
  
[内容]
  ## 作業内容
    バージョン情報を確認する
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ cat /proc/version
  
  コマンドの実行結果
  --------------------------------------------------
  Linux version 4.15.3 (root@vm11) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC))
  #1 SMP Sun Apr 16 08:02:00 JST 2023
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[28]
  仮想ファイルシステム(/proc) - 06 (ls -lh /proc/bus/pci)
  
[内容]
  ## 作業内容
    PCIバス情報を確認する
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ sudo yum -y install pciutils
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ ls -lh /proc/bus/pci
  
  コマンドの実行結果
  --------------------------------------------------
  dr-xr-xr-x. 2 root root 0  4月 16 18:57 00 -> バス(00)
  dr-xr-xr-x. 2 root root 0  4月 16 18:57 01
  dr-xr-xr-x. 2 root root 0  4月 16 18:57 02
  dr-xr-xr-x. 2 root root 0  4月 16 18:57 03
  dr-xr-xr-x. 2 root root 0  4月 16 18:57 04
  dr-xr-xr-x. 2 root root 0  4月 16 18:57 05
  dr-xr-xr-x. 2 root root 0  4月 16 18:57 06
  dr-xr-xr-x. 2 root root 0  4月 16 18:57 07
  -r--r--r--. 1 root root 0  4月 16 18:57 devices
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ ls -lh /proc/bus/pci/00 -> バス(00)のデバイス一覧
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root  256  4月 16 18:58 00.0 -> スロット(00)のデバイス(0)
  -rw-r--r--. 1 root root 4.0K  4月 16 18:58 01.0
  -rw-r--r--. 1 root root 4.0K  4月 16 18:58 01.1
  -rw-r--r--. 1 root root 4.0K  4月 16 18:58 01.2
  -rw-r--r--. 1 root root 4.0K  4月 16 18:58 01.3
  -rw-r--r--. 1 root root 4.0K  4月 16 18:58 01.4
  -rw-r--r--. 1 root root 4.0K  4月 16 18:58 01.5
  -rw-r--r--. 1 root root 4.0K  4月 16 18:58 01.6
  -rw-r--r--. 1 root root  256  4月 16 18:58 1f.0
  -rw-r--r--. 1 root root  256  4月 16 18:58 1f.2
  -rw-r--r--. 1 root root  256  4月 16 18:58 1f.3
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ lspci | grep 00:00.0 -> バス(00)、デバイス(00.0)のデバイス
  
  コマンドの実行結果
  --------------------------------------------------
  00:00.0 Host bridge: Intel Corporation 82G33/G31/P35/P31 Express DRAM Controller
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[29]
  仮想ファイルシステム(/proc) - 07 (ls -lh /proc/bus/usb)
  
[内容]
  ## 作業内容
    USBバス情報を確認する
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ sudo yum -y install usbutils
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo find /proc -type d | grep -i usb -> バス(USB)情報を検索
  
  コマンドの実行結果
  --------------------------------------------------
  (出力なし) -> パス(/proc/bus/usb)が存在しない
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ lsusb -> USBデバイスを検索
  
  コマンドの実行結果
  --------------------------------------------------
  Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub
  Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ lsusb -t -> ツリー状で表示
  
  コマンドの実行結果
  --------------------------------------------------
  /:  Bus 02.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/15p, 5000M
  /:  Bus 01.Port 1: Dev 1, Class=root_hub, Driver=xhci_hcd/15p, 480M
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ lsusb -v -s 02:1.1 -> バス(02)のポート(1)のデバイス(1)を詳細に表示
  
  コマンドの実行結果
  --------------------------------------------------
  Bus 002 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub
  Couldn't open device, some information will be missing
  Device Descriptor:
    bLength                18
    bDescriptorType         1
    bcdUSB               3.00
    bDeviceClass            9 Hub
    bDeviceSubClass         0 Unused
  …
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[30]
  デバイスファイル
  
[内容]
  ## 作業内容
    デバイスファイルの情報を追跡してみる
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ ls -lh /dev | grep -E '^b'
  
  コマンドの実行結果
  --------------------------------------------------
  brw-rw----. 1 root   disk    253,   0  4月 16 18:31 dm-0 -> 253(メジャー番号)、0(マイナー番号)
  brw-rw----. 1 root   disk    253,   1  4月 16 18:31 dm-1
  brw-rw----. 1 root   cdrom    11,   0  4月 16 18:31 sr0
  brw-rw----. 1 root   disk    252,   0  4月 16 18:31 vda
  brw-rw----. 1 root   disk    252,   1  4月 16 18:31 vda1
  brw-rw----. 1 root   disk    252,   2  4月 16 18:31 vda2
  brw-rw----. 1 root   disk    252,  16  4月 16 18:31 vdb
  brw-rw----. 1 root   disk    252,  17  4月 16 18:31 vdb1
  brw-rw----. 1 root   disk    252,  18  4月 16 18:31 vdb2
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ cat /proc/devices | grep 253 -> メジャー番号253の意味を調査
  
  コマンドの実行結果
  --------------------------------------------------
  253 tpm
  253 device-mapper
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[31]
  ループバックデバイス
  
[内容]
  ## 作業内容
    ディスクイメージからループバックデバイス作成
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ LANG=C dd if=/dev/zero of=image0.img bs=1M count=10
  
  コマンドの実行結果
  --------------------------------------------------
  10+0 records in
  10+0 records out
  10485760 bytes (10 MB) copied, 0.0727656 s, 144 MB/s
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo losetup /dev/loop0 image0.img
  
  コマンドの実行結果
  --------------------------------------------------
  [ 4801.711345] loop: module loaded
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ losetup -l
  
  コマンドの実行結果
  --------------------------------------------------
  NAME        SIZELIMIT  OFFSET  AUTOCLEAR  RO  BACK-FILE
  /dev/loop0          0       0          0   0  /home/makoto/image0.img
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo mkfs -t ext4 /dev/loop0
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ブロック割当のメッセージが多数出力されるが成功
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo mount -t ext4 /dev/loop0 /mnt
  
  コマンドの実行結果
  --------------------------------------------------
  [ 5139.620213] EXT4-fs (loop0): mounted filesystem with ordered data mode. Opts: (null)
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ lsblk
  
  コマンドの実行結果
  --------------------------------------------------
  NAME                        MAJ:MIN  RM   SIZE  RO  TYPE  MOUNTPOINT
  vdb                         252:16    0     2G   0  disk  
   |-- vdb2                   252:18    0   975M   0  part  
   |-- vdb1                   252:17    0     1G   0  part  
  sr0                          11:0     1  1024M   0  rom   
  loop0                         7:0     0    10M   0  loop  /mnt -> ループバックデバイス
  vda                         252:0     0    20G   0  disk  
   |-- vda1                   252:1     0     1G   0  part  /boot
   |-- vda2                   252:2     0    19G   0  part  
        |-- centos_vm11-root  253:0     0    17G   0  lvm   /
        |-- centos_vm11-swap  253:1     0     2G   0  lvm   [SWAP]
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo umount /mnt
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo losetup -D
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ rm -f image0.img
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[32]
  動的デバイス管理(udev) - 01 (/etc/udev/rules.d)
  
[内容]
  ## 作業内容
    ループバックデバイス検出時にルール通りのコマンドが実行されるか確認する
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ systemctl is-active systemd-udevd
  
  コマンドの実行結果
  --------------------------------------------------
  active -> プロセス(udevd)の実体はsystemd-udevd
  --------------------------------------------------
  
  vm11$ cd /etc/udev/rules.d
  vm11$ sudo vi 10-loopback.rules -> ルール作成
  
  コマンドの実行結果
  --------------------------------------------------
  ## デバイス検出時にジャーナル記録
  KERNEL=="loop*", RUN="/bin/logger %k %p" // %k(デバイス名)、%p(絶対パス)
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ LANG=C dd if=/dev/zero of=image0.img bs=10M count=10
  
  コマンドの実行結果
  --------------------------------------------------
  10+0 records in
  10+0 records out
  10485760 bytes (100 MB) copied, 0.0239324 s, 438 MB/s
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo losetup /dev/loop0 image0.img
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> デバイスファイル作成
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ LANG=C journalctl --no-pager | grep loop0 -> ジャーナル確認
  
  コマンドの実行結果
  --------------------------------------------------
  Apr 16 20:16:28 vm11 sudo[13238]: makoto : TTY=ttyS0 ; PWD=/home/makoto ; USER=root ; COMMAND=/sbin/losetup /dev/loop0 image0.img
  Apr 16 20:16:28 vm11 root[13243]: loop0 (デバイス名) /devices/virtual/block/loop0 (絶対パス)
  Apr 16 20:16:28 vm11 root[13245]: loop0 (デバイス名) /devices/virtual/block/loop0 (絶対パス)
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo losetup -D
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ rm -f image0.img
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[33]
  動的デバイス管理(udev) - 02 (udevadm info)
  
[内容]
  ## 作業内容
    ループバックデバイスをコマンド(udevadm info)で捕捉する
  
  ## 使用マシン
    HOST : vm11
    IPV4 : 192.168.122.11
    MEMO : 仮想マシン
  
[確認]
  vm11$ cd $HOME
  vm11$ systemctl is-active systemd-udevd
  
  コマンドの実行結果
  --------------------------------------------------
  active -> プロセス(udevd)の実体はsystemd-udevd
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ LANG=C dd if=/dev/zero of=loop1.img bs=10M count=10
  
  コマンドの実行結果
  --------------------------------------------------
  10+0 records in
  10+0 records out
  10485760 bytes (100 MB) copied, 0.0188382 s, 557 MB/s
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo losetup /dev/loop1 loop1.img
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ udevadm info -n /dev/loop1 -> デバイス名(udevd)を指定
  
  コマンドの実行結果
  --------------------------------------------------
  P: /devices/virtual/block/loop1 -> デバイス名(sysfs)
  N: loop1 -> デバイス名(udevd)
  E: DEVNAME=/dev/loop1
  E: DEVPATH=/devices/virtual/block/loop1
  E: DEVTYPE=disk
  E: MAJOR=7
  E: MINOR=1
  E: SUBSYSTEM=block
  E: TAGS=:systemd:
  E: USEC_INITIALIZED=15017502
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ udevadm info -p /devices/virtual/block/loop1 -> デバイス名(sysfs)を指定
  
  コマンドの実行結果
  --------------------------------------------------
  (同上)
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ udevadm info -n /dev/loop1 -q name -> 問合せ結果から名前のみ抽出
  
  コマンドの実行結果
  --------------------------------------------------
  loop1
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ udevadm info -n /dev/loop1 -q property -> 問合せ結果からプロパティのみ表示
  
  コマンドの実行結果
  --------------------------------------------------
  DEVNAME=/dev/loop1
  DEVPATH=/devices/virtual/block/loop1
  DEVTYPE=disk
  MAJOR=7
  MINOR=1
  SUBSYSTEM=block
  TAGS=:systemd:
  USEC_INITIALIZED=15017502
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ udevadm info -n /dev/loop1 -q all -> 問合せ結果から全情報表示
  
  コマンドの実行結果
  --------------------------------------------------
  P: /devices/virtual/block/loop1 -> デバイス名(sysfs)
  N: loop1 -> デバイス名(udevd)
  E: DEVNAME=/dev/loop1
  E: DEVPATH=/devices/virtual/block/loop1
  E: DEVTYPE=disk
  E: MAJOR=7
  E: MINOR=1
  E: SUBSYSTEM=block
  E: TAGS=:systemd:
  E: USEC_INITIALIZED=15017502
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ sudo losetup -D
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm11$ cd $HOME
  vm11$ rm -f loop1.img
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[34]
  動的デバイス管理(udev) - 03 (udevadm monitor)
  
[内容]
  ## 作業内容
    デバイス(USB)の自動検出をモニタリング
  
  ## 使用マシン
    HOST : localhost
    IPV4 : DHCP
    MEMO : ホスト
  
[確認]
  # cd $HOME
  # systemctl is-active systemd-udevd
  
  コマンドの実行結果
  --------------------------------------------------
  active
  --------------------------------------------------
  
  # cd $HOME
  # udevadm monitor
  
  コマンドの実行結果
  --------------------------------------------------
  monitor will print the received events for:
  UDEV   - the event which udev sends out after rule processing
  KERNEL - the kernel uevent
  
  // ここでUSBメモリ接続
  
  KERNEL[27052.818517] add /devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.1 (usb)
  KERNEL[27052.819669] add /devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.1/2-1.1:1.0 (usb)
    
    -- 省略 --
    
  KERNEL[27058.610690] add /module/vfat (module)
  UDEV  [27058.611319] add /module/vfat (module)
  --------------------------------------------------
  
  # cd $HOME
  # lsusb
  
  コマンドの実行結果
  --------------------------------------------------
  Bus 002 Device 008: ID 056e:6042 Elecom Co., Ltd  -> USBメモリ
  Bus 002 Device 002: ID 8087:0024 Intel Corp. Integrated Rate Matching Hub
  Bus 002 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
  Bus 004 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub
  Bus 003 Device 002: ID 046d:c019 Logitech, Inc. Optical Tilt Wheel Mouse
  Bus 003 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
  Bus 001 Device 003: ID 8086:0186 Intel Corp. WiMAX Connection 2400m
  Bus 001 Device 002: ID 8087:0024 Intel Corp. Integrated Rate Matching Hub
  Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================

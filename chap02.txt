================================================================================
[01] ビルド練習 - 01
[02] ビルド練習 - 02
[03] カーネルバージョン - 01 (uname)
[04] カーネルバージョン - 02 (cat /proc/version)
[05] カーネルバージョン - 03 (Makefile)
[06] カーネルイメージ
[07] カーネルのコンパイルとインストール
[08] カーネルモジュール - 01 (FHS)
[09] カーネルモジュール - 02 (insmod)
[10] カーネルモジュール - 03 (rmmod)
[11] カーネルモジュール - 04 (modprobe)
[12] カーネルモジュール - 05 (depmod)
[13] カーネルモジュール - 06 (modinfo)
[14] カーネルモジュール - 07 (lsmod)
[15] カーネルモジュール - 08 (cat /proc/modules)
[16] カーネルモジュール - 09 (Parameter Set 1)
[17] カーネルモジュール - 10 (Parameter Set 2)
[18] カーネルパラメータの設定 - 01
[19] カーネルパラメータの設定 - 02
[20] カーネルパラメータの設定 - 03
[21] 初期RAMディスク - 01 (lsinitrd)
[22] 初期RAMディスク - 02 (mkinitrd)
[23] 仮想ファイルシステム(/proc) - 01 (cat /proc/cmdline)
[24] 仮想ファイルシステム(/proc) - 02 (cat /proc/cpuinfo)
[25] 仮想ファイルシステム(/proc) - 03 (cat /proc/filesystems)
[26] 仮想ファイルシステム(/proc) - 04 (cat /proc/swaps)
[27] 仮想ファイルシステム(/proc) - 05 (cat /proc/version)
[28] 仮想ファイルシステム(/proc) - 06 (ls -lh /proc/bus/pci)
[29] 仮想ファイルシステム(/proc) - 07 (ls -lh /proc/bus/usb)
[20] デバイスファイル
[21] ループバックデバイス
[22] 動的デバイス管理 - 1 (ルール記述)
[23] 動的デバイス管理 - 2 (udevadm info)
[24] デバイス(USB)の自動検出
================================================================================
[01]
  ビルド練習 - 01
  
[内容]
  ## 作業内容
    簡単なプログラム作成後に、Makefileを使わないでビルド
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y groupinstall '開発ツール' (開発ツール一式をインストール)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ mkdir HELLO
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ vi hello.h (ヘッダファイル作成)
  
  コマンドの実行結果
  --------------------------------------------------
  #ifndef HELLO_H_
  
  void Hello1(void);  // 関数プロトタイプ宣言
  void Hello2(void);  // 関数プロトタイプ宣言
  
  #endif
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ vi hello.c (ソースファイル作成)
  
  コマンドの実行結果
  --------------------------------------------------
  #include <stdio.h>
  #include "hello.h"
  
  void Hello1(void) { printf("Hello1\n"); }  // 関数実装
  void Hello2(void) { printf("Hello2\n"); }  // 関数実装
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ vi main.c (プログラム本体)
  
  コマンドの実行結果
  --------------------------------------------------
  #include "hello.h"
  
  int main(void)
  {
    Hello1();  // 関数呼出
    Hello2();  // 関数呼出
    return 0;
  }
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ gcc -o HELLO main.c hello.c (Makefileを使わないでビルド)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rwxrwxr-x. 1 makoto makoto 8.3K 12月 24 18:43 HELLO  // ビルドされた実行ファイル
  -rw-rw-r--. 1 makoto makoto  157 12月 24 18:41 hello.c
  -rw-rw-r--. 1 makoto makoto  134 12月 24 18:40 hello.h
  -rw-rw-r--. 1 makoto makoto  109 12月 24 18:42 main.c
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ ./HELLO (ビルドされた実行ファイルを実行)
  
  コマンドの実行結果
  --------------------------------------------------
  Hello1
  Hello2
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ rm HELLO

  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------

  以下の確認に続く
  
================================================================================
[02]
  ビルド練習 - 02
  
[内容]
  ## 作業内容
    Makefileによるビルドを行う
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME/HELLO
  vm12$ vi Makefile (Makefileを記述)
  
  コマンドの実行結果
  --------------------------------------------------
  PROG := HELLO
  OBJ1 := main.o
  OBJ2 := hello.o
  SRC1 := main.c
  SRC2 := hello.c
  COMP := gcc
  
  // HELLO (単にmakeと実行した場合は一番上のターゲットが実行される)
  $(PROG): $(OBJ1) $(OBJ2)
    $(COMP) $(OBJ1) $(OBJ2) -o $(PROG)  // 行頭のインデントはtabキー
  
  // main.o
  $(OBJ1): $(SRC1)
    $(COMP) -c $(SRC1)
  
  // hello.o
  $(OBJ2): $(SRC2)
    $(COMP) -c $(SRC2)
  
  // 削除
  clean:
    rm -f $(PROG) $(OBJ1) $(OBJ2)
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ make -n (実行処理をシミューレート)
  
  コマンドの実行結果
  --------------------------------------------------
  gcc -c main.c
  gcc -c hello.c
  gcc main.o hello.o -o HELLO
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ make (Makefileによるビルド)
  
  コマンドの実行結果
  --------------------------------------------------
  gcc -c main.c
  gcc -c hello.c
  gcc main.o hello.o -o HELLO
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rwxrwxr-x. 1 makoto makoto 8.3K 12月 24 18:58 HELLO  // ビルドされた実行ファイル
  -rw-rw-r--. 1 makoto makoto  265 12月 24 18:57 Makefile
  -rw-rw-r--. 1 makoto makoto  157 12月 24 18:41 hello.c
  -rw-rw-r--. 1 makoto makoto  134 12月 24 18:40 hello.h
  -rw-rw-r--. 1 makoto makoto 1.7K 12月 24 18:58 hello.o
  -rw-rw-r--. 1 makoto makoto  109 12月 24 18:42 main.c
  -rw-rw-r--. 1 makoto makoto 1.4K 12月 24 18:58 main.o
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ ./HELLO (ビルドされた実行ファイルを実行)
  
  コマンドの実行結果
  --------------------------------------------------
  Hello1
  Hello2
  --------------------------------------------------
  
  vm12$ cd $HOME/HELLO
  vm12$ make clean (実行ファイルと中間ファイルを削除)
  
  コマンドの実行結果
  --------------------------------------------------
  rm -f HELLO main.o hello.o
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[03]
  カーネルバージョン - 01 (uname)
  
[内容]
  ## 作業内容
    カーネルバージョンをコマンド(uname)から調査
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ uname -r
  
  コマンドの実行結果
  --------------------------------------------------
  3.10.0-1160.el7.x86_64 -> 3(メジャー番号)、10(マイナー番号)、0(リリース番号)、-1160.el7.x86_64(エクストラ番号)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[04]
  カーネルバージョン - 02 (cat /proc/version)
  
[内容]
  ## 作業内容
    カーネルバージョンをコマンド(cat /proc/version)から調査
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ cat /proc/version
  
  コマンドの実行結果
  --------------------------------------------------
  Linux version 3.10.0-1160.el7.x86_64 (省略) -> コマンド(uname)と同一
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[05]
  カーネルバージョン - 03 (Makefile)
  
[内容]
  ## 作業内容
    カーネルバージョンをファイル(Makefile)から調査
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo find /usr/src -name $(uname -r) (カーネルソースのパス検索)
  
  コマンドの実行結果
  --------------------------------------------------
  /usr/src/kernels/3.10.0-1160.el7.x86_64
  --------------------------------------------------
  
  vm12$ cd /usr/src/kernels/3.10.0-1160.el7.x86_64
  vm12$ head -n 4 Makefile
  
  コマンドの実行結果
  --------------------------------------------------
  VERSION = 3                           // メジャー番号
  PATCHLEVEL = 10                       // マイナー番号
  SUBLEVEL = 0                          // リリース番号
  EXTRAVERSION = -1160.45.1.el7.x86_64  // エクストラ番号
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[06]
  カーネルイメージ
  
[内容]
  ## 作業内容
    パス(/boot)からカーネルイメージを検索
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ uname -r
  
  コマンドの実行結果
  --------------------------------------------------
  3.10.0-1160.el7.x86_64 -> 3(メジャー番号)、10(マイナー番号)、0(リリース番号)、-1160.el7.x86_64(エクストラ番号)
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo find /boot -name vmlinuz-$(uname -r) (カーネルイメージを検索)
  
  コマンドの実行結果
  --------------------------------------------------
  /boot/vmlinuz-3.10.0-1160.el7.x86_64
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[07]
  カーネルのコンパイルとインストール
  
[内容]
  ## 作業内容
    カーネル(4.15.3)のコンパイルとインストール
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo yum -y install kernel-devel ncurses-devel elfutils-libelf-devel openssl-devel bc (パッケージのインストール)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd /usr/src/kernels
  vm12$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  drwxr-xr-x. 22 root root 4.0K 12月  4 10:21 3.10.0-1160.49.1.el7.x86_64
  drwxr-xr-x. 22 root root 4.0K 12月  3 22:12 3.10.0-1160.49.1.el7.x86_64.debug
  --------------------------------------------------
  
  vm12$ cd /usr/src/kernels
  vm12$ sudo wget https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-4.15.3.tar.xz (カーネルソースのダウンロード)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12$ cd /usr/src/kernels
  vm12$ sudo xz -d linux-4.15.3.tar.xz (カーネルソースの解凍)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> unxzコマンドでもOK
  --------------------------------------------------
  
  vm12$ cd /usr/src/kernels
  vm12$ sudo tar xf linux-4.15.3.tar (カーネルソースの展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12$ cd /usr/src/kernels
  vm12$ sudo rm -f linux-4.15.3.tar (アーカイブファイルの削除)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 余分なアーカイブは削除
  --------------------------------------------------
  
  vm12$ cd /usr/src/kernels
  vm12$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  drwxr-xr-x. 22 root root 4.0K 12月  4 10:21 3.10.0-1160.49.1.el7.x86_64        // 現行カーネル
  drwxr-xr-x. 22 root root 4.0K 12月  3 22:12 3.10.0-1160.49.1.el7.x86_64.debug  // デバッグ用
  drwxrwxr-x. 24 root root 4.0K  2月 12  2018 linux-4.15.3                       // コンパイル対象のカーネル
  --------------------------------------------------
  
  vm12$ cd /usr/src/kernels/linux-4.15.3
  vm12$ sudo make menuconfig (カーネルの設定変更)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 設定内容がファイル「.config」に保存される
  --------------------------------------------------
  
  vm12$ cd /usr/src/kernels/linux-4.15.3
  vm12$ sudo nice -n -10 make (優先度「-10」を指定してカーネルをコンパイル)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 5時間程で完了
  --------------------------------------------------
  
  vm12$ cd /usr/src/kernels/linux-4.15.3
  vm12$ sudo make modules_install (カーネルモジュールをインストール)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 20分程で完了
  --------------------------------------------------
  
  vm12$ cd /usr/src/kernels/linux-4.15.3
  vm12$ sudo make install (カーネル本体をインストール)
  
  コマンドの実行結果
  --------------------------------------------------
  sh ./arch/x86/boot/install.sh 4.15.3 arch/x86/boot/bzImage System.map "/boot" -> カーネルイメージの圧縮形式はbzimage
  --------------------------------------------------
  
  vm12$ cd /usr/src/kernels/linux-4.15.3
  vm12$ sudo make clean (不要な中間ファイルを削除してディスク容量に空きを作る -> 空き容量サイズは9G程度)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 設定ファイル(.config)は残る
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo grub2-editenv list (デフォルト起動されるカーネル確認)
  
  コマンドの実行結果
  --------------------------------------------------
  saved_entry=CentOS Linux (3.10.0-1160.el7.x86_64) 7 (Core) -> デフォルト起動は旧パージョンのカーネルのまま
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo grep -E ^menu /etc/grub2.cfg (起動可能なカーネルリストを番号表示)
  
  コマンドの実行結果
  --------------------------------------------------
  menuentry 'CentOS Linux (4.15.3) 7 (Core)'                                     // 0
  menuentry 'CentOS Linux (3.10.0-1160.el7.x86_64) 7 (Core)'                     // 1
  menuentry 'CentOS Linux (0-rescue-5685550d34954a16aab7e36c1390eb86) 7 (Core)'  // 2
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo grub2-set-default 0 (デフォルト起動されるカーネルを番号指定)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> デフォルト起動されるカーネルを新カーネル(4.15.3)に変更
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo grub2-editenv list (デフォルト起動されるカーネル確認)
  
  コマンドの実行結果
  --------------------------------------------------
  saved_entry=0 -> 新カーネル(4.15.3)の番号を確認
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo systemctl reboot (システム再起動)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> カーネル選択画面に新カーネル(4.15.3)が確認できた
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ uname -r
  
  コマンドの実行結果
  --------------------------------------------------
  4.15.3 -> 起動後に新カーネル(4.15.3)を確認
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[08]
  カーネルモジュール - 01 (FHS)
  
[内容]
  ## 作業内容
    カーネルモジュールの格納されているディレクトリ構成(FHS)を把握する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ uname -r
  
  コマンドの実行結果
  --------------------------------------------------
  4.15.3 -> 4(メジャー番号)、15(マイナー番号)、3(リリース番号)
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo find /lib/modules -name $(uname -r) (カーネルモジュールのディレクトリを検索)
  
  コマンドの実行結果
  --------------------------------------------------
  /lib/modules/4.15.3
  --------------------------------------------------
  
  vm12$ cd /lib/modules/4.15.3
  vm12$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  lrwxrwxrwx.  1 root root   29 12月 25 00:16 build -> /usr/src/kernels/linux-4.15.3
  drwxr-xr-x. 12 root root  128 12月 25 00:26 kernel               // カーネルモジュール格納ディレクトリ
  -rw-r--r--.  1 root root 833K 12月 25 00:35 modules.alias        // 別名ファイル
  -rw-r--r--.  1 root root 800K 12月 25 00:35 modules.alias.bin    // 不明
  -rw-r--r--.  1 root root 7.7K 12月 25 00:16 modules.builtin      // 不明
  -rw-r--r--.  1 root root  10K 12月 25 00:35 modules.builtin.bin  // 不明
  -rw-r--r--.  1 root root 245K 12月 25 00:35 modules.dep          // 依存関係ファイル
  -rw-r--r--.  1 root root 351K 12月 25 00:35 modules.dep.bin
  -rw-r--r--.  1 root root  351 12月 25 00:35 modules.devname
  -rw-r--r--.  1 root root  96K 12月 25 00:16 modules.order
  -rw-r--r--.  1 root root  515 12月 25 00:35 modules.softdep
  -rw-r--r--.  1 root root 377K 12月 25 00:35 modules.symbols
  -rw-r--r--.  1 root root 461K 12月 25 00:35 modules.symbols.bin
  lrwxrwxrwx.  1 root root   29 12月 25 00:16 source -> /usr/src/kernels/linux-4.15.3
  --------------------------------------------------
  
  vm12$ cd /lib/modules/4.15.3/kernel
  vm12$ ls -lh (カーネルモジュール格納ディレクトリ配下のファイル一覧)
  
  コマンドの実行結果
  --------------------------------------------------
  drwxr-xr-x.  3 root root   17 12月 25 00:16 arch     // アーキテクチャ
  drwxr-xr-x.  3 root root 4.0K 12月 25 00:17 crypto   // 暗号化
  drwxr-xr-x. 68 root root 4.0K 12月 25 00:24 drivers  // ドライバ
  drwxr-xr-x. 25 root root 4.0K 12月 25 00:24 fs       // ファイルシステム
  drwxr-xr-x.  3 root root   19 12月 25 00:24 kernel   // カーネル
  drwxr-xr-x.  5 root root  207 12月 25 00:24 lib      // ライブラリ
  drwxr-xr-x.  2 root root   32 12月 25 00:24 mm       // メモリ
  drwxr-xr-x. 35 root root 4.0K 12月 25 00:26 net      // ネットワーク
  drwxr-xr-x. 12 root root  167 12月 25 00:26 sound    // サウンド -> 仮想マシンでは本来不要
  drwxr-xr-x.  3 root root   17 12月 25 00:26 virt     // 仮想環境 -> 仮想マシンでは本来不要
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[09]
  カーネルモジュール - 02 (insmod)
  
[内容]
  ## 作業内容
    作成したカーネルモジュールをコマンド(insmod)でロードする
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ mkdir SAMP1
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP1
  vm12$ vi BASE.c (ソースファイル作成)
  
  コマンドの実行結果
  --------------------------------------------------
  #include <linux/module.h>
  #include <linux/init.h>
  
  // ライセンス情報
  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("Makoto-Araki");
  MODULE_DESCRIPTION("BASE");
  
  // ロード時
  static int BASE_init(void)
  {
    printk(KERN_INFO "BASE init\n");
    return 0;
  }
  
  // アンロード時
  static void BASE_exit(void) { printk(KERN_INFO "BASE exit\n"); }
  
  // 他モジュールから呼び出される
  void FUNC1(void) { printk(KERN_INFO "FUNC1 call\n"); }
  void FUNC2(void) { printk(KERN_INFO "FUNC2 call\n"); }
  
  // マクロエクスポート
  EXPORT_SYMBOL(FUNC1);
  EXPORT_SYMBOL(FUNC2);
  
  module_init( BASE_init );
  module_exit( BASE_exit );
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP1
  vm12$ vi SAMP1.c (ソースファイル作成)
  
  コマンドの実行結果
  --------------------------------------------------
  #include <linux/module.h>
  #include <linux/kernel.h>
  
  // プロトタイプ宣言
  void FUNC1(void);
  void FUNC2(void);
  
  // ライセンス情報
  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("Makoto-Araki");
  MODULE_DESCRIPTION("SAMP1");
  
  // ロード時
  static int SAMP1_init(void)
  {
    printk( KERN_INFO "SAMP1 init\n" );
    FUNC1();  // 他モジュールの関数実行
    FUNC2();  // 他モジュールの関数実行
    return 0;
  }
  
  // アンロード時
  static void SAMP1_exit(void) { printk( KERN_INFO "SAMP1 exit\n" ); }
  
  module_init( SAMP1_init );
  module_exit( SAMP1_exit );
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP1
  vm12$ vi Makefile (Makefileを記述)
  
  コマンドの実行結果
  --------------------------------------------------
  // 既存ファイル(/lib/modules/4.15.3/build/Makefile)のターゲットを利用
  obj-m := SAMP1.o BASE.o
  
  all:
    make -C /lib/modules/$(shell uname -r)/build M=$(shell pwd) modules
  
  clean:
    make -C /lib/modules/$(shell uname -r)/build M=$(shell pwd) clean
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP1
  vm12$ make -n (実行処理をシミューレート)
  
  コマンドの実行結果
  --------------------------------------------------
  make -C /lib/modules/4.15.3/build M=/home/makoto/SAMP1 modules
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP1
  vm12$ make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  make -C /lib/modules/4.15.3/build M=/home/makoto/SAMP1 modules
  make[1]: ディレクトリ `/usr/src/kernels/linux-4.15.3' に入ります
    CC [M]  /home/makoto/SAMP1/SAMP1.o
    CC [M]  /home/makoto/SAMP1/BASE.o
    Building modules, stage 2.
    MODPOST 2 modules
    CC      /home/makoto/SAMP1/BASE.mod.o
    LD [M]  /home/makoto/SAMP1/BASE.ko
    CC      /home/makoto/SAMP1/SAMP1.mod.o
    LD [M]  /home/makoto/SAMP1/SAMP1.ko
  make[1]: ディレクトリ `/usr/src/kernels/linux-4.15.3' から出ます
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP1
  vm12$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-rw-r--. 1 makoto makoto  627 12月 25 09:38 BASE.c
  -rw-rw-r--. 1 makoto makoto 124K 12月 25 09:41 BASE.ko  // カーネルモジュール
  -rw-rw-r--. 1 makoto makoto  853 12月 25 09:41 BASE.mod.c
  -rw-rw-r--. 1 makoto makoto  70K 12月 25 09:41 BASE.mod.o
  -rw-rw-r--. 1 makoto makoto  59K 12月 25 09:41 BASE.o
  -rw-rw-r--. 1 makoto makoto  174 12月 25 09:40 Makefile
  -rw-rw-r--. 1 makoto makoto  110 12月 25 09:41 Module.symvers
  -rw-rw-r--. 1 makoto makoto  570 12月 25 09:39 SAMP1.c
  -rw-rw-r--. 1 makoto makoto 122K 12月 25 09:41 SAMP1.ko  // カーネルモジュール
  -rw-rw-r--. 1 makoto makoto  949 12月 25 09:41 SAMP1.mod.c
  -rw-rw-r--. 1 makoto makoto  70K 12月 25 09:41 SAMP1.mod.o
  -rw-rw-r--. 1 makoto makoto  56K 12月 25 09:41 SAMP1.o
  -rw-rw-r--. 1 makoto makoto   69 12月 25 09:41 modules.order
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP1
  vm12$ modinfo BASE.ko (カーネルモジュールの詳細情報表示)
  
  コマンドの実行結果
  --------------------------------------------------
  filename:       /home/makoto/SAMP1/BASE.ko
  description:    BASE
  author:         Makoto-Araki
  license:        GPL
  srcversion:     5A9A789D1B53D4BFA7708EA
  depends:        (依存しているモジュールなし)
  retpoline:      Y
  name:           BASE
  vermagic:       4.15.3 SMP mod_unload modversions
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP1
  vm12$ modinfo SAMP2.ko (カーネルモジュールの詳細情報表示)
  
  コマンドの実行結果
  --------------------------------------------------
  filename:       /home/makoto/SAMP1/SAMP1.ko
  description:    SAMP1
  author:         Makoto-Araki
  license:        GPL
  srcversion:     7DB3D082E1724DE7F5D6AF2
  depends:        BASE (BASEモジュールに依存している)
  retpoline:      Y
  name:           SAMP1
  vermagic:       4.15.3 SMP mod_unload modversions 
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP1
  vm12$ sudo insmod BASE.ko (カーネルモジュールのロード)
  
  コマンドの実行結果
  --------------------------------------------------
  [ 4534.763526] BASE init -> 初回のみカーネルツリー外からのロードです、という意味の警告メッセージが出力
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP1
  vm12$ sudo insmod SAMP1.ko (カーネルモジュールのロード)
  
  コマンドの実行結果
  --------------------------------------------------
  [ 4638.441836] SAMP1 init
  [ 4638.443573] FUNC1 call  // BASEモジュールの関数実行
  [ 4638.445259] FUNC2 call  // BASEモジュールの関数実行
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP1
  vm12$ sudo rmmod SAMP1.ko (カーネルモジュールのアンロード)
  
  コマンドの実行結果
  --------------------------------------------------
  [ 4701.109105] SAMP1 exit
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP1
  vm12$ sudo rmmod BASE.ko (カーネルモジュールのアンロード)
  
  コマンドの実行結果
  --------------------------------------------------
  [ 4732.850872] BASE exit
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP1
  vm12$ sudo cp -p *.ko /lib/modules/$(uname -r)/kernel/kernel (カーネルモジュールをシステム規定の場所にコピー)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 後のコマンド「modprobe」は依存関係ファイル(modules.dep)に記述が無いと動作しないため
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP1
  vm12$ sudo depmod (依存関係ファイルを更新)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 2分ほど時間がかかった
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo modprobe SAMP1 (カーネルモジュールのロード)
  
  コマンドの実行結果
  --------------------------------------------------
  [ 5218.961025] BASE  init
  [ 5218.963848] SAMP1 init
  [ 5218.965409] FUNC1 call
  [ 5218.967256] FUNC2 call
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo modprobe -r SAMP1 (カーネルモジュールのアンロード)
  
  コマンドの実行結果
  --------------------------------------------------
  [ 5279.873593] SAMP1 exit
  [ 5279.875888] BASE  exit  // BASEモジュールまでアンロードされる仕様
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo modprobe --show-depends SAMP1 (カーネルモジュールの依存関係を表示)
  
  コマンドの実行結果
  --------------------------------------------------
  insmod /lib/modules/4.15.3/kernel/kernel/BASE.ko 
  insmod /lib/modules/4.15.3/kernel/kernel/SAMP1.ko 
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[10]
  カーネルモジュール - 03 (rmmod)
  
[内容]
  ## 作業内容
    作成したカーネルモジュールをコマンド(rmmod)でアンロードする
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  上記の「09」を参照
  
================================================================================
[11]
  カーネルモジュール - 04 (modprobe)
  
[内容]
  ## 作業内容
    作成したカーネルモジュールをコマンド(modprobe)でロード・アンロードする
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  上記の「09」を参照
  
================================================================================
[12]
  カーネルモジュール - 05 (depmod)
  
[内容]
  ## 作業内容
    作成したカーネルモジュールをコマンド(depmod)で依存関係ファイル(modules.dep)に登録する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  上記の「09」を参照
  
================================================================================
[13]
  カーネルモジュール - 06 (modinfo)
  
[内容]
  ## 作業内容
    作成したカーネルモジュールの詳細情報をコマンド(modinfo)で表示する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  上記の「09」を参照
  
================================================================================
[14]
  カーネルモジュール - 07 (lsmod)
  
[内容]
  ## 作業内容
    作成したカーネルモジュールをコマンド(lsmod)で表示する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ lsmod | grep -E 'BASE|SAMP'
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 該当なし
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo modprobe SAMP1 (カーネルモジュールのロード)
  
  コマンドの実行結果
  --------------------------------------------------
  [ 8671.523003] BASE  init
  [ 8671.524501] SAMP1 init
  [ 8671.525855] FUNC1 call
  [ 8671.527614] FUNC2 call
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ lsmod | grep -E 'BASE|SAMP'
  
  コマンドの実行結果
  --------------------------------------------------
  Module                  Size  Used-by
  SAMP1                  16384  0 
  BASE                   16384  1 SAMP1
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[15]
  カーネルモジュール - 08 (cat /proc/modules)
  
[内容]
  ## 作業内容
    作成したカーネルモジュールをコマンド(cat /proc/modules)で表示する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ cat /proc/modules | grep -E 'BASE|SAMP'
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 該当なし
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo modprobe SAMP1 (カーネルモジュールのロード)
  
  コマンドの実行結果
  --------------------------------------------------
  [ 9049.869145] BASE  init
  [ 9049.871072] SAMP1 init
  [ 9049.872323] FUNC1 call
  [ 9049.873543] FUNC2 call
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ cat /proc/modules | grep -E 'BASE|SAMP'
  
  コマンドの実行結果
  --------------------------------------------------
  SAMP1 16384 0 - Live 0x          (null) (OE)
  BASE  16384 1 SAMP1, Live 0x     (null) (OE)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[16]
  カーネルモジュール - 09 (Parameter Set 1)
  
[内容]
  ## 作業内容
    カーネルモジュール起動時にパラメータ値を指定可能にする
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME/SAMP2
  vm12$ vi SAMP2.c (ソースファイル作成)
  
  コマンドの実行結果
  --------------------------------------------------
  #include <linux/module.h>
  #include <linux/kernel.h>
  
  // ライセンス情報
  MODULE_LICENSE("GPL");
  MODULE_AUTHOR("Makoto-Araki");
  MODULE_DESCRIPTION("SAMP2");
  
  // パラメータ値をソース記述
  static int P1 = 11;
  static int P2 = 22;
  
  // カーネルモジュールにパラメータ組込
  module_param(P1, int, S_IWUSR);
  module_param(P2, int, S_IWUSR);
  
  // ロード時
  static int SAMP2_init(void)
  {
    printk( KERN_INFO "SAMP2 init\n" );
    printk( KERN_INFO "P1 = %d\n", P1);  // パラメータ値を表示
    printk( KERN_INFO "P2 = %d\n", P2);  // パラメータ値を表示
    return 0;
  }
  
  // アンロード時
  static void SAMP2_exit(void) { printk( KERN_INFO "SAMP2 exit\n" ); }
  
  module_init( SAMP2_init );
  module_exit( SAMP2_exit );
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP2
  vm12$ vi Makefile (Makefileを記述)
  
  コマンドの実行結果
  --------------------------------------------------
  // 既存ファイル(/lib/modules/4.15.3/build/Makefile)のターゲットを利用
  obj-m := SAMP2.o
  
  all:
    make -C /lib/modules/$(shell uname -r)/build M=$(shell pwd) modules
  
  clean:
    make -C /lib/modules/$(shell uname -r)/build M=$(shell pwd) clean
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP2
  vm12$ make -n (実行処理をシミューレート)
  
  コマンドの実行結果
  --------------------------------------------------
  make -C /lib/modules/4.15.3/build M=/home/makoto/SAMP2 modules
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP2
  vm12$ make (ビルド実行)
  
  コマンドの実行結果
  --------------------------------------------------
  make -C /lib/modules/4.15.3/build M=/home/makoto/SAMP2 modules
  make[1]: ディレクトリ `/usr/src/kernels/linux-4.15.3' に入ります
    CC [M]  /home/makoto/SAMP2/SAMP2.o
    Building modules, stage 2.
    MODPOST 1 modules
    CC      /home/makoto/SAMP2/SAMP2.mod.o
    LD [M]  /home/makoto/SAMP2/SAMP2.ko
  make[1]: ディレクトリ `/usr/src/kernels/linux-4.15.3' から出ます
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP2
  vm12$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-rw-r--. 1 makoto makoto  167 12月 25 12:40 Makefile
  -rw-rw-r--. 1 makoto makoto    0 12月 25 12:42 Module.symvers
  -rw-rw-r--. 1 makoto makoto  748 12月 25 12:39 SAMP2.c
  -rw-rw-r--. 1 makoto makoto 140K 12月 25 12:42 SAMP2.ko  // カーネルモジュール
  -rw-rw-r--. 1 makoto makoto  907 12月 25 12:42 SAMP2.mod.c
  -rw-rw-r--. 1 makoto makoto  70K 12月 25 12:42 SAMP2.mod.o
  -rw-rw-r--. 1 makoto makoto  74K 12月 25 12:42 SAMP2.o
  -rw-rw-r--. 1 makoto makoto   35 12月 25 12:42 modules.order
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP2
  vm12$ modinfo SAMP2.ko (カーネルモジュールの詳細情報表示)
  
  コマンドの実行結果
  --------------------------------------------------
  filename:       /home/makoto/SAMP2/SAMP2.ko
  description:    SAMP2
  author:         Makoto-Araki
  license:        GPL
  srcversion:     630C08CBFDACE4CDD56E017
  depends:        (依存しているモジュールなし)
  retpoline:      Y
  name:           SAMP2
  vermagic:       4.15.3 SMP mod_unload modversions 
  parm:           P1:int  // 追加パラメータ
  parm:           P2:int  // 追加パラメータ
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP2
  vm12$ sudo insmod SAMP2.ko (カーネルモジュールのロード)
  
  コマンドの実行結果
  --------------------------------------------------
  [15242.728079] SAMP2 init
  [15242.729467] P1 = 11  // 追加パラメータ
  [15242.730586] P2 = 22  // 追加パラメータ
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP2
  vm12$ sudo rmmod SAMP2.ko (カーネルモジュールのアンロード)
  
  コマンドの実行結果
  --------------------------------------------------
  [15281.656053] SAMP2 exit
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP2
  vm12$ sudo cp -p *.ko /lib/modules/$(uname -r)/kernel/kernel (カーネルモジュールをコピー)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12$ cd $HOME/SAMP2
  vm12$ sudo depmod (依存関係ファイルを更新)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 2分ほど時間がかかった
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo modprobe SAMP2 (カーネルモジュールのロード)
  
  コマンドの実行結果
  --------------------------------------------------
  [15490.821975] SAMP2 init
  [15490.823478] P1 = 11  // 追加パラメータ
  [15490.824920] P2 = 22  // 追加パラメータ
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo modprobe -r SAMP2 (カーネルモジュールのアンロード)
  
  コマンドの実行結果
  --------------------------------------------------
  [15539.678640] SAMP2 exit
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[17]
  カーネルモジュール - 10 (Parameter Set 2)
  
[内容]
  ## 作業内容
    カーネルモジュール起動時にパラメータ値を設定ファイルから指定可能にする
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd /etc/modprobe.d
  vm12$ sudo vi SAMP2.conf
  
  コマンドの実行結果
  --------------------------------------------------
  options SAMP2 P1=111
  options SAMP2 P2=222
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo modprobe SAMP2 (カーネルモジュールのロード)
  
  コマンドの実行結果
  --------------------------------------------------
  [15765.190123] SAMP2 init
  [15765.191809] P1 = 111  // 設定ファイル値で起動
  [15765.193223] P2 = 222  // 設定ファイル値で起動
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo modprobe -r SAMP2 (カーネルモジュールのアンロード)
  
  コマンドの実行結果
  --------------------------------------------------
  [15806.350829] SAMP2 exit
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[18]
  カーネルパラメータの設定 - 01
  
[内容]
  ## 作業内容
    カーネルパラメータを閲覧・更新する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ cat /proc/sys/net/ipv4/ip_forward (カーネルパラメータ値を閲覧)
  
  コマンドの実行結果
  --------------------------------------------------
  0 -> IPv4のパケット転送禁止
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo echo 1 > /proc/sys/net/ipv4/ip_forward (カーネルパラメータ値を更新)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> rootユーザーにならないとエラー
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ cat /proc/sys/net/ipv4/ip_forward (カーネルパラメータ値を閲覧)
  
  コマンドの実行結果
  --------------------------------------------------
  1 -> IPv4のパケット転送許可
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[19]
  カーネルパラメータの設定 - 02
  
[内容]
  ## 作業内容
    カーネルパラメータを閲覧・更新する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ sysctl net/ipv4/ip_forward (カーネルパラメータ値を閲覧)
  
  コマンドの実行結果
  --------------------------------------------------
  net.ipv4.ip_forward = 0 -> IPv4のパケット転送禁止
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo sysctl -w net/ipv4/ip_forward=1 (カーネルパラメータ値を更新)
  
  コマンドの実行結果
  --------------------------------------------------
  net.ipv4.ip_forward = 1
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sysctl net/ipv4/ip_forward (カーネルパラメータ値を閲覧)
  
  コマンドの実行結果
  --------------------------------------------------
  net.ipv4.ip_forward = 1 -> IPv4のパケット転送許可
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[20]
  カーネルパラメータの設定 - 03
  
[内容]
  ## 作業内容
    カーネルパラメータを閲覧・(永続的に)更新する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ sysctl net/ipv4/ip_forward (カーネルパラメータ値を閲覧)
  
  コマンドの実行結果
  --------------------------------------------------
  net.ipv4.ip_forward = 0 -> IPv4のパケット転送禁止
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo vi /etc/sysctl.conf (設定ファイルでカーネルパラメータの永続化)
  
  コマンドの実行結果
  --------------------------------------------------
  net.ipv4.ip_forward=1
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo sysctl -p /etc/sysctl.conf (設定ファイルからカーネルパラメータ値を反映)
  
  コマンドの実行結果
  --------------------------------------------------
  net.ipv4.ip_forward = 1
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo systemctl reboot (システム再起動)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sysctl net/ipv4/ip_forward (カーネルパラメータ値を閲覧)
  
  コマンドの実行結果
  --------------------------------------------------
  net.ipv4.ip_forward = 1 -> IPv4のパケット転送許可
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[21]
  初期RAMディスク - 01 (lsinitrd)
  
[内容]
  ## 作業内容
    初期RAMディスクの内容を確認
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd /boot
  vm12$ ls -lh | grep -E 'vmlinuz|initramfs' (仮想マシン上のカーネルイメージと初期RAMディスクを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  lrwxrwxrwx. 1 root root   20 12月  4 15:46 vmlinuz -> /boot/vmlinuz-4.15.3       // システムは新カーネル(4.15.3)を起動
  -rw-------. 1 root root  21M 12月  1 19:41 initramfs-3.10.0-1160.el7.x86_64.img  // 初期RAMディスク(3.10.0)
  -rw-------. 1 root root  41M 12月  4 15:53 initramfs-4.15.3.img                  // 初期RAMディスク(4.15.3)
  -rwxr-xr-x. 1 root root 6.5M 10月 20  2020 vmlinuz-3.10.0-1160.el7.x86_64        // カーネルイメージ(3.10.0)
  -rw-r--r--. 1 root root 7.2M 12月  4 15:46 vmlinuz-4.15.3                        // カーネルイメージ(4.15.3)
  --------------------------------------------------
  
  vm12$ cd /boot
  vm12$ sudo lsinitrd initramfs-4.15.3.img | head -n 50 (初期RAMディスクの内容を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  // 確認内容の初期RAMディスクとそのファイルサイズ
  Image: initramfs-4.15.3.img: 41M
  Version: dracut-033-572.el7
  
  // ファイル指定のオプション(-f)指定
  Arguments: -H -f
  
  // モジュール一覧
  dracut modules:
  bash
  nss-softokn
  i18n
  network
  ifcfg
  drm
  plymouth
  dm
  kernel-modules
  lvm
  qemu
  qemu-net
  resume
  rootfs-block
  terminfo
  udev-rules
  biosdevname
  systemd
  usrmount
  base
  fs-lib
  microcode_ctl-fw_dir_override
  shutdown
  
  // 初期RAMディスク内のファイル一覧(一部)
  drwxr-xr-x  12 root     root            0 Dec 25 00:41 .
  crw-r--r--   1 root     root       5,   1 Dec 25 00:35 dev/console
  crw-r--r--   1 root     root       1,  11 Dec 25 00:35 dev/kmsg
  crw-r--r--   1 root     root       1,   3 Dec 25 00:35 dev/null
  lrwxrwxrwx   1 root     root            7 Dec 25 00:35 bin -> usr/bin
  drwxr-xr-x   2 root     root            0 Dec 25 00:35 dev
  drwxr-xr-x  12 root     root            0 Dec 25 00:41 etc
  drwxr-xr-x   2 root     root            0 Dec 25 00:35 etc/cmdline.d
  drwxr-xr-x   2 root     root            0 Dec 25 00:41 etc/conf.d
  -rw-r--r--   1 root     root          124 Dec 25 00:41 etc/conf.d/systemd.conf
  -rw-r--r--   1 root     root          262 Oct  1  2020 etc/dhclient.conf
  -rw-r--r--   1 root     root            0 Dec 25 00:40 etc/fstab.empty
  -rw-r--r--   1 root     root          174 Dec 25 00:40 etc/group
  -rw-r--r--   1 root     root            5 Dec 22 17:22 etc/hostname
  -rw-r--r--   1 root     root          170 Dec 25 00:40 etc/initrd-release
  -rw-r--r--   1 root     root         8043 Dec 25 00:41 etc/ld.so.cache
  -rw-r--r--   1 root     root           28 Feb 28  2013 etc/ld.so.conf
  drwxr-xr-x   2 root     root            0 Dec 25 00:41 etc/ld.so.conf.d
  -rw-r--r--   1 root     root           26 Oct 14  2020 etc/ld.so.conf.d/bind-export-x86_64.conf
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[22]
  初期RAMディスク - 02 (mkinitrd)
  
[内容]
  ## 作業内容
    初期RAMディスクをコマンド(mkinitrd)で作成
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME/TEMP1
  vm12$ sudo mkinitrd BBB.img $(uname -r) (初期RAMディスクをコマンドで作成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 5分程かかる
  --------------------------------------------------
  
  vm12$ cd $HOME/TEMP1
  vm12$ sudo lsinitrd BBB.img (初期RAMディスクの内容を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 前記録を参照
  --------------------------------------------------
  
  vm12$ cd $HOME/TEMP1
  vm12$ sudo zcat BBB.img | cpio -i (初期RAMディスクを展開)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> コマンド(mknod)部分でエラー出力されたが続行
  --------------------------------------------------
  
  vm12$ cd $HOME/TEMP1
  vm12$ sudo rm BBB.img (初期RAMディスクを削除)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12$ cd $HOME/TEMP1
  vm12$ ls -lh
  
  コマンドの実行結果
  --------------------------------------------------
  lrwxrwxrwx.  1 makoto makoto    7 12月  6 10:16 bin -> usr/bin
  drwxr-xr-x.  2 makoto makoto    6 12月  6 10:16 dev
  drwxr-xr-x. 12 makoto makoto 4.0K 12月  6 10:16 etc
  lrwxrwxrwx.  1 makoto makoto   23 12月  6 10:16 init -> usr/lib/systemd/systemd
  lrwxrwxrwx.  1 makoto makoto    7 12月  6 10:16 lib -> usr/lib
  lrwxrwxrwx.  1 makoto makoto    9 12月  6 10:16 lib64 -> usr/lib64
  drwxr-xr-x.  2 makoto makoto    6 12月  6 10:16 proc
  drwxr-xr-x.  2 makoto makoto    6 12月  6 10:16 root
  drwxr-xr-x.  2 makoto makoto    6 12月  6 10:16 run
  lrwxrwxrwx.  1 makoto makoto    8 12月  6 10:16 sbin -> usr/sbin
  -rwxr-xr-x.  1 makoto makoto 3.1K 12月  6 10:16 shutdown
  drwxr-xr-x.  2 makoto makoto    6 12月  6 10:16 sys
  drwxr-xr-x.  2 makoto makoto    6 12月  6 10:16 sysroot
  drwxr-xr-x.  2 makoto makoto    6 12月  6 10:16 tmp
  drwxr-xr-x.  7 makoto makoto   66 12月  6 10:16 usr
  drwxr-xr-x.  2 makoto makoto   29 12月  6 10:16 var
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[23]
  仮想ファイルシステム(/proc) - 01 (cat /proc/cmdline)
  
[内容]
  ## 作業内容
    システム起動時のカーネル引数を確認する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ cat /proc/cmdline (システム起動時のカーネル引数)
  
  コマンドの実行結果
  --------------------------------------------------
  BOOT_IMAGE=/vmlinuz-4.15.3         // カーネルイメージ(/boot/vmlinuz-4.15.3)
  root=/dev/mapper/centos_vm11-root  // 起動デバイス
  ro                                 // 読取専用
  crashkernel=auto                   // 不明
  rd.lvm.lv=centos_vm11/root         // 不明
  rd.lvm.lv=centos_vm11/swap         // 不明
  console=ttyS0,115200n8             // 仮想マシン作成時にブートローダーに指定したコンソール接続のためのパラメータ
  LANG=ja_JP.UTF-8                   // 言語・国・文字コード
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[24]
  仮想ファイルシステム(/proc) - 02 (cat /proc/cpuinfo)
  
[内容]
  ## 作業内容
    CPU情報を確認する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ cat /proc/cpuinfo (CPU情報を確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  processor        : 0                                   // CPUのID
  vendor_id        : GenuineIntel                        // ベンダーID
  cpu family       : 6                                   // 不明
  model            : 26                                  // 不明
  model name       : Intel Core i7 9xx (Nehalem Core i7, IBRS update)
  stepping         : 3                                   // 不明
  microcode        : 0x1                                 // 不明
  cpu MHz          : 2394.414                            // 不明
  cache size       : 4096 KB                             // 不明
  physical id      : 0                                   // 不明
  siblings         : 1                                   // 不明
  core id          : 0                                   // 不明
  cpu cores        : 1                                   // CPU内のコア数
  apicid           : 0                                   // 不明
  initial apicid   : 0                                   // 不明
  fpu              : yes                                 // 不明
  fpu_exception    : yes                                 // 不明
  cpuid level      : 11                                  // 不明
  wp               : yes                                 // 不明
  flags            : fpu de pse tsc msr pae ..           // vmx -> CPUがKVMに対応している
  bugs             : cpu_meltdown spectre_v1 spectre_v2  // 不明
  bogomips         : 4788.82                             // 不明
  clflush size     : 64                                  // 不明
  cache_alignment  : 64                                  // 不明
  address sizes    : 36 bits physical, 48 bits virtual   // 不明
  power management :                                     // 不明
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[25]
  仮想ファイルシステム(/proc) - 03 (cat /proc/filesystems)
  
[内容]
  ## 作業内容
    ファイルシステム情報を確認する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ cat /proc/filesystems (ファイルシステム情報を確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  nodev  sysfs
  nodev  rootfs
  nodev  ramfs
  nodev  bdev
  nodev  proc
  nodev  cpuset
  nodev  cgroup
  nodev  cgroup2
  nodev  tmpfs
  nodev  devtmpfs
  nodev  configfs
  nodev  debugfs
  nodev  tracefs
  nodev  securityfs
  nodev  sockfs
  nodev  dax
  nodev  bpf
  nodev  pipefs
  nodev  hugetlbfs
  nodev  devpts
  nodev  autofs
  nodev  pstore
  nodev  mqueue
  nodev  selinuxfs
         xfs  // システムで使用中のファイルシステム
  --------------------------------------------------
  
  以下の確認に続く

================================================================================
[26]
  仮想ファイルシステム(/proc) - 04 (cat /proc/swaps)
  
[内容]
  ## 作業内容
    使用中のスワップ領域を確認する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ cat /proc/swaps (使用中のスワップ領域)
  
  コマンドの実行結果
  --------------------------------------------------
  Filename    Type         Size        Used     Priority
  /dev/dm-1   partition    2097148     268      -2
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[27]
  仮想ファイルシステム(/proc) - 05 (cat /proc/version)
  
[内容]
  ## 作業内容
    バージョン情報を確認する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ cat /proc/version (バージョン情報)
  
  コマンドの実行結果
  --------------------------------------------------
  Linux version 4.15.3 (root@vm12) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-44) (GCC))
  #1 SMP Sat Dec 4 10:54:37 JST 2021
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[28]
  仮想ファイルシステム(/proc) - 06 (ls -lh /proc/bus/pci)
  
[内容]
  ## 作業内容
    PCIバス情報を確認する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ ls -lh /proc/bus/pci (PCIバス情報を確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  dr-xr-xr-x. 2 root root 0 12月 25 20:19 00       // PCIバス「00」
  -r--r--r--. 1 root root 0 12月 25 20:19 devices  // 不明
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ ls -lh /proc/bus/pci/00 (PCIバス「00」のデバイスを確認する)
  
  コマンドの実行結果
  --------------------------------------------------
  -rw-r--r--. 1 root root 256 12月 25 20:26 00.0  // スロット「00」、デバイス「0」
  -rw-r--r--. 1 root root 256 12月 25 20:26 01.0  // スロット「01」、デバイス「0」
  -rw-r--r--. 1 root root 256 12月 25 20:26 01.1  // スロット「01」、デバイス「1」
  -rw-r--r--. 1 root root 256 12月 25 20:26 01.3
  -rw-r--r--. 1 root root 256 12月 25 20:26 03.0
  -rw-r--r--. 1 root root 256 12月 25 20:26 04.0
  -rw-r--r--. 1 root root 256 12月 25 20:26 04.1
  -rw-r--r--. 1 root root 256 12月 25 20:26 04.2
  -rw-r--r--. 1 root root 256 12月 25 20:26 04.7
  -rw-r--r--. 1 root root 256 12月 25 20:26 05.0
  -rw-r--r--. 1 root root 256 12月 25 20:26 06.0
  -rw-r--r--. 1 root root 256 12月 25 20:26 07.0
  -rw-r--r--. 1 root root 256 12月 25 20:26 08.0
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ file /proc/bus/pci/00/00.0 (PCIバス「00」、スロット「00」のデバイス情報)
  
  コマンドの実行結果
  --------------------------------------------------
  /proc/bus/pci/00/00.0: data -> エディタで閲覧不可
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo yum -y install pciutils (パッケージ追加)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ lspci | grep 00:00 (PCIバス「00」、スロット「00」のデバイス情報)
  
  コマンドの実行結果
  --------------------------------------------------
  00:00.0 Host bridge: Intel Corporation 440FX - 82441FX PMC [Natoma] (rev 02)
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ lspci -s 00:00 (PCIバス「00」、スロット「00」のデバイス情報)
  
  コマンドの実行結果
  --------------------------------------------------
  00:00.0 Host bridge: Intel Corporation 440FX - 82441FX PMC [Natoma] (rev 02)
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[29]
  仮想ファイルシステム(/proc) - 07 (ls -lh /proc/bus/usb)
  
[内容]
  ## 作業内容
    USBバス情報を確認する
  
  ## 使用マシン
    HOST : vm12
    IPV4 : 192.168.122.12
    MEMO : 仮想マシン(サーバー用途)
  
[確認]
  vm12$ cd $HOME
  vm12$ sudo find /proc -type d | grep -i usb (USBバス情報を検索する)
  
  コマンドの実行結果
  --------------------------------------------------
  /proc/irq/10/uhci_hcd:usb3 -> パス(/proc/bus/usb)が存在しない
  /proc/irq/10/uhci_hcd:usb4
  /proc/irq/11/ehci_hcd:usb1
  /proc/irq/11/uhci_hcd:usb2
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo find /proc -type f | grep -i usb (USBバス情報を検索する)
  
  コマンドの実行結果
  --------------------------------------------------
  /proc/tty/driver/usbserial -> パス(/proc/bus/usb)が存在しない
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo yum -y install usbutils (パッケージのインストール)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> エラー出力が無ければOK
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ lsusb (USBデバイスを検索)
  
  コマンドの実行結果
  --------------------------------------------------
  Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
  Bus 004 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
  Bus 003 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
  Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ lsusb -s 001:001 (USBバス「001」、デバイス「001」のデバイス情報)
  
  コマンドの実行結果
  --------------------------------------------------
  Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[20]
  デバイスファイル
  
[内容]
  ## 仮想マシン
    HOST : vm12
    IPv4 : 192.168.122.12
    GW   : 192.168.122.1
    DNS  : 192.168.122.1
  
  ## 作業内容
    デバイスファイルの情報を追跡してみる
  
[確認]
  $ cd $HOME
  $ sudo virsh start vm12 --console
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 仮想マシンの起動
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ ls -lh /dev | grep -E '^b' (ブロック型デバイスファイル)
  
  コマンドの実行結果
  --------------------------------------------------
  brw-rw----. 1 root   disk    253,   0 12月  6 09:11 dm-0
  brw-rw----. 1 root   disk    253,   1 12月  6 09:11 dm-1
  brw-rw----. 1 root   cdrom    11,   0 12月  6 09:11 sr0
  brw-rw----. 1 root   disk    252,   0 12月  6 09:11 vda
  brw-rw----. 1 root   disk    252,   1 12月  6 09:11 vda1
  brw-rw----. 1 root   disk    252,   2 12月  6 09:11 vda2
  
  // 252 : メジャー番号
  // 0   : マイナー番号
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ cat /proc/devices | grep -E '252|253' (メジャー番号252,253が何を意味するか調査)
  
  コマンドの実行結果
  --------------------------------------------------
  252 dax            // 不明 -> おそらく関係ない
  253 tpm            // 不明 -> おそらく関係ない
  252 virtblk        // 仮想ブロック(おそらく仮想マシン内の仮想ディスクを指す)
  253 device-mapper  // 不明
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[21]
  ループバックデバイス
  
[内容]
  ## 仮想マシン
    HOST : vm12
    IPv4 : 192.168.122.12
    GW   : 192.168.122.1
    DNS  : 192.168.122.1
  
  ## 作業内容
    ディスクイメージからループバックデバイス作成
  
[確認]
  $ cd $HOME
  $ sudo virsh start vm12 --console
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 仮想マシンの起動
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ dd if=/dev/zero of=loop0.img bs=1M count=10 (ディスクイメージ作成)
  
  コマンドの実行結果
  --------------------------------------------------
  10+0 レコード入力
  10+0 レコード出力
  10485760 バイト (10 MB) コピーされました、 0.0541071 秒、 194 MB/秒
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo losetup /dev/loop0 loop0.img (ディスクイメージからループバックデバイス作成)
  
  コマンドの実行結果
  --------------------------------------------------
  [28369.495203] loop: module loaded
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ losetup -l (ループバックデバイス確認)
  
  コマンドの実行結果
  --------------------------------------------------
  NAME       SIZELIMIT  OFFSET  AUTOCLEAR  RO  BACK-FILE
  /dev/loop0         0       0          0   0  /home/makoto/loop0.img
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo mkfs.ext4 /dev/loop0 (ループバックデバイスにファイルシステム構築)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> ブロック割当のメッセージが多数出力されるが成功
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo mount -t ext4 /dev/loop0 /mnt (ループバックデバイスをマウント)
  
  コマンドの実行結果
  --------------------------------------------------
  [28616.334079] EXT4-fs (loop0): mounted filesystem with ordered data mode. Opts: (null)
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ df -lh (ループバックデバイスをブロックデバイスとして確認1)
  
  コマンドの実行結果
  --------------------------------------------------
  ファイルシス                       サイズ   使用   残り   使用% マウント位置
  devtmpfs                       466M     0  466M    0% /dev
  tmpfs                          489M     0  489M    0% /dev/shm
  tmpfs                          489M  6.6M  482M    2% /run
  tmpfs                          489M     0  489M    0% /sys/fs/cgroup
  /dev/mapper/centos_vm11-root    17G  5.4G   12G   32% /
  /dev/vda1                     1014M  188M  827M   19% /boot
  tmpfs                           98M     0   98M    0% /run/user/1000
  /dev/loop0                     8.7M  172K  7.9M    3% /mnt (ループバックデバイス)
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ lsblk (ループバックデバイスをブロックデバイスとして確認2)
  
  コマンドの実行結果
  --------------------------------------------------
  NAME                 MAJ:MIN RM  SIZE RO TYPE MOUNTPOINT
  sr0                   11:0    1 1024M  0 rom  
  loop0                  7:0    0   10M  0 loop /mnt (ループバックデバイス)
  vda                  252:0    0   20G  0 disk 
  ├─vda2               252:2    0   19G  0 part 
  │ ├─centos_vm11-swap 253:1    0    2G  0 lvm  [SWAP]
  │ └─centos_vm11-root 253:0    0   17G  0 lvm  /
  └─vda1               252:1    0    1G  0 part /boot
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo umount /mnt (ループバックデバイスをアンマウント)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo losetup -D (ループバックデバイスを一括削除)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略)
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ losetup -l (ループバックデバイス確認)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ rm -f loop0.img (ディスクイメージ削除)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[22]
  動的デバイス管理 - 1 (ルール記述)
  
[内容]
  ## 仮想マシン
    HOST : vm12
    IPv4 : 192.168.122.12
    GW   : 192.168.122.1
    DNS  : 192.168.122.1
  
  ## 動的デバイス管理
    1. カーネルがデバイスの追加または削除を認識
    2. カーネルがパス(/sys)配下にデバイス情報を作成
    3. カーネルがプロセス(udevd)に通知(uevent)
    4. プロセス(udevd)はパス(/sys)配下とルール(後述)を参照してデバイスファイルを作成
  
  ## 作業内容
    ループバックデバイス検出時にルール通りのコマンドが実行されるか確認する
  
[確認]
  $ cd $HOME
  $ sudo virsh start vm12 --console
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 仮想マシンの起動
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ systemctl is-active systemd-udevd (プロセスの稼働状況を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  active -> プロセス(udevd)の実体はsystemd-udevd
  --------------------------------------------------
  
  vm12$ cd /etc/udev/rules.d
  vm12$ sudo vi 10-loopback.rules (ルール作成)
  
  コマンドの実行結果
  --------------------------------------------------
  # ループバックデバイス検出時にコマンド実行
  KERNEL=="loop*", RUN="/bin/logger %k %p"
  
  // %k : デバイス名
  // %p : デバイスファイル(絶対パス)
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ dd if=/dev/zero of=loop0.img bs=1M count=10 (ディスクイメージ作成)
  
  コマンドの実行結果
  --------------------------------------------------
  10+0 レコード入力
  10+0 レコード出力
  10485760 バイト (10 MB) コピーされました、 0.0378319 秒、 277 MB/秒
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo losetup /dev/loop0 loop0.img (ディスクイメージからループバックデバイス作成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ losetup -l (ループバックデバイス確認)
  
  コマンドの実行結果
  --------------------------------------------------
  NAME       SIZELIMIT  OFFSET  AUTOCLEAR  RO  BACK-FILE
  /dev/loop0         0       0          0   0  /home/makoto/loop0.img
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ journalctl --no-pager | grep loop0 (ジャーナルを確認)
  
  コマンドの実行結果
  --------------------------------------------------
  12月 06 18:36:12 vm12 root[11478]: loop0 /devices/virtual/block/loop0
  12月 06 18:36:12 vm12 root[11480]: loop0 /devices/virtual/block/loop0
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo losetup -D (ループバックデバイスを一括削除)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ losetup -l (ループバックデバイス確認)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ rm -f loop0.img (ディスクイメージ削除)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[23]
  動的デバイス管理 - 2 (udevadm info)
  
[内容]
  ## 仮想マシン
    HOST : vm12
    IPv4 : 192.168.122.12
    GW   : 192.168.122.1
    DNS  : 192.168.122.1
  
  ## 動的デバイス管理
    01. カーネルがデバイスの追加または削除を認識
    02. カーネルがパス(/sys)配下にデバイス情報を作成
    03. カーネルがプロセス(udevd)に通知(uevent)
    04. プロセス(udevd)はパス(/sys)配下とルール(後述)を参照してデバイスファイルを作成
  
  ## 作業内容
    ループバックデバイス検出をコマンド(udevadm info)でモニターする
  
[確認]
  $ cd $HOME
  $ sudo virsh start vm12 --console
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 仮想マシンの起動
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ systemctl is-active systemd-udevd (プロセスの稼働状況を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  active -> プロセス(udevd)の実体はsystemd-udevd
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ dd if=/dev/zero of=loop1.img bs=1M count=10 (ディスクイメージ作成)
  
  コマンドの実行結果
  --------------------------------------------------
  10+0 レコード入力
  10+0 レコード出力
  10485760 バイト (10 MB) コピーされました、 0.0378319 秒、 277 MB/秒
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo losetup /dev/loop1 loop1.img (ディスクイメージからループバックデバイス作成)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ losetup -l (ループバックデバイス確認)
  
  コマンドの実行結果
  --------------------------------------------------
  NAME       SIZELIMIT  OFFSET  AUTOCLEAR  RO  BACK-FILE
  /dev/loop1         0       0          0   0  /home/makoto/loop1.img
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ udevadm info -n /dev/loop1 (デバイス名指定)
  
  コマンドの実行結果
  --------------------------------------------------
  P: /devices/virtual/block/loop1          // デバイス名(sys)
  N: loop1                                 // 名前
  E: DEVNAME=/dev/loop1                    // デバイス名
  E: DEVPATH=/devices/virtual/block/loop1  // プロパティ
  E: DEVTYPE=disk                          // プロパティ
  E: MAJOR=7                               // プロパティ
  E: MINOR=1                               // プロパティ
  E: SUBSYSTEM=block                       // プロパティ
  E: TAGS=:systemd:                        // プロパティ
  E: USEC_INITIALIZED=36141906492          // プロパティ
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ udevadm info -p /devices/virtual/block/loop1 (デバイス名(sysfs)指定)
  
  コマンドの実行結果
  --------------------------------------------------
  P: /devices/virtual/block/loop1          // デバイス名(sys)
  N: loop1                                 // 名前
  E: DEVNAME=/dev/loop1                    // デバイス名
  E: DEVPATH=/devices/virtual/block/loop1  // プロパティ
  E: DEVTYPE=disk                          // プロパティ
  E: MAJOR=7                               // プロパティ
  E: MINOR=1                               // プロパティ
  E: SUBSYSTEM=block                       // プロパティ
  E: TAGS=:systemd:                        // プロパティ
  E: USEC_INITIALIZED=36141906492          // プロパティ
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ udevadm info -n /dev/loop1 -q name (デバイス名からの問合せ結果から名前のみ抽出)
  
  コマンドの実行結果
  --------------------------------------------------
  loop1
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ udevadm info -n /dev/loop1 -q property (デバイス名からの問合せ結果からプロパティ表示)
  
  コマンドの実行結果
  --------------------------------------------------
  E: DEVNAME=/dev/loop1                    // デバイス名
  E: DEVPATH=/devices/virtual/block/loop1  // プロパティ
  E: DEVTYPE=disk                          // プロパティ
  E: MAJOR=7                               // プロパティ
  E: MINOR=1                               // プロパティ
  E: SUBSYSTEM=block                       // プロパティ
  E: TAGS=:systemd:                        // プロパティ
  E: USEC_INITIALIZED=36141906492          // プロパティ
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ udevadm info -n /dev/loop1 -q all (デバイス名からの問合せ結果から全情報表示)
  
  コマンドの実行結果
  --------------------------------------------------
  P: /devices/virtual/block/loop1          // デバイス名(sys)
  N: loop1                                 // 名前
  E: DEVNAME=/dev/loop1                    // デバイス名
  E: DEVPATH=/devices/virtual/block/loop1  // プロパティ
  E: DEVTYPE=disk                          // プロパティ
  E: MAJOR=7                               // プロパティ
  E: MINOR=1                               // プロパティ
  E: SUBSYSTEM=block                       // プロパティ
  E: TAGS=:systemd:                        // プロパティ
  E: USEC_INITIALIZED=36141906492          // プロパティ
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ sudo losetup -D (ループバックデバイスを一括削除)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ losetup -l (ループバックデバイス確認)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  vm12$ cd $HOME
  vm12$ rm -f loop1.img (ディスクイメージ削除)
  
  コマンドの実行結果
  --------------------------------------------------
  (省略) -> 出力なし
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================
[24]
  デバイス(USB)の自動検出
  
[内容]
  ## 作業内容
    デバイス(USB)の自動検出をモニタリング
  
[確認]
  # cd $HOME
  # systemctl is-active systemd-udevd (プロセスの稼働状況を確認)
  
  コマンドの実行結果
  --------------------------------------------------
  active
  --------------------------------------------------
  
  # cd $HOME
  # lsblk (ブロックデバイス確認)
  
  コマンドの実行結果
  --------------------------------------------------
  NAME            MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
  sda               8:0    0   477G  0 disk 
  ├─sda1            8:1    0     1G  0 part /boot
  └─sda2            8:2    0   476G  0 part 
    ├─centos-root 253:0    0    50G  0 lvm  /
    ├─centos-swap 253:1    0   3.8G  0 lvm  [SWAP]
    └─centos-home 253:2    0 422.2G  0 lvm  /home
  --------------------------------------------------
  
  # cd $HOME
  # udevadm monitor (デバイス接続のモニタリング開始)
  
  コマンドの実行結果
  --------------------------------------------------
  monitor will print the received events for:
  UDEV   - the event which udev sends out after rule processing
  KERNEL - the kernel uevent
  
  // ここでUSBメモリ接続
  
  KERNEL[27052.818517] add /devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.1 (usb)
  KERNEL[27052.819669] add /devices/pci0000:00/0000:00:1d.0/usb2/2-1/2-1.1/2-1.1:1.0 (usb)
    -- 省略 --
  KERNEL[27058.610690] add /module/vfat (module)
  UDEV  [27058.611319] add /module/vfat (module)
  --------------------------------------------------
  
  # cd $HOME
  # lsblk (ブロックデバイス確認)
  
  コマンドの実行結果
  --------------------------------------------------
  NAME            MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
  sda               8:0    0   477G  0 disk 
  ├─sda1            8:1    0     1G  0 part /boot
  └─sda2            8:2    0   476G  0 part 
    ├─centos-root 253:0    0    50G  0 lvm  /
    ├─centos-swap 253:1    0   3.8G  0 lvm  [SWAP]
    └─centos-home 253:2    0 422.2G  0 lvm  /home
  sdb               8:16   1    15G  0 disk (USBメモリ)
  └─sdb1            8:17   1    15G  0 part /run/media/makoto/CentOS 7 x86_64
  --------------------------------------------------
  
  # cd $HOME
  # lsusb (デバイス(USB)をコマンドで調査)
  
  コマンドの実行結果
  --------------------------------------------------
  Bus 002 Device 008: ID 056e:6042 Elecom Co., Ltd  (USBメモリ)
  Bus 002 Device 002: ID 8087:0024 Intel Corp. Integrated Rate Matching Hub
  Bus 002 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
  Bus 004 Device 001: ID 1d6b:0003 Linux Foundation 3.0 root hub
  Bus 003 Device 002: ID 046d:c019 Logitech, Inc. Optical Tilt Wheel Mouse
  Bus 003 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
  Bus 001 Device 003: ID 8086:0186 Intel Corp. WiMAX Connection 2400m
  Bus 001 Device 002: ID 8087:0024 Intel Corp. Integrated Rate Matching Hub
  Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
  --------------------------------------------------
  
  以下の確認に続く
  
================================================================================

